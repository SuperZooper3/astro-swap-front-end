{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "exchange",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "sharesBurned",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ethDivested",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensDivested",
          "type": "uint256"
        }
      ],
      "name": "Divestment",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "exchange",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ethOut",
          "type": "uint256"
        }
      ],
      "name": "EthPurchase",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "exchange",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "sharesPurchased",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ethInvested",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensInvested",
          "type": "uint256"
        }
      ],
      "name": "Investment",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "exchange",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ethIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensOut",
          "type": "uint256"
        }
      ],
      "name": "TokenPurchase",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "exchange",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenExchangeAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ethTransfer",
          "type": "uint256"
        }
      ],
      "name": "TokenToToken",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "divest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minTokensOut",
          "type": "uint256"
        }
      ],
      "name": "ethToToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokensPaid",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "exchangeCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "exchanges",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "ethPool",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenPool",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalShares",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "ethValue",
          "type": "uint256"
        }
      ],
      "name": "getEthToTokenQuote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenQuote",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "investor",
          "type": "address"
        }
      ],
      "name": "getShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shareCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenValue",
          "type": "uint256"
        }
      ],
      "name": "getTokenToEthQuote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "ethQuote",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "maxTokensInvested",
          "type": "uint256"
        }
      ],
      "name": "invest",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "ethPaid",
          "type": "uint256"
        }
      ],
      "name": "investQuoteFromEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokensRequired",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokensPaid",
          "type": "uint256"
        }
      ],
      "name": "investQuoteFromTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "ethRequired",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenInvestment",
          "type": "uint256"
        }
      ],
      "name": "seedInvest",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokensIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minEthOut",
          "type": "uint256"
        }
      ],
      "name": "tokenToEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "ethPaid",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenFromAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenToAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokensIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minTokensOut",
          "type": "uint256"
        }
      ],
      "name": "tokenToToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokensPaid",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/super/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/token/ERC20/IERC20.sol",
    "1": "contracts/MiniSwap.sol"
  },
  "ast": {
    "absolutePath": "contracts/MiniSwap.sol",
    "exportedSymbols": {
      "IERC20": [
        1022
      ],
      "MiniSwap": [
        944
      ]
    },
    "id": 945,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "58:23:1"
      },
      {
        "absolutePath": "C:/Users/super/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 945,
        "sourceUnit": 1023,
        "src": "83:56:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "MiniSwap",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 944,
        "linearizedBaseContracts": [
          944
        ],
        "name": "MiniSwap",
        "nameLocation": "322:8:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "978bbdb9",
            "id": 4,
            "mutability": "mutable",
            "name": "feeRate",
            "nameLocation": "352:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 944,
            "src": "337:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "337:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "68972e50",
            "id": 6,
            "mutability": "mutable",
            "name": "exchangeCount",
            "nameLocation": "380:13:1",
            "nodeType": "VariableDeclaration",
            "scope": 944,
            "src": "365:28:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "365:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "MiniSwap.Exchange",
            "id": 20,
            "members": [
              {
                "constant": false,
                "id": 9,
                "mutability": "mutable",
                "name": "token",
                "nameLocation": "433:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 20,
                "src": "426:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$1022",
                  "typeString": "contract IERC20"
                },
                "typeName": {
                  "id": 8,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 7,
                    "name": "IERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1022,
                    "src": "426:6:1"
                  },
                  "referencedDeclaration": 1022,
                  "src": "426:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1022",
                    "typeString": "contract IERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "ethPool",
                "nameLocation": "456:7:1",
                "nodeType": "VariableDeclaration",
                "scope": 20,
                "src": "448:15:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 10,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "448:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "tokenPool",
                "nameLocation": "481:9:1",
                "nodeType": "VariableDeclaration",
                "scope": 20,
                "src": "473:17:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 12,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "473:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "mutability": "mutable",
                "name": "investorShares",
                "nameLocation": "645:14:1",
                "nodeType": "VariableDeclaration",
                "scope": 20,
                "src": "616:43:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "typeName": {
                  "id": 16,
                  "keyType": {
                    "id": 14,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "625:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "616:28:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "valueType": {
                    "id": 15,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "636:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 19,
                "mutability": "mutable",
                "name": "totalShares",
                "nameLocation": "677:11:1",
                "nodeType": "VariableDeclaration",
                "scope": 20,
                "src": "669:19:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 18,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "669:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Exchange",
            "nameLocation": "407:8:1",
            "nodeType": "StructDefinition",
            "scope": 944,
            "src": "400:295:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7412dbb3",
            "id": 25,
            "mutability": "mutable",
            "name": "exchanges",
            "nameLocation": "739:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 944,
            "src": "702:46:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
              "typeString": "mapping(address => struct MiniSwap.Exchange)"
            },
            "typeName": {
              "id": 24,
              "keyType": {
                "id": 21,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "711:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "702:29:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                "typeString": "mapping(address => struct MiniSwap.Exchange)"
              },
              "valueType": {
                "id": 23,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 22,
                  "name": "Exchange",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 20,
                  "src": "722:8:1"
                },
                "referencedDeclaration": 20,
                "src": "722:8:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Exchange_$20_storage_ptr",
                  "typeString": "struct MiniSwap.Exchange"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 37,
            "name": "TokenPurchase",
            "nameLocation": "808:13:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "exchange",
                  "nameLocation": "838:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "822:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "822:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "864:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "848:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "848:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "886:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "870:25:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "870:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ethIn",
                  "nameLocation": "905:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "897:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "897:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokensOut",
                  "nameLocation": "920:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "912:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "912:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "821:109:1"
            },
            "src": "802:129:1"
          },
          {
            "anonymous": false,
            "id": 49,
            "name": "EthPurchase",
            "nameLocation": "942:11:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 48,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "exchange",
                  "nameLocation": "970:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 49,
                  "src": "954:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "954:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "996:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 49,
                  "src": "980:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "980:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1018:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 49,
                  "src": "1002:25:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1002:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokensIn",
                  "nameLocation": "1037:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 49,
                  "src": "1029:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1029:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ethOut",
                  "nameLocation": "1055:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 49,
                  "src": "1047:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1047:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "953:109:1"
            },
            "src": "936:127:1"
          },
          {
            "anonymous": false,
            "id": 63,
            "name": "TokenToToken",
            "nameLocation": "1074:12:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "exchange",
                  "nameLocation": "1103:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "1087:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1087:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1129:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "1113:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1113:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1143:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "1135:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1135:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenExchangeAddress",
                  "nameLocation": "1170:20:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "1154:36:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1154:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokensIn",
                  "nameLocation": "1200:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "1192:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1192:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ethTransfer",
                  "nameLocation": "1218:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "1210:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1210:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1086:144:1"
            },
            "src": "1068:163:1"
          },
          {
            "anonymous": false,
            "id": 75,
            "name": "Investment",
            "nameLocation": "1300:10:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "exchange",
                  "nameLocation": "1327:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "1311:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1311:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1353:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "1337:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1337:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sharesPurchased",
                  "nameLocation": "1375:15:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "1359:31:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1359:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ethInvested",
                  "nameLocation": "1400:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "1392:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1392:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokensInvested",
                  "nameLocation": "1421:14:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "1413:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1413:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1310:126:1"
            },
            "src": "1294:143:1"
          },
          {
            "anonymous": false,
            "id": 87,
            "name": "Divestment",
            "nameLocation": "1448:10:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "exchange",
                  "nameLocation": "1475:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "1459:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1459:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1501:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "1485:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1485:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sharesBurned",
                  "nameLocation": "1523:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "1507:28:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1507:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ethDivested",
                  "nameLocation": "1545:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "1537:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1537:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokensDivested",
                  "nameLocation": "1566:14:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "1558:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1558:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1458:123:1"
            },
            "src": "1442:140:1"
          },
          {
            "body": {
              "id": 96,
              "nodeType": "Block",
              "src": "1618:31:1",
              "statements": [
                {
                  "expression": {
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 92,
                      "name": "feeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "1628:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 93,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89,
                      "src": "1638:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1628:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "1628:14:1"
                }
              ]
            },
            "id": 97,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "1612:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1604:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1604:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1603:14:1"
            },
            "returnParameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1618:0:1"
            },
            "scope": 944,
            "src": "1592:57:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 111,
              "nodeType": "Block",
              "src": "1692:65:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 102,
                              "name": "exchanges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "1710:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                                "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                              }
                            },
                            "id": 104,
                            "indexExpression": {
                              "id": 103,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99,
                              "src": "1720:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1710:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Exchange_$20_storage",
                              "typeString": "struct MiniSwap.Exchange storage ref"
                            }
                          },
                          "id": 105,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ethPool",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11,
                          "src": "1710:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1737:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1710:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 101,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1702:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1702:37:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "1702:37:1"
                },
                {
                  "id": 110,
                  "nodeType": "PlaceholderStatement",
                  "src": "1749:1:1"
                }
              ]
            },
            "id": 112,
            "name": "hasLiquidity",
            "nameLocation": "1664:12:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1685:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "1677:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1677:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1676:15:1"
            },
            "src": "1655:102:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 197,
              "nodeType": "Block",
              "src": "1845:679:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 120,
                              "name": "exchanges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "1864:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                                "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                              }
                            },
                            "id": 122,
                            "indexExpression": {
                              "id": 121,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 114,
                              "src": "1874:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1864:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Exchange_$20_storage",
                              "typeString": "struct MiniSwap.Exchange storage ref"
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalShares",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19,
                          "src": "1864:35:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1903:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1864:40:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c697175696469747920706f6f6c20697320616c7265616479207365656465642c2075736520696e76657374282920696e7374656164",
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1906:56:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_58c0a20befdcb091cdf6ba8b95c9af57a5bceb9cdc3e1a7f414271d576d3ba95",
                          "typeString": "literal_string \"Liquidity pool is already seeded, use invest() instead\""
                        },
                        "value": "Liquidity pool is already seeded, use invest() instead"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_58c0a20befdcb091cdf6ba8b95c9af57a5bceb9cdc3e1a7f414271d576d3ba95",
                          "typeString": "literal_string \"Liquidity pool is already seeded, use invest() instead\""
                        }
                      ],
                      "id": 119,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1855:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1855:108:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
                  "src": "1855:108:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 130,
                            "name": "tokenInvestment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116,
                            "src": "1982:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2000:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1982:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 133,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2005:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 134,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "2005:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 135,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2017:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2005:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1982:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d75737420696e766573742045544820616e6420746f6b656e73",
                        "id": 138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2020:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c57c189f0344789f3d229267c855e185e4a8075848554cf15375138cb096138a",
                          "typeString": "literal_string \"Must invest ETH and tokens\""
                        },
                        "value": "Must invest ETH and tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c57c189f0344789f3d229267c855e185e4a8075848554cf15375138cb096138a",
                          "typeString": "literal_string \"Must invest ETH and tokens\""
                        }
                      ],
                      "id": 129,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1973:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1973:76:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 140,
                  "nodeType": "ExpressionStatement",
                  "src": "1973:76:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 146,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2102:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2102:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 150,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2122:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MiniSwap_$944",
                              "typeString": "contract MiniSwap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MiniSwap_$944",
                              "typeString": "contract MiniSwap"
                            }
                          ],
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2114:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 148,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2114:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2114:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 152,
                        "name": "tokenInvestment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "2129:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 141,
                            "name": "exchanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "2059:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                              "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                            }
                          },
                          "id": 143,
                          "indexExpression": {
                            "id": 142,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 114,
                            "src": "2069:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2059:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Exchange_$20_storage",
                            "typeString": "struct MiniSwap.Exchange storage ref"
                          }
                        },
                        "id": 144,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9,
                        "src": "2059:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1022",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1003,
                      "src": "2059:42:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2059:86:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "2059:86:1"
                },
                {
                  "expression": {
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 155,
                          "name": "exchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "2155:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                            "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                          }
                        },
                        "id": 157,
                        "indexExpression": {
                          "id": 156,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 114,
                          "src": "2165:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2155:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Exchange_$20_storage",
                          "typeString": "struct MiniSwap.Exchange storage ref"
                        }
                      },
                      "id": 158,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokenPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "2155:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 159,
                      "name": "tokenInvestment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116,
                      "src": "2191:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2155:51:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 161,
                  "nodeType": "ExpressionStatement",
                  "src": "2155:51:1"
                },
                {
                  "expression": {
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 162,
                          "name": "exchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "2216:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                            "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                          }
                        },
                        "id": 164,
                        "indexExpression": {
                          "id": 163,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 114,
                          "src": "2226:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2216:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Exchange_$20_storage",
                          "typeString": "struct MiniSwap.Exchange storage ref"
                        }
                      },
                      "id": 165,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ethPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "2216:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 166,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2250:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2250:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2216:43:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "2216:43:1"
                },
                {
                  "expression": {
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 170,
                            "name": "exchanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "2320:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                              "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                            }
                          },
                          "id": 172,
                          "indexExpression": {
                            "id": 171,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 114,
                            "src": "2330:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2320:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Exchange_$20_storage",
                            "typeString": "struct MiniSwap.Exchange storage ref"
                          }
                        },
                        "id": 173,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "investorShares",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17,
                        "src": "2320:38:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 176,
                      "indexExpression": {
                        "expression": {
                          "id": 174,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2359:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2359:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2320:50:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3130303030",
                      "id": 177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2373:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10000"
                    },
                    "src": "2320:58:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "2320:58:1"
                },
                {
                  "expression": {
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 180,
                          "name": "exchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "2388:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                            "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                          }
                        },
                        "id": 182,
                        "indexExpression": {
                          "id": 181,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 114,
                          "src": "2398:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2388:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Exchange_$20_storage",
                          "typeString": "struct MiniSwap.Exchange storage ref"
                        }
                      },
                      "id": 183,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalShares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "2388:35:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3130303030",
                      "id": 184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2426:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10000"
                    },
                    "src": "2388:43:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "2388:43:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 188,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 114,
                        "src": "2457:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 189,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2471:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2471:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130303030",
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2483:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10000"
                      },
                      {
                        "expression": {
                          "id": 192,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2490:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "2490:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 194,
                        "name": "tokenInvestment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "2501:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 187,
                      "name": "Investment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "2446:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2446:71:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 196,
                  "nodeType": "EmitStatement",
                  "src": "2441:76:1"
                }
              ]
            },
            "functionSelector": "d1ff465f",
            "id": 198,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "seedInvest",
            "nameLocation": "1772:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 114,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "1791:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 198,
                  "src": "1783:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1783:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "tokenInvestment",
                  "nameLocation": "1813:15:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 198,
                  "src": "1805:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1805:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1782:47:1"
            },
            "returnParameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1845:0:1"
            },
            "scope": 944,
            "src": "1763:761:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 301,
              "nodeType": "Block",
              "src": "2609:938:1",
              "statements": [
                {
                  "assignments": [
                    206
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 206,
                      "mutability": "mutable",
                      "name": "tokenInvestment",
                      "nameLocation": "2728:15:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 301,
                      "src": "2720:23:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 205,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2720:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 220,
                  "initialValue": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 207,
                                "name": "exchanges",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25,
                                "src": "2747:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                                  "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                                }
                              },
                              "id": 209,
                              "indexExpression": {
                                "id": 208,
                                "name": "tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 200,
                                "src": "2757:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2747:23:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Exchange_$20_storage",
                                "typeString": "struct MiniSwap.Exchange storage ref"
                              }
                            },
                            "id": 210,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenPool",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13,
                            "src": "2747:33:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "expression": {
                              "id": 211,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2783:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "2783:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2747:45:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 214,
                              "name": "exchanges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "2795:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                                "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                              }
                            },
                            "id": 216,
                            "indexExpression": {
                              "id": 215,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 200,
                              "src": "2805:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2795:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Exchange_$20_storage",
                              "typeString": "struct MiniSwap.Exchange storage ref"
                            }
                          },
                          "id": 217,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ethPool",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11,
                          "src": "2795:31:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2747:79:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 219,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2746:81:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2720:107:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 222,
                          "name": "maxTokensInvested",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 202,
                          "src": "2845:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 223,
                          "name": "tokenInvestment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 206,
                          "src": "2866:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2845:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6178203c20726571756972656420696e766573746d656e74",
                        "id": 225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2883:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2b408b5729278267498c5184913398df7ef39ab75dac1c960773bea287910549",
                          "typeString": "literal_string \"Max < required investment\""
                        },
                        "value": "Max < required investment"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2b408b5729278267498c5184913398df7ef39ab75dac1c960773bea287910549",
                          "typeString": "literal_string \"Max < required investment\""
                        }
                      ],
                      "id": 221,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2837:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2837:74:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 227,
                  "nodeType": "ExpressionStatement",
                  "src": "2837:74:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 234,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2973:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2973:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 238,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2993:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MiniSwap_$944",
                                  "typeString": "contract MiniSwap"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MiniSwap_$944",
                                  "typeString": "contract MiniSwap"
                                }
                              ],
                              "id": 237,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2985:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 236,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2985:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2985:13:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 240,
                            "name": "tokenInvestment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 206,
                            "src": "3000:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "expression": {
                              "baseExpression": {
                                "id": 229,
                                "name": "exchanges",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25,
                                "src": "2930:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                                  "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                                }
                              },
                              "id": 231,
                              "indexExpression": {
                                "id": 230,
                                "name": "tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 200,
                                "src": "2940:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2930:23:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Exchange_$20_storage",
                                "typeString": "struct MiniSwap.Exchange storage ref"
                              }
                            },
                            "id": 232,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "token",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9,
                            "src": "2930:29:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1022",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1003,
                          "src": "2930:42:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2930:86:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 228,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2921:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2921:96:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 243,
                  "nodeType": "ExpressionStatement",
                  "src": "2921:96:1"
                },
                {
                  "assignments": [
                    245
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 245,
                      "mutability": "mutable",
                      "name": "sharesPurchased",
                      "nameLocation": "3035:15:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 301,
                      "src": "3027:23:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 244,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3027:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 258,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 246,
                            "name": "tokenInvestment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 206,
                            "src": "3054:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 247,
                                "name": "exchanges",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25,
                                "src": "3072:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                                  "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                                }
                              },
                              "id": 249,
                              "indexExpression": {
                                "id": 248,
                                "name": "tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 200,
                                "src": "3082:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3072:23:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Exchange_$20_storage",
                                "typeString": "struct MiniSwap.Exchange storage ref"
                              }
                            },
                            "id": 250,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "totalShares",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19,
                            "src": "3072:35:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3054:53:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 252,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3053:55:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 253,
                          "name": "exchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "3110:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                            "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                          }
                        },
                        "id": 255,
                        "indexExpression": {
                          "id": 254,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 200,
                          "src": "3120:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3110:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Exchange_$20_storage",
                          "typeString": "struct MiniSwap.Exchange storage ref"
                        }
                      },
                      "id": 256,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "3110:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3053:90:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3027:116:1"
                },
                {
                  "expression": {
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 259,
                          "name": "exchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "3153:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                            "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                          }
                        },
                        "id": 261,
                        "indexExpression": {
                          "id": 260,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 200,
                          "src": "3163:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3153:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Exchange_$20_storage",
                          "typeString": "struct MiniSwap.Exchange storage ref"
                        }
                      },
                      "id": 262,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ethPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "3153:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 263,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3188:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "3188:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3153:44:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 266,
                  "nodeType": "ExpressionStatement",
                  "src": "3153:44:1"
                },
                {
                  "expression": {
                    "id": 272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 267,
                          "name": "exchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "3207:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                            "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                          }
                        },
                        "id": 269,
                        "indexExpression": {
                          "id": 268,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 200,
                          "src": "3217:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3207:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Exchange_$20_storage",
                          "typeString": "struct MiniSwap.Exchange storage ref"
                        }
                      },
                      "id": 270,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokenPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "3207:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 271,
                      "name": "tokenInvestment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 206,
                      "src": "3244:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3207:52:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 273,
                  "nodeType": "ExpressionStatement",
                  "src": "3207:52:1"
                },
                {
                  "expression": {
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 274,
                            "name": "exchanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "3311:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                              "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                            }
                          },
                          "id": 276,
                          "indexExpression": {
                            "id": 275,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 200,
                            "src": "3321:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3311:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Exchange_$20_storage",
                            "typeString": "struct MiniSwap.Exchange storage ref"
                          }
                        },
                        "id": 277,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "investorShares",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17,
                        "src": "3311:38:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 280,
                      "indexExpression": {
                        "expression": {
                          "id": 278,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3350:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3350:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3311:50:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 281,
                      "name": "sharesPurchased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 245,
                      "src": "3365:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3311:69:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 283,
                  "nodeType": "ExpressionStatement",
                  "src": "3311:69:1"
                },
                {
                  "expression": {
                    "id": 289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 284,
                          "name": "exchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "3390:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                            "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                          }
                        },
                        "id": 286,
                        "indexExpression": {
                          "id": 285,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 200,
                          "src": "3400:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3390:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Exchange_$20_storage",
                          "typeString": "struct MiniSwap.Exchange storage ref"
                        }
                      },
                      "id": 287,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalShares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "3390:35:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 288,
                      "name": "sharesPurchased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 245,
                      "src": "3429:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3390:54:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 290,
                  "nodeType": "ExpressionStatement",
                  "src": "3390:54:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 292,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 200,
                        "src": "3470:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 293,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3484:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3484:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 295,
                        "name": "sharesPurchased",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 245,
                        "src": "3496:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 296,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3513:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "3513:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 298,
                        "name": "tokenInvestment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 206,
                        "src": "3524:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 291,
                      "name": "Investment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "3459:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3459:81:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 300,
                  "nodeType": "EmitStatement",
                  "src": "3454:86:1"
                }
              ]
            },
            "functionSelector": "b9b8c246",
            "id": 302,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "invest",
            "nameLocation": "2539:6:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 200,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "2554:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "2546:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 199,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2546:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 202,
                  "mutability": "mutable",
                  "name": "maxTokensInvested",
                  "nameLocation": "2576:17:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "2568:25:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 201,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2568:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2545:49:1"
            },
            "returnParameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2609:0:1"
            },
            "scope": 944,
            "src": "2530:1017:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 324,
              "nodeType": "Block",
              "src": "3665:103:1",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 311,
                                "name": "exchanges",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25,
                                "src": "3683:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                                  "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                                }
                              },
                              "id": 313,
                              "indexExpression": {
                                "id": 312,
                                "name": "tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 304,
                                "src": "3693:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3683:23:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Exchange_$20_storage",
                                "typeString": "struct MiniSwap.Exchange storage ref"
                              }
                            },
                            "id": 314,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenPool",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13,
                            "src": "3683:33:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 315,
                            "name": "ethPaid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 306,
                            "src": "3719:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3683:43:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 317,
                              "name": "exchanges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "3729:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                                "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                              }
                            },
                            "id": 319,
                            "indexExpression": {
                              "id": 318,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 304,
                              "src": "3739:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3729:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Exchange_$20_storage",
                              "typeString": "struct MiniSwap.Exchange storage ref"
                            }
                          },
                          "id": 320,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ethPool",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11,
                          "src": "3729:31:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3683:77:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 322,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3682:79:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 310,
                  "id": 323,
                  "nodeType": "Return",
                  "src": "3675:86:1"
                }
              ]
            },
            "functionSelector": "ea16e6d1",
            "id": 325,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "investQuoteFromEth",
            "nameLocation": "3562:18:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 304,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "3589:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 325,
                  "src": "3581:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 303,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3581:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 306,
                  "mutability": "mutable",
                  "name": "ethPaid",
                  "nameLocation": "3611:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 325,
                  "src": "3603:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 305,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3603:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3580:39:1"
            },
            "returnParameters": {
              "id": 310,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 309,
                  "mutability": "mutable",
                  "name": "tokensRequired",
                  "nameLocation": "3649:14:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 325,
                  "src": "3641:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 308,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3641:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3640:24:1"
            },
            "scope": 944,
            "src": "3553:215:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 347,
              "nodeType": "Block",
              "src": "3889:106:1",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 334,
                                "name": "exchanges",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25,
                                "src": "3907:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                                  "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                                }
                              },
                              "id": 336,
                              "indexExpression": {
                                "id": 335,
                                "name": "tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 327,
                                "src": "3917:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3907:23:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Exchange_$20_storage",
                                "typeString": "struct MiniSwap.Exchange storage ref"
                              }
                            },
                            "id": 337,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ethPool",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11,
                            "src": "3907:31:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 338,
                            "name": "tokensPaid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 329,
                            "src": "3941:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3907:44:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 340,
                              "name": "exchanges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "3954:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                                "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                              }
                            },
                            "id": 342,
                            "indexExpression": {
                              "id": 341,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 327,
                              "src": "3964:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3954:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Exchange_$20_storage",
                              "typeString": "struct MiniSwap.Exchange storage ref"
                            }
                          },
                          "id": 343,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenPool",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "3954:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3907:80:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 345,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3906:82:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 333,
                  "id": 346,
                  "nodeType": "Return",
                  "src": "3899:89:1"
                }
              ]
            },
            "functionSelector": "5d44a878",
            "id": 348,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "investQuoteFromTokens",
            "nameLocation": "3783:21:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 327,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "3813:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 348,
                  "src": "3805:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 326,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3805:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 329,
                  "mutability": "mutable",
                  "name": "tokensPaid",
                  "nameLocation": "3835:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 348,
                  "src": "3827:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 328,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3827:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3804:42:1"
            },
            "returnParameters": {
              "id": 333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 332,
                  "mutability": "mutable",
                  "name": "ethRequired",
                  "nameLocation": "3876:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 348,
                  "src": "3868:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 331,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3868:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3867:21:1"
            },
            "scope": 944,
            "src": "3774:221:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 459,
              "nodeType": "Block",
              "src": "4062:770:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 356,
                                "name": "exchanges",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25,
                                "src": "4080:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                                  "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                                }
                              },
                              "id": 358,
                              "indexExpression": {
                                "id": 357,
                                "name": "tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 350,
                                "src": "4090:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4080:23:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Exchange_$20_storage",
                                "typeString": "struct MiniSwap.Exchange storage ref"
                              }
                            },
                            "id": 359,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "investorShares",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17,
                            "src": "4080:38:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 362,
                          "indexExpression": {
                            "expression": {
                              "id": 360,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4119:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4119:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4080:50:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 363,
                          "name": "shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 352,
                          "src": "4134:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4080:60:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682073686172657320746f20646976657374",
                        "id": 365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4142:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_66ebd47b5bf491cbb65c665cd1bdec8e07a231901edc4128d80ed790b416d060",
                          "typeString": "literal_string \"Not enough shares to divest\""
                        },
                        "value": "Not enough shares to divest"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_66ebd47b5bf491cbb65c665cd1bdec8e07a231901edc4128d80ed790b416d060",
                          "typeString": "literal_string \"Not enough shares to divest\""
                        }
                      ],
                      "id": 355,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4072:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4072:100:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 367,
                  "nodeType": "ExpressionStatement",
                  "src": "4072:100:1"
                },
                {
                  "assignments": [
                    369
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 369,
                      "mutability": "mutable",
                      "name": "ethOut",
                      "nameLocation": "4190:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 459,
                      "src": "4182:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 368,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4182:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 382,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 370,
                                "name": "exchanges",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25,
                                "src": "4200:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                                  "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                                }
                              },
                              "id": 372,
                              "indexExpression": {
                                "id": 371,
                                "name": "tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 350,
                                "src": "4210:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4200:23:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Exchange_$20_storage",
                                "typeString": "struct MiniSwap.Exchange storage ref"
                              }
                            },
                            "id": 373,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ethPool",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11,
                            "src": "4200:31:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 374,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 352,
                            "src": "4234:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4200:40:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 376,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4199:42:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 377,
                          "name": "exchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "4244:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                            "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                          }
                        },
                        "id": 379,
                        "indexExpression": {
                          "id": 378,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 350,
                          "src": "4254:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4244:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Exchange_$20_storage",
                          "typeString": "struct MiniSwap.Exchange storage ref"
                        }
                      },
                      "id": 380,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalShares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "4244:35:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4199:80:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4182:97:1"
                },
                {
                  "assignments": [
                    384
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 384,
                      "mutability": "mutable",
                      "name": "tokenOut",
                      "nameLocation": "4297:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 459,
                      "src": "4289:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 383,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4289:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 397,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 385,
                                "name": "exchanges",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25,
                                "src": "4309:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                                  "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                                }
                              },
                              "id": 387,
                              "indexExpression": {
                                "id": 386,
                                "name": "tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 350,
                                "src": "4319:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4309:23:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Exchange_$20_storage",
                                "typeString": "struct MiniSwap.Exchange storage ref"
                              }
                            },
                            "id": 388,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenPool",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13,
                            "src": "4309:33:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 389,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 352,
                            "src": "4345:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4309:42:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 391,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4308:44:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 392,
                          "name": "exchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "4355:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                            "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                          }
                        },
                        "id": 394,
                        "indexExpression": {
                          "id": 393,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 350,
                          "src": "4365:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4355:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Exchange_$20_storage",
                          "typeString": "struct MiniSwap.Exchange storage ref"
                        }
                      },
                      "id": 395,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalShares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "4355:35:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4308:82:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4289:101:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 404,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4447:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4447:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 406,
                            "name": "tokenOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 384,
                            "src": "4459:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "expression": {
                              "baseExpression": {
                                "id": 399,
                                "name": "exchanges",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25,
                                "src": "4408:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                                  "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                                }
                              },
                              "id": 401,
                              "indexExpression": {
                                "id": 400,
                                "name": "tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 350,
                                "src": "4418:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4408:23:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Exchange_$20_storage",
                                "typeString": "struct MiniSwap.Exchange storage ref"
                              }
                            },
                            "id": 402,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "token",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9,
                            "src": "4408:29:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1022",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 971,
                          "src": "4408:38:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4408:60:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 398,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4400:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4400:69:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 409,
                  "nodeType": "ExpressionStatement",
                  "src": "4400:69:1"
                },
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 412,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4487:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 413,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4487:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4479:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 410,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4479:8:1",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4479:19:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "4479:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "names": [
                      "value"
                    ],
                    "nodeType": "FunctionCallOptions",
                    "options": [
                      {
                        "id": 416,
                        "name": "ethOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 369,
                        "src": "4510:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "src": "4479:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                    }
                  },
                  "id": 418,
                  "nodeType": "ExpressionStatement",
                  "src": "4479:38:1"
                },
                {
                  "expression": {
                    "id": 424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 419,
                          "name": "exchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "4527:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                            "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                          }
                        },
                        "id": 421,
                        "indexExpression": {
                          "id": 420,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 350,
                          "src": "4537:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4527:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Exchange_$20_storage",
                          "typeString": "struct MiniSwap.Exchange storage ref"
                        }
                      },
                      "id": 422,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ethPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "4527:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 423,
                      "name": "ethOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 369,
                      "src": "4562:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4527:41:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 425,
                  "nodeType": "ExpressionStatement",
                  "src": "4527:41:1"
                },
                {
                  "expression": {
                    "id": 431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 426,
                          "name": "exchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "4578:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                            "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                          }
                        },
                        "id": 428,
                        "indexExpression": {
                          "id": 427,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 350,
                          "src": "4588:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4578:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Exchange_$20_storage",
                          "typeString": "struct MiniSwap.Exchange storage ref"
                        }
                      },
                      "id": 429,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokenPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "4578:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 430,
                      "name": "tokenOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 384,
                      "src": "4615:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4578:45:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 432,
                  "nodeType": "ExpressionStatement",
                  "src": "4578:45:1"
                },
                {
                  "expression": {
                    "id": 441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 433,
                            "name": "exchanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "4633:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                              "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                            }
                          },
                          "id": 435,
                          "indexExpression": {
                            "id": 434,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 350,
                            "src": "4643:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4633:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Exchange_$20_storage",
                            "typeString": "struct MiniSwap.Exchange storage ref"
                          }
                        },
                        "id": 436,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "investorShares",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17,
                        "src": "4633:38:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 439,
                      "indexExpression": {
                        "expression": {
                          "id": 437,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4672:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4672:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4633:50:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 440,
                      "name": "shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 352,
                      "src": "4687:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4633:60:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 442,
                  "nodeType": "ExpressionStatement",
                  "src": "4633:60:1"
                },
                {
                  "expression": {
                    "id": 448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 443,
                          "name": "exchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "4703:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                            "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                          }
                        },
                        "id": 445,
                        "indexExpression": {
                          "id": 444,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 350,
                          "src": "4713:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4703:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Exchange_$20_storage",
                          "typeString": "struct MiniSwap.Exchange storage ref"
                        }
                      },
                      "id": 446,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalShares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "4703:35:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 447,
                      "name": "shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 352,
                      "src": "4742:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4703:45:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 449,
                  "nodeType": "ExpressionStatement",
                  "src": "4703:45:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 451,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 350,
                        "src": "4774:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 452,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4788:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4788:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 454,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 352,
                        "src": "4800:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 455,
                        "name": "ethOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 369,
                        "src": "4808:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 456,
                        "name": "tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 384,
                        "src": "4816:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 450,
                      "name": "Divestment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "4763:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4763:62:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 458,
                  "nodeType": "EmitStatement",
                  "src": "4758:67:1"
                }
              ]
            },
            "functionSelector": "bb504317",
            "id": 460,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "divest",
            "nameLocation": "4010:6:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 350,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "4025:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 460,
                  "src": "4017:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 349,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4017:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 352,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "4047:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 460,
                  "src": "4039:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 351,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4039:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4016:38:1"
            },
            "returnParameters": {
              "id": 354,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4062:0:1"
            },
            "scope": 944,
            "src": "4001:831:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 476,
              "nodeType": "Block",
              "src": "4938:72:1",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 469,
                          "name": "exchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "4955:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                            "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                          }
                        },
                        "id": 471,
                        "indexExpression": {
                          "id": 470,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 462,
                          "src": "4965:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4955:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Exchange_$20_storage",
                          "typeString": "struct MiniSwap.Exchange storage ref"
                        }
                      },
                      "id": 472,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "investorShares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17,
                      "src": "4955:38:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 474,
                    "indexExpression": {
                      "id": 473,
                      "name": "investor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 464,
                      "src": "4994:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4955:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 468,
                  "id": 475,
                  "nodeType": "Return",
                  "src": "4948:55:1"
                }
              ]
            },
            "functionSelector": "00392040",
            "id": 477,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getShares",
            "nameLocation": "4847:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 465,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 462,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "4865:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "4857:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 461,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4857:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 464,
                  "mutability": "mutable",
                  "name": "investor",
                  "nameLocation": "4887:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "4879:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 463,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4879:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4856:40:1"
            },
            "returnParameters": {
              "id": 468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 467,
                  "mutability": "mutable",
                  "name": "shareCount",
                  "nameLocation": "4926:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "4918:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 466,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4918:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4917:20:1"
            },
            "scope": 944,
            "src": "4838:172:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 529,
              "nodeType": "Block",
              "src": "5125:306:1",
              "statements": [
                {
                  "assignments": [
                    487
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 487,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "5143:3:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 529,
                      "src": "5135:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 486,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5135:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 491,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 488,
                      "name": "ethValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 481,
                      "src": "5149:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 489,
                      "name": "feeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "5160:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5149:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5135:32:1"
                },
                {
                  "assignments": [
                    493
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 493,
                      "mutability": "mutable",
                      "name": "mockPool",
                      "nameLocation": "5185:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 529,
                      "src": "5177:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 492,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5177:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 500,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 494,
                          "name": "exchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "5196:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                            "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                          }
                        },
                        "id": 496,
                        "indexExpression": {
                          "id": 495,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 479,
                          "src": "5206:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5196:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Exchange_$20_storage",
                          "typeString": "struct MiniSwap.Exchange storage ref"
                        }
                      },
                      "id": 497,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ethPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "5196:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 498,
                      "name": "ethValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 481,
                      "src": "5230:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5196:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5177:61:1"
                },
                {
                  "assignments": [
                    502
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 502,
                      "mutability": "mutable",
                      "name": "invariant",
                      "nameLocation": "5256:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 529,
                      "src": "5248:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 501,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5248:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 512,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 503,
                          "name": "exchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "5268:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                            "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                          }
                        },
                        "id": 505,
                        "indexExpression": {
                          "id": 504,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 479,
                          "src": "5278:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5268:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Exchange_$20_storage",
                          "typeString": "struct MiniSwap.Exchange storage ref"
                        }
                      },
                      "id": 506,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ethPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "5268:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 507,
                          "name": "exchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "5302:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                            "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                          }
                        },
                        "id": 509,
                        "indexExpression": {
                          "id": 508,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 479,
                          "src": "5312:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5302:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Exchange_$20_storage",
                          "typeString": "struct MiniSwap.Exchange storage ref"
                        }
                      },
                      "id": 510,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "5302:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5268:67:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5248:87:1"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 513,
                              "name": "exchanges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "5353:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                                "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                              }
                            },
                            "id": 515,
                            "indexExpression": {
                              "id": 514,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 479,
                              "src": "5363:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5353:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Exchange_$20_storage",
                              "typeString": "struct MiniSwap.Exchange storage ref"
                            }
                          },
                          "id": 516,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenPool",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "5353:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 524,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 522,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 517,
                                  "name": "invariant",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 502,
                                  "src": "5390:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 520,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 518,
                                        "name": "mockPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 493,
                                        "src": "5403:8:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 519,
                                        "name": "fee",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 487,
                                        "src": "5414:3:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "5403:14:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 521,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "5402:16:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5390:28:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 523,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5421:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "5390:32:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 525,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5389:34:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5353:70:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 527,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5352:72:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 485,
                  "id": 528,
                  "nodeType": "Return",
                  "src": "5345:79:1"
                }
              ]
            },
            "functionSelector": "e437ab1a",
            "id": 530,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEthToTokenQuote",
            "nameLocation": "5025:18:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 479,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "5052:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 530,
                  "src": "5044:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 478,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5044:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 481,
                  "mutability": "mutable",
                  "name": "ethValue",
                  "nameLocation": "5074:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 530,
                  "src": "5066:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 480,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5066:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5043:40:1"
            },
            "returnParameters": {
              "id": 485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 484,
                  "mutability": "mutable",
                  "name": "tokenQuote",
                  "nameLocation": "5113:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 530,
                  "src": "5105:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 483,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5105:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5104:20:1"
            },
            "scope": 944,
            "src": "5016:415:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 582,
              "nodeType": "Block",
              "src": "5546:310:1",
              "statements": [
                {
                  "assignments": [
                    540
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 540,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "5564:3:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 582,
                      "src": "5556:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 539,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5556:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 544,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 541,
                      "name": "tokenValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 534,
                      "src": "5570:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 542,
                      "name": "feeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "5583:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5570:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5556:34:1"
                },
                {
                  "assignments": [
                    546
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 546,
                      "mutability": "mutable",
                      "name": "mockPool",
                      "nameLocation": "5608:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 582,
                      "src": "5600:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 545,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5600:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 553,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 547,
                          "name": "exchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "5619:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                            "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                          }
                        },
                        "id": 549,
                        "indexExpression": {
                          "id": 548,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 532,
                          "src": "5629:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5619:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Exchange_$20_storage",
                          "typeString": "struct MiniSwap.Exchange storage ref"
                        }
                      },
                      "id": 550,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "5619:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 551,
                      "name": "tokenValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 534,
                      "src": "5655:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5619:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5600:65:1"
                },
                {
                  "assignments": [
                    555
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 555,
                      "mutability": "mutable",
                      "name": "invariant",
                      "nameLocation": "5683:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 582,
                      "src": "5675:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 554,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5675:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 565,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 556,
                          "name": "exchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "5695:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                            "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                          }
                        },
                        "id": 558,
                        "indexExpression": {
                          "id": 557,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 532,
                          "src": "5705:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5695:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Exchange_$20_storage",
                          "typeString": "struct MiniSwap.Exchange storage ref"
                        }
                      },
                      "id": 559,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ethPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "5695:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 560,
                          "name": "exchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "5729:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                            "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                          }
                        },
                        "id": 562,
                        "indexExpression": {
                          "id": 561,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 532,
                          "src": "5739:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5729:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Exchange_$20_storage",
                          "typeString": "struct MiniSwap.Exchange storage ref"
                        }
                      },
                      "id": 563,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "5729:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5695:67:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5675:87:1"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 566,
                              "name": "exchanges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "5780:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                                "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                              }
                            },
                            "id": 568,
                            "indexExpression": {
                              "id": 567,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 532,
                              "src": "5790:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5780:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Exchange_$20_storage",
                              "typeString": "struct MiniSwap.Exchange storage ref"
                            }
                          },
                          "id": 569,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ethPool",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11,
                          "src": "5780:31:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 577,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 575,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 570,
                                  "name": "invariant",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 555,
                                  "src": "5815:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 573,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 571,
                                        "name": "mockPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 546,
                                        "src": "5828:8:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 572,
                                        "name": "fee",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 540,
                                        "src": "5839:3:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "5828:14:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 574,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "5827:16:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5815:28:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 576,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5846:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "5815:32:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 578,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5814:34:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5780:68:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 580,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5779:70:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 538,
                  "id": 581,
                  "nodeType": "Return",
                  "src": "5772:77:1"
                }
              ]
            },
            "functionSelector": "babd9add",
            "id": 583,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenToEthQuote",
            "nameLocation": "5446:18:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 532,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "5473:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "5465:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 531,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5465:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 534,
                  "mutability": "mutable",
                  "name": "tokenValue",
                  "nameLocation": "5495:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "5487:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 533,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5487:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5464:42:1"
            },
            "returnParameters": {
              "id": 538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 537,
                  "mutability": "mutable",
                  "name": "ethQuote",
                  "nameLocation": "5536:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "5528:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 536,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5528:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5527:18:1"
            },
            "scope": 944,
            "src": "5437:419:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 656,
              "nodeType": "Block",
              "src": "5965:738:1",
              "statements": [
                {
                  "assignments": [
                    593
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 593,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "5983:3:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 656,
                      "src": "5975:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 592,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5975:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 597,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 594,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 587,
                      "src": "5989:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 595,
                      "name": "feeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "5997:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5989:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5975:29:1"
                },
                {
                  "expression": {
                    "id": 603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 598,
                          "name": "exchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "6014:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                            "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                          }
                        },
                        "id": 600,
                        "indexExpression": {
                          "id": 599,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 585,
                          "src": "6024:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6014:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Exchange_$20_storage",
                          "typeString": "struct MiniSwap.Exchange storage ref"
                        }
                      },
                      "id": 601,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ethPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "6014:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 602,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 587,
                      "src": "6049:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6014:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 604,
                  "nodeType": "ExpressionStatement",
                  "src": "6014:40:1"
                },
                {
                  "assignments": [
                    606
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 606,
                      "mutability": "mutable",
                      "name": "invariant",
                      "nameLocation": "6072:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 656,
                      "src": "6064:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 605,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6064:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 616,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 607,
                          "name": "exchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "6084:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                            "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                          }
                        },
                        "id": 609,
                        "indexExpression": {
                          "id": 608,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 585,
                          "src": "6094:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6084:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Exchange_$20_storage",
                          "typeString": "struct MiniSwap.Exchange storage ref"
                        }
                      },
                      "id": 610,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ethPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "6084:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 611,
                          "name": "exchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "6118:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                            "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                          }
                        },
                        "id": 613,
                        "indexExpression": {
                          "id": 612,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 585,
                          "src": "6128:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6118:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Exchange_$20_storage",
                          "typeString": "struct MiniSwap.Exchange storage ref"
                        }
                      },
                      "id": 614,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "6118:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6084:67:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6064:87:1"
                },
                {
                  "assignments": [
                    618
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 618,
                      "mutability": "mutable",
                      "name": "tokensPaid",
                      "nameLocation": "6169:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 656,
                      "src": "6161:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 617,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6161:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 636,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 619,
                          "name": "exchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "6182:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                            "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                          }
                        },
                        "id": 621,
                        "indexExpression": {
                          "id": 620,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 585,
                          "src": "6192:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6182:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Exchange_$20_storage",
                          "typeString": "struct MiniSwap.Exchange storage ref"
                        }
                      },
                      "id": 622,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "6182:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 631,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 623,
                              "name": "invariant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 606,
                              "src": "6219:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 629,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 624,
                                        "name": "exchanges",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 25,
                                        "src": "6232:9:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                                          "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                                        }
                                      },
                                      "id": 626,
                                      "indexExpression": {
                                        "id": 625,
                                        "name": "tokenAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 585,
                                        "src": "6242:12:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6232:23:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Exchange_$20_storage",
                                        "typeString": "struct MiniSwap.Exchange storage ref"
                                      }
                                    },
                                    "id": 627,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "ethPool",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11,
                                    "src": "6232:31:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 628,
                                    "name": "fee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 593,
                                    "src": "6266:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "6232:37:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 630,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6231:39:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6219:51:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 632,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6273:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "6219:55:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 634,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6218:57:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6182:93:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6161:114:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 638,
                          "name": "tokensPaid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 618,
                          "src": "6495:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 639,
                              "name": "exchanges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "6509:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                                "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                              }
                            },
                            "id": 641,
                            "indexExpression": {
                              "id": 640,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 585,
                              "src": "6519:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6509:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Exchange_$20_storage",
                              "typeString": "struct MiniSwap.Exchange storage ref"
                            }
                          },
                          "id": 642,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenPool",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "6509:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6495:47:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c61636b696e6720706f6f6c20746f6b656e73",
                        "id": 644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6544:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0117beb2bb18e923f2edc79bee8ba6639fdb56695cc43cf765cd066d1b89de28",
                          "typeString": "literal_string \"Lacking pool tokens\""
                        },
                        "value": "Lacking pool tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0117beb2bb18e923f2edc79bee8ba6639fdb56695cc43cf765cd066d1b89de28",
                          "typeString": "literal_string \"Lacking pool tokens\""
                        }
                      ],
                      "id": 637,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6487:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6487:79:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 646,
                  "nodeType": "ExpressionStatement",
                  "src": "6487:79:1"
                },
                {
                  "expression": {
                    "id": 652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 647,
                          "name": "exchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "6622:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                            "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                          }
                        },
                        "id": 649,
                        "indexExpression": {
                          "id": 648,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 585,
                          "src": "6632:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6622:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Exchange_$20_storage",
                          "typeString": "struct MiniSwap.Exchange storage ref"
                        }
                      },
                      "id": 650,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokenPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "6622:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 651,
                      "name": "tokensPaid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 618,
                      "src": "6659:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6622:47:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 653,
                  "nodeType": "ExpressionStatement",
                  "src": "6622:47:1"
                },
                {
                  "expression": {
                    "id": 654,
                    "name": "tokensPaid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 618,
                    "src": "6686:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 591,
                  "id": 655,
                  "nodeType": "Return",
                  "src": "6679:17:1"
                }
              ]
            },
            "id": 657,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ethToTokenPrivate",
            "nameLocation": "5875:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 585,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "5901:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 657,
                  "src": "5893:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 584,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5893:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 587,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "5923:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 657,
                  "src": "5915:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 586,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5915:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5892:37:1"
            },
            "returnParameters": {
              "id": 591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 590,
                  "mutability": "mutable",
                  "name": "tokenToPay",
                  "nameLocation": "5954:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 657,
                  "src": "5946:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 589,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5946:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5945:20:1"
            },
            "scope": 944,
            "src": "5866:837:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 730,
              "nodeType": "Block",
              "src": "6809:724:1",
              "statements": [
                {
                  "assignments": [
                    667
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 667,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "6827:3:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 730,
                      "src": "6819:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 666,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6819:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 671,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 668,
                      "name": "tokensIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 661,
                      "src": "6833:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 669,
                      "name": "feeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "6844:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6833:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6819:32:1"
                },
                {
                  "expression": {
                    "id": 677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 672,
                          "name": "exchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "6861:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                            "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                          }
                        },
                        "id": 674,
                        "indexExpression": {
                          "id": 673,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 659,
                          "src": "6871:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6861:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Exchange_$20_storage",
                          "typeString": "struct MiniSwap.Exchange storage ref"
                        }
                      },
                      "id": 675,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokenPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "6861:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 676,
                      "name": "tokensIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 661,
                      "src": "6898:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6861:45:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 678,
                  "nodeType": "ExpressionStatement",
                  "src": "6861:45:1"
                },
                {
                  "assignments": [
                    680
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 680,
                      "mutability": "mutable",
                      "name": "invariant",
                      "nameLocation": "6924:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 730,
                      "src": "6916:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 679,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6916:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 690,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 681,
                          "name": "exchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "6936:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                            "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                          }
                        },
                        "id": 683,
                        "indexExpression": {
                          "id": 682,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 659,
                          "src": "6946:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6936:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Exchange_$20_storage",
                          "typeString": "struct MiniSwap.Exchange storage ref"
                        }
                      },
                      "id": 684,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ethPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "6936:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 685,
                          "name": "exchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "6970:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                            "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                          }
                        },
                        "id": 687,
                        "indexExpression": {
                          "id": 686,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 659,
                          "src": "6980:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6970:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Exchange_$20_storage",
                          "typeString": "struct MiniSwap.Exchange storage ref"
                        }
                      },
                      "id": 688,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "6970:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6936:67:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6916:87:1"
                },
                {
                  "assignments": [
                    692
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 692,
                      "mutability": "mutable",
                      "name": "ethPaid",
                      "nameLocation": "7021:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 730,
                      "src": "7013:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 691,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7013:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 710,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 693,
                          "name": "exchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "7031:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                            "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                          }
                        },
                        "id": 695,
                        "indexExpression": {
                          "id": 694,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 659,
                          "src": "7041:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7031:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Exchange_$20_storage",
                          "typeString": "struct MiniSwap.Exchange storage ref"
                        }
                      },
                      "id": 696,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ethPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "7031:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 705,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 697,
                              "name": "invariant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 680,
                              "src": "7066:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 703,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 698,
                                        "name": "exchanges",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 25,
                                        "src": "7079:9:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                                          "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                                        }
                                      },
                                      "id": 700,
                                      "indexExpression": {
                                        "id": 699,
                                        "name": "tokenAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 659,
                                        "src": "7089:12:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7079:23:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Exchange_$20_storage",
                                        "typeString": "struct MiniSwap.Exchange storage ref"
                                      }
                                    },
                                    "id": 701,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenPool",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 13,
                                    "src": "7079:33:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 702,
                                    "name": "fee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 667,
                                    "src": "7115:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "7079:39:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 704,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "7078:41:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7066:53:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 706,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7122:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "7066:57:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 708,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7065:59:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7031:93:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7013:111:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 712,
                          "name": "ethPaid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 692,
                          "src": "7344:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 713,
                              "name": "exchanges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "7355:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                                "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                              }
                            },
                            "id": 715,
                            "indexExpression": {
                              "id": 714,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 659,
                              "src": "7365:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7355:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Exchange_$20_storage",
                              "typeString": "struct MiniSwap.Exchange storage ref"
                            }
                          },
                          "id": 716,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ethPool",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11,
                          "src": "7355:31:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7344:42:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c61636b696e6720706f6f6c20657468",
                        "id": 718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7388:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dfd98f282be144b1c05673d5307cbb929785c8a1cdfebfee6ea991fb9966eb8c",
                          "typeString": "literal_string \"Lacking pool eth\""
                        },
                        "value": "Lacking pool eth"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dfd98f282be144b1c05673d5307cbb929785c8a1cdfebfee6ea991fb9966eb8c",
                          "typeString": "literal_string \"Lacking pool eth\""
                        }
                      ],
                      "id": 711,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7336:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7336:71:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 720,
                  "nodeType": "ExpressionStatement",
                  "src": "7336:71:1"
                },
                {
                  "expression": {
                    "id": 726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 721,
                          "name": "exchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "7460:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                            "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                          }
                        },
                        "id": 723,
                        "indexExpression": {
                          "id": 722,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 659,
                          "src": "7470:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7460:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Exchange_$20_storage",
                          "typeString": "struct MiniSwap.Exchange storage ref"
                        }
                      },
                      "id": 724,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ethPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "7460:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 725,
                      "name": "ethPaid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 692,
                      "src": "7495:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7460:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 727,
                  "nodeType": "ExpressionStatement",
                  "src": "7460:42:1"
                },
                {
                  "expression": {
                    "id": 728,
                    "name": "ethPaid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 692,
                    "src": "7519:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 665,
                  "id": 729,
                  "nodeType": "Return",
                  "src": "7512:14:1"
                }
              ]
            },
            "id": 731,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenToEthPrivate",
            "nameLocation": "6718:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 662,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 659,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "6744:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 731,
                  "src": "6736:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 658,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6736:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 661,
                  "mutability": "mutable",
                  "name": "tokensIn",
                  "nameLocation": "6766:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 731,
                  "src": "6758:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 660,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6758:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6735:40:1"
            },
            "returnParameters": {
              "id": 665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 664,
                  "mutability": "mutable",
                  "name": "ethToPay",
                  "nameLocation": "6800:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 731,
                  "src": "6792:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 663,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6792:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6791:18:1"
            },
            "scope": 944,
            "src": "6709:824:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 784,
              "nodeType": "Block",
              "src": "7691:370:1",
              "statements": [
                {
                  "assignments": [
                    746
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 746,
                      "mutability": "mutable",
                      "name": "tokensPaid",
                      "nameLocation": "7709:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 784,
                      "src": "7701:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 745,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7701:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 752,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 748,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 733,
                        "src": "7740:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 749,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7754:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "7754:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 747,
                      "name": "ethToTokenPrivate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 657,
                      "src": "7722:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) returns (uint256)"
                      }
                    },
                    "id": 751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7722:42:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7701:63:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 754,
                          "name": "tokensPaid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 746,
                          "src": "7782:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 755,
                          "name": "minTokensOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 737,
                          "src": "7796:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7782:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746b6e7350616964203c206d696e546b6e734f7574",
                        "id": 757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7810:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc6483b09ed5cc27ca5dac62c3765fcfa83b7919cee868dce618603fdcd0b4b8",
                          "typeString": "literal_string \"tknsPaid < minTknsOut\""
                        },
                        "value": "tknsPaid < minTknsOut"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc6483b09ed5cc27ca5dac62c3765fcfa83b7919cee868dce618603fdcd0b4b8",
                          "typeString": "literal_string \"tknsPaid < minTknsOut\""
                        }
                      ],
                      "id": 753,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7774:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7774:60:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 759,
                  "nodeType": "ExpressionStatement",
                  "src": "7774:60:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 761,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 733,
                        "src": "7863:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 762,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7877:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7877:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 764,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 735,
                        "src": "7889:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 765,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7900:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "7900:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 767,
                        "name": "tokensPaid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 746,
                        "src": "7911:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 760,
                      "name": "TokenPurchase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "7849:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7849:73:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 769,
                  "nodeType": "EmitStatement",
                  "src": "7844:78:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 776,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 735,
                            "src": "7979:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 777,
                            "name": "tokensPaid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 746,
                            "src": "7990:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "expression": {
                              "baseExpression": {
                                "id": 771,
                                "name": "exchanges",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25,
                                "src": "7940:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                                  "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                                }
                              },
                              "id": 773,
                              "indexExpression": {
                                "id": 772,
                                "name": "tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 733,
                                "src": "7950:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7940:23:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Exchange_$20_storage",
                                "typeString": "struct MiniSwap.Exchange storage ref"
                              }
                            },
                            "id": 774,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "token",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9,
                            "src": "7940:29:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1022",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 971,
                          "src": "7940:38:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7940:61:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546b6e204f5554207472616e73666572206661696c",
                        "id": 779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8003:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_782ac0edbdee19fdccac734fd278995da9a5c4045f217ad45e5f46d68b7d718b",
                          "typeString": "literal_string \"Tkn OUT transfer fail\""
                        },
                        "value": "Tkn OUT transfer fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_782ac0edbdee19fdccac734fd278995da9a5c4045f217ad45e5f46d68b7d718b",
                          "typeString": "literal_string \"Tkn OUT transfer fail\""
                        }
                      ],
                      "id": 770,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7932:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7932:95:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 781,
                  "nodeType": "ExpressionStatement",
                  "src": "7932:95:1"
                },
                {
                  "expression": {
                    "id": 782,
                    "name": "tokensPaid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 746,
                    "src": "8044:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 744,
                  "id": 783,
                  "nodeType": "Return",
                  "src": "8037:17:1"
                }
              ]
            },
            "functionSelector": "f0b2cc89",
            "id": 785,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 740,
                    "name": "tokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 733,
                    "src": "7650:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 741,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 739,
                  "name": "hasLiquidity",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 112,
                  "src": "7637:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "7637:26:1"
              }
            ],
            "name": "ethToToken",
            "nameLocation": "7548:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 733,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "7567:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 785,
                  "src": "7559:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 732,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7559:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 735,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "7589:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 785,
                  "src": "7581:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 734,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7581:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 737,
                  "mutability": "mutable",
                  "name": "minTokensOut",
                  "nameLocation": "7608:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 785,
                  "src": "7600:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 736,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7600:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7558:63:1"
            },
            "returnParameters": {
              "id": 744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 743,
                  "mutability": "mutable",
                  "name": "tokensPaid",
                  "nameLocation": "7680:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 785,
                  "src": "7672:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 742,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7672:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7671:20:1"
            },
            "scope": 944,
            "src": "7539:522:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 851,
              "nodeType": "Block",
              "src": "8223:414:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 807,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8284:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 808,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8284:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 811,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "8304:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MiniSwap_$944",
                                  "typeString": "contract MiniSwap"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MiniSwap_$944",
                                  "typeString": "contract MiniSwap"
                                }
                              ],
                              "id": 810,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8296:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 809,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8296:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 812,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8296:13:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 813,
                            "name": "tokensIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 791,
                            "src": "8311:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "expression": {
                              "baseExpression": {
                                "id": 802,
                                "name": "exchanges",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25,
                                "src": "8241:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                                  "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                                }
                              },
                              "id": 804,
                              "indexExpression": {
                                "id": 803,
                                "name": "tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 787,
                                "src": "8251:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8241:23:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Exchange_$20_storage",
                                "typeString": "struct MiniSwap.Exchange storage ref"
                              }
                            },
                            "id": 805,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "token",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9,
                            "src": "8241:29:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1022",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1003,
                          "src": "8241:42:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8241:79:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546b6e20494e207472616e73666572206661696c",
                        "id": 815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8322:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_23ec12bf70a5d0c51627edf6492fb7193a0682aa446f9cd04a642afbd84220fe",
                          "typeString": "literal_string \"Tkn IN transfer fail\""
                        },
                        "value": "Tkn IN transfer fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_23ec12bf70a5d0c51627edf6492fb7193a0682aa446f9cd04a642afbd84220fe",
                          "typeString": "literal_string \"Tkn IN transfer fail\""
                        }
                      ],
                      "id": 801,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8233:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8233:112:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 817,
                  "nodeType": "ExpressionStatement",
                  "src": "8233:112:1"
                },
                {
                  "assignments": [
                    819
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 819,
                      "mutability": "mutable",
                      "name": "ethPaid",
                      "nameLocation": "8363:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 851,
                      "src": "8355:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 818,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8355:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 824,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 821,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 787,
                        "src": "8391:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 822,
                        "name": "tokensIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 791,
                        "src": "8405:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 820,
                      "name": "tokenToEthPrivate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 731,
                      "src": "8373:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) returns (uint256)"
                      }
                    },
                    "id": 823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8373:41:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8355:59:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 826,
                          "name": "ethPaid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 819,
                          "src": "8432:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 827,
                          "name": "minEthOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 793,
                          "src": "8443:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8432:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "65746850616964203c206d696e4574684f7574",
                        "id": 829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8454:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c7dc0858ed063ada4e2b3dc726cdeb49fb266a744b043b593f1ba63ffce184cd",
                          "typeString": "literal_string \"ethPaid < minEthOut\""
                        },
                        "value": "ethPaid < minEthOut"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c7dc0858ed063ada4e2b3dc726cdeb49fb266a744b043b593f1ba63ffce184cd",
                          "typeString": "literal_string \"ethPaid < minEthOut\""
                        }
                      ],
                      "id": 825,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8424:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8424:52:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 831,
                  "nodeType": "ExpressionStatement",
                  "src": "8424:52:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 833,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 787,
                        "src": "8503:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 834,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8517:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8517:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 836,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 789,
                        "src": "8529:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 837,
                        "name": "tokensIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 791,
                        "src": "8540:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 838,
                        "name": "ethPaid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 819,
                        "src": "8550:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 832,
                      "name": "EthPurchase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "8491:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8491:67:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 840,
                  "nodeType": "EmitStatement",
                  "src": "8486:72:1"
                },
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 843,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 789,
                            "src": "8576:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8568:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 841,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8568:8:1",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8568:18:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 845,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "8568:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "names": [
                      "value"
                    ],
                    "nodeType": "FunctionCallOptions",
                    "options": [
                      {
                        "id": 846,
                        "name": "ethPaid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 819,
                        "src": "8598:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "src": "8568:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                    }
                  },
                  "id": 848,
                  "nodeType": "ExpressionStatement",
                  "src": "8568:38:1"
                },
                {
                  "expression": {
                    "id": 849,
                    "name": "ethPaid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 819,
                    "src": "8623:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 800,
                  "id": 850,
                  "nodeType": "Return",
                  "src": "8616:14:1"
                }
              ]
            },
            "functionSelector": "73e10d1d",
            "id": 852,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 796,
                    "name": "tokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 787,
                    "src": "8185:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 797,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 795,
                  "name": "hasLiquidity",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 112,
                  "src": "8172:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "8172:26:1"
              }
            ],
            "name": "tokenToEth",
            "nameLocation": "8076:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 794,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 787,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "8095:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 852,
                  "src": "8087:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 786,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8087:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 789,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "8117:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 852,
                  "src": "8109:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 788,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8109:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 791,
                  "mutability": "mutable",
                  "name": "tokensIn",
                  "nameLocation": "8136:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 852,
                  "src": "8128:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 790,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8128:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 793,
                  "mutability": "mutable",
                  "name": "minEthOut",
                  "nameLocation": "8154:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 852,
                  "src": "8146:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 792,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8146:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8086:78:1"
            },
            "returnParameters": {
              "id": 800,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 799,
                  "mutability": "mutable",
                  "name": "ethPaid",
                  "nameLocation": "8215:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 852,
                  "src": "8207:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 798,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8207:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8206:17:1"
            },
            "scope": 944,
            "src": "8067:570:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 942,
              "nodeType": "Block",
              "src": "8868:668:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 879,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8933:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 880,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8933:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 883,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "8953:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MiniSwap_$944",
                                  "typeString": "contract MiniSwap"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MiniSwap_$944",
                                  "typeString": "contract MiniSwap"
                                }
                              ],
                              "id": 882,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8945:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 881,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8945:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8945:13:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 885,
                            "name": "tokensIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 860,
                            "src": "8960:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "expression": {
                              "baseExpression": {
                                "id": 874,
                                "name": "exchanges",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25,
                                "src": "8886:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                                  "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                                }
                              },
                              "id": 876,
                              "indexExpression": {
                                "id": 875,
                                "name": "tokenFromAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 854,
                                "src": "8896:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8886:27:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Exchange_$20_storage",
                                "typeString": "struct MiniSwap.Exchange storage ref"
                              }
                            },
                            "id": 877,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "token",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9,
                            "src": "8886:33:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1022",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1003,
                          "src": "8886:46:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8886:83:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546b6e20494e207472616e73666572206661696c",
                        "id": 887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8971:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_23ec12bf70a5d0c51627edf6492fb7193a0682aa446f9cd04a642afbd84220fe",
                          "typeString": "literal_string \"Tkn IN transfer fail\""
                        },
                        "value": "Tkn IN transfer fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_23ec12bf70a5d0c51627edf6492fb7193a0682aa446f9cd04a642afbd84220fe",
                          "typeString": "literal_string \"Tkn IN transfer fail\""
                        }
                      ],
                      "id": 873,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8878:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8878:116:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 889,
                  "nodeType": "ExpressionStatement",
                  "src": "8878:116:1"
                },
                {
                  "assignments": [
                    891
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 891,
                      "mutability": "mutable",
                      "name": "ethTransfer",
                      "nameLocation": "9012:11:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 942,
                      "src": "9004:19:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 890,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9004:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 896,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 893,
                        "name": "tokenFromAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 854,
                        "src": "9044:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 894,
                        "name": "tokensIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 860,
                        "src": "9062:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 892,
                      "name": "tokenToEthPrivate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 731,
                      "src": "9026:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) returns (uint256)"
                      }
                    },
                    "id": 895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9026:45:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9004:67:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 898,
                          "name": "ethTransfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 891,
                          "src": "9089:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9103:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9089:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820746f6b656e7320696e207061696420696e",
                        "id": 901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9106:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a967c2c7e372055e7dddfa5c6afe1be064339f82f01663747295c44c94dcd6cd",
                          "typeString": "literal_string \"Not enough tokens in paid in\""
                        },
                        "value": "Not enough tokens in paid in"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a967c2c7e372055e7dddfa5c6afe1be064339f82f01663747295c44c94dcd6cd",
                          "typeString": "literal_string \"Not enough tokens in paid in\""
                        }
                      ],
                      "id": 897,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9081:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9081:56:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 903,
                  "nodeType": "ExpressionStatement",
                  "src": "9081:56:1"
                },
                {
                  "assignments": [
                    905
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 905,
                      "mutability": "mutable",
                      "name": "tokensOut",
                      "nameLocation": "9155:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 942,
                      "src": "9147:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 904,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9147:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 910,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 907,
                        "name": "tokenToAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 858,
                        "src": "9185:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 908,
                        "name": "ethTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 891,
                        "src": "9201:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 906,
                      "name": "ethToTokenPrivate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 657,
                      "src": "9167:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) returns (uint256)"
                      }
                    },
                    "id": 909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9167:46:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9147:66:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 912,
                          "name": "tokensOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 905,
                          "src": "9231:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 913,
                          "name": "minTokensOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 862,
                          "src": "9244:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9231:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7574707574206c657373207468616e206d696e546f6b656e734f7574",
                        "id": 915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9258:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2b4b88f7b052f63117aecf85e068332a7f0045b713f13d49515d97984bfc574c",
                          "typeString": "literal_string \"Output less than minTokensOut\""
                        },
                        "value": "Output less than minTokensOut"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2b4b88f7b052f63117aecf85e068332a7f0045b713f13d49515d97984bfc574c",
                          "typeString": "literal_string \"Output less than minTokensOut\""
                        }
                      ],
                      "id": 911,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9223:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9223:67:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 917,
                  "nodeType": "ExpressionStatement",
                  "src": "9223:67:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 924,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 856,
                            "src": "9349:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 925,
                            "name": "tokensOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 905,
                            "src": "9360:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "expression": {
                              "baseExpression": {
                                "id": 919,
                                "name": "exchanges",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25,
                                "src": "9308:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Exchange_$20_storage_$",
                                  "typeString": "mapping(address => struct MiniSwap.Exchange storage ref)"
                                }
                              },
                              "id": 921,
                              "indexExpression": {
                                "id": 920,
                                "name": "tokenToAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 858,
                                "src": "9318:14:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9308:25:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Exchange_$20_storage",
                                "typeString": "struct MiniSwap.Exchange storage ref"
                              }
                            },
                            "id": 922,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "token",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9,
                            "src": "9308:31:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1022",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 971,
                          "src": "9308:40:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9308:62:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546b6e204f5554207472616e73666572206661696c",
                        "id": 927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9372:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_782ac0edbdee19fdccac734fd278995da9a5c4045f217ad45e5f46d68b7d718b",
                          "typeString": "literal_string \"Tkn OUT transfer fail\""
                        },
                        "value": "Tkn OUT transfer fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_782ac0edbdee19fdccac734fd278995da9a5c4045f217ad45e5f46d68b7d718b",
                          "typeString": "literal_string \"Tkn OUT transfer fail\""
                        }
                      ],
                      "id": 918,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9300:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9300:96:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 929,
                  "nodeType": "ExpressionStatement",
                  "src": "9300:96:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 931,
                        "name": "tokenFromAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 854,
                        "src": "9424:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 932,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9442:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9442:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 934,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 856,
                        "src": "9454:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 935,
                        "name": "tokenToAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 858,
                        "src": "9465:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 936,
                        "name": "tokensIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 860,
                        "src": "9481:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 937,
                        "name": "ethTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 891,
                        "src": "9491:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 930,
                      "name": "TokenToToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "9411:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9411:92:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 939,
                  "nodeType": "EmitStatement",
                  "src": "9406:97:1"
                },
                {
                  "expression": {
                    "id": 940,
                    "name": "tokensOut",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 905,
                    "src": "9520:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 872,
                  "id": 941,
                  "nodeType": "Return",
                  "src": "9513:16:1"
                }
              ]
            },
            "functionSelector": "aff8e1e9",
            "id": 943,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 865,
                    "name": "tokenFromAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 854,
                    "src": "8794:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 866,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 864,
                  "name": "hasLiquidity",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 112,
                  "src": "8781:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "8781:30:1"
              },
              {
                "arguments": [
                  {
                    "id": 868,
                    "name": "tokenToAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 858,
                    "src": "8825:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 869,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 867,
                  "name": "hasLiquidity",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 112,
                  "src": "8812:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "8812:28:1"
              }
            ],
            "name": "tokenToToken",
            "nameLocation": "8652:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 863,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 854,
                  "mutability": "mutable",
                  "name": "tokenFromAddress",
                  "nameLocation": "8673:16:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 943,
                  "src": "8665:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 853,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8665:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 856,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "8699:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 943,
                  "src": "8691:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 855,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8691:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 858,
                  "mutability": "mutable",
                  "name": "tokenToAddress",
                  "nameLocation": "8718:14:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 943,
                  "src": "8710:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 857,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8710:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 860,
                  "mutability": "mutable",
                  "name": "tokensIn",
                  "nameLocation": "8742:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 943,
                  "src": "8734:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 859,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8734:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 862,
                  "mutability": "mutable",
                  "name": "minTokensOut",
                  "nameLocation": "8760:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 943,
                  "src": "8752:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 861,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8752:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8664:109:1"
            },
            "returnParameters": {
              "id": 872,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 871,
                  "mutability": "mutable",
                  "name": "tokensPaid",
                  "nameLocation": "8857:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 943,
                  "src": "8849:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 870,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8849:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8848:20:1"
            },
            "scope": 944,
            "src": "8643:893:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 945,
        "src": "313:9225:1",
        "usedErrors": []
      }
    ],
    "src": "58:9480:1"
  },
  "bytecode": "",
  "bytecodeSha1": "a5478b0e68044c0137208385c2cb85e23eb1b6a5",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "MiniSwap",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "MiniSwap.divest": {
          "56": [
            4080,
            4140,
            true
          ],
          "57": [
            4408,
            4468,
            true
          ]
        },
        "MiniSwap.ethToToken": {
          "61": [
            7782,
            7808,
            true
          ],
          "62": [
            7940,
            8001,
            true
          ]
        },
        "MiniSwap.ethToTokenPrivate": {
          "64": [
            6495,
            6542,
            true
          ]
        },
        "MiniSwap.invest": {
          "54": [
            2845,
            2881,
            true
          ],
          "55": [
            2930,
            3016,
            true
          ]
        },
        "MiniSwap.seedInvest": {
          "58": [
            1864,
            1904,
            true
          ],
          "59": [
            1982,
            2001,
            false
          ],
          "60": [
            2005,
            2018,
            true
          ]
        },
        "MiniSwap.tokenToEth": {
          "48": [
            8241,
            8320,
            true
          ],
          "49": [
            8432,
            8452,
            true
          ]
        },
        "MiniSwap.tokenToEthPrivate": {
          "63": [
            7344,
            7386,
            true
          ]
        },
        "MiniSwap.tokenToToken": {
          "50": [
            8886,
            8969,
            true
          ],
          "51": [
            9089,
            9104,
            true
          ],
          "52": [
            9231,
            9256,
            true
          ],
          "53": [
            9308,
            9370,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {},
      "1": {
        "MiniSwap.divest": {
          "20": [
            4072,
            4172
          ],
          "21": [
            4400,
            4469
          ],
          "22": [
            4527,
            4568
          ],
          "23": [
            4578,
            4623
          ],
          "24": [
            4633,
            4693
          ],
          "25": [
            4703,
            4748
          ],
          "26": [
            4758,
            4825
          ]
        },
        "MiniSwap.ethToToken": {
          "37": [
            7774,
            7834
          ],
          "38": [
            7844,
            7922
          ],
          "39": [
            7932,
            8027
          ],
          "40": [
            8037,
            8054
          ]
        },
        "MiniSwap.ethToTokenPrivate": {
          "45": [
            6014,
            6054
          ],
          "46": [
            6487,
            6566
          ],
          "47": [
            6622,
            6669
          ]
        },
        "MiniSwap.getEthToTokenQuote": {
          "35": [
            5345,
            5424
          ]
        },
        "MiniSwap.getShares": {
          "0": [
            4948,
            5003
          ]
        },
        "MiniSwap.getTokenToEthQuote": {
          "19": [
            5772,
            5849
          ]
        },
        "MiniSwap.invest": {
          "12": [
            2837,
            2911
          ],
          "13": [
            2921,
            3017
          ],
          "14": [
            3153,
            3197
          ],
          "15": [
            3207,
            3259
          ],
          "16": [
            3311,
            3380
          ],
          "17": [
            3390,
            3444
          ],
          "18": [
            3454,
            3540
          ]
        },
        "MiniSwap.investQuoteFromEth": {
          "36": [
            3675,
            3761
          ]
        },
        "MiniSwap.investQuoteFromTokens": {
          "1": [
            3899,
            3988
          ]
        },
        "MiniSwap.seedInvest": {
          "27": [
            1855,
            1963
          ],
          "28": [
            1973,
            2049
          ],
          "29": [
            2059,
            2145
          ],
          "30": [
            2155,
            2206
          ],
          "31": [
            2216,
            2259
          ],
          "32": [
            2320,
            2378
          ],
          "33": [
            2388,
            2431
          ],
          "34": [
            2441,
            2517
          ]
        },
        "MiniSwap.tokenToEth": {
          "2": [
            8233,
            8345
          ],
          "3": [
            8424,
            8476
          ],
          "4": [
            8486,
            8558
          ],
          "5": [
            8616,
            8630
          ]
        },
        "MiniSwap.tokenToEthPrivate": {
          "41": [
            6861,
            6906
          ],
          "42": [
            7336,
            7407
          ],
          "43": [
            7460,
            7502
          ],
          "44": [
            7512,
            7526
          ]
        },
        "MiniSwap.tokenToToken": {
          "6": [
            8878,
            8994
          ],
          "7": [
            9081,
            9137
          ],
          "8": [
            9223,
            9290
          ],
          "9": [
            9300,
            9396
          ],
          "10": [
            9406,
            9503
          ],
          "11": [
            9513,
            9529
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.4.0/IERC20"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "313:9225:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4838:172;;;;;;;;;;-1:-1:-1;4838:172:1;;;;;:::i;:::-;-1:-1:-1;;;;;4955:23:1;;;4918:18;4955:23;;;:9;:23;;;;;;;;:48;;;;;;:38;;;;:48;;;;;;4838:172;;;;603:25:2;;;591:2;576:18;4838:172:1;;;;;;;;3774:221;;;;;;;;;;-1:-1:-1;3774:221:1;;;;;:::i;:::-;;:::i;365:28::-;;;;;;;;;;;;;;;;8067:570;;;;;;;;;;-1:-1:-1;8067:570:1;;;;;:::i;:::-;;:::i;702:46::-;;;;;;;;;;-1:-1:-1;702:46:1;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;702:46:1;;;;;;;;;;;;-1:-1:-1;;;;;1755:32:2;;;1737:51;;1819:2;1804:18;;1797:34;;;;1847:18;;;1840:34;1905:2;1890:18;;1883:34;1724:3;1709:19;702:46:1;1491:432:2;337:22:1;;;;;;;;;;;;;;;;8643:893;;;;;;;;;;-1:-1:-1;8643:893:1;;;;;:::i;:::-;;:::i;2530:1017::-;;;;;;:::i;:::-;;:::i;:::-;;5437:419;;;;;;;;;;-1:-1:-1;5437:419:1;;;;;:::i;:::-;;:::i;4001:831::-;;;;;;;;;;-1:-1:-1;4001:831:1;;;;;:::i;:::-;;:::i;1763:761::-;;;;;;:::i;:::-;;:::i;5016:415::-;;;;;;;;;;-1:-1:-1;5016:415:1;;;;;:::i;:::-;;:::i;3553:215::-;;;;;;;;;;-1:-1:-1;3553:215:1;;;;;:::i;:::-;;:::i;7539:522::-;;;;;;:::i;:::-;;:::i;3774:221::-;-1:-1:-1;;;;;3954:23:1;;3868:19;3954:23;;;:9;:23;;;;;;;:33;;;;3907:31;;;;;:44;;3941:10;;3907:44;:::i;:::-;:80;;;;:::i;:::-;3899:89;3774:221;-1:-1:-1;;;3774:221:1:o;8067:570::-;-1:-1:-1;;;;;1710:16:1;;8207:15;1710:16;;;:9;:16;;;;;:24;;;8185:12;;1702:37;;;;;;-1:-1:-1;;;;;8241:23:1;;::::1;;::::0;;;:9:::1;:23;::::0;;;;;;:29;:79;;-1:-1:-1;;;8241:79:1;;:29;::::1;::::0;:42:::1;::::0;:79:::1;::::0;8284:10:::1;::::0;8304:4:::1;::::0;8311:8;;8241:79:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8233:112;;;::::0;-1:-1:-1;;;8233:112:1;;4129:2:2;8233:112:1::1;::::0;::::1;4111:21:2::0;4168:2;4148:18;;;4141:30;-1:-1:-1;;;4187:18:2;;;4180:50;4247:18;;8233:112:1::1;;;;;;;;;8355:15;8373:41;8391:12;8405:8;8373:17;:41::i;:::-;8355:59;;8443:9;8432:7;:20;;8424:52;;;::::0;-1:-1:-1;;;8424:52:1;;4478:2:2;8424:52:1::1;::::0;::::1;4460:21:2::0;4517:2;4497:18;;;4490:30;-1:-1:-1;;;4536:18:2;;;4529:49;4595:18;;8424:52:1::1;4276:343:2::0;8424:52:1::1;8491:67;::::0;;4798:25:2;;;4854:2;4839:18;;4832:34;;;-1:-1:-1;;;;;8491:67:1;;::::1;::::0;8517:10:::1;::::0;8491:67;;::::1;::::0;::::1;::::0;4771:18:2;8491:67:1::1;;;;;;;8623:7:::0;8067:570;-1:-1:-1;;;;;;8067:570:1:o;8643:893::-;-1:-1:-1;;;;;1710:16:1;;8849:18;1710:16;;;:9;:16;;;;;:24;;;8794:16;;1702:37;;;;;;-1:-1:-1;;;;;1710:16:1;::::1;1737:1;1710:16:::0;;;:9:::1;:16;::::0;;;;:24:::1;;::::0;8825:14;;1702:37:::1;;;::::0;::::1;;-1:-1:-1::0;;;;;8886:27:1;;::::2;;::::0;;;:9:::2;:27;::::0;;;;;;:33;:83;;-1:-1:-1;;;8886:83:1;;:33;::::2;::::0;:46:::2;::::0;:83:::2;::::0;8933:10:::2;::::0;8953:4:::2;::::0;8960:8;;8886:83:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8878:116;;;::::0;-1:-1:-1;;;8878:116:1;;4129:2:2;8878:116:1::2;::::0;::::2;4111:21:2::0;4168:2;4148:18;;;4141:30;-1:-1:-1;;;4187:18:2;;;4180:50;4247:18;;8878:116:1::2;3927:344:2::0;8878:116:1::2;9004:19;9026:45;9044:16;9062:8;9026:17;:45::i;:::-;9004:67;;9103:1;9089:11;:15;9081:56;;;::::0;-1:-1:-1;;;9081:56:1;;5079:2:2;9081:56:1::2;::::0;::::2;5061:21:2::0;5118:2;5098:18;;;5091:30;5157;5137:18;;;5130:58;5205:18;;9081:56:1::2;4877:352:2::0;9081:56:1::2;9147:17;9167:46;9185:14;9201:11;9167:17;:46::i;:::-;9147:66;;9244:12;9231:9;:25;;9223:67;;;::::0;-1:-1:-1;;;9223:67:1;;5436:2:2;9223:67:1::2;::::0;::::2;5418:21:2::0;5475:2;5455:18;;;5448:30;5514:31;5494:18;;;5487:59;5563:18;;9223:67:1::2;5234:353:2::0;9223:67:1::2;-1:-1:-1::0;;;;;9308:25:1;;::::2;;::::0;;;:9:::2;:25;::::0;;;;;;:31;:62;;-1:-1:-1;;;9308:62:1;;5784:32:2;;;9308:62:1::2;::::0;::::2;5766:51:2::0;5833:18;;;5826:34;;;9308:31:1;::::2;::::0;:40:::2;::::0;5739:18:2;;9308:62:1::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9300:96;;;::::0;-1:-1:-1;;;9300:96:1;;6073:2:2;9300:96:1::2;::::0;::::2;6055:21:2::0;6112:2;6092:18;;;6085:30;-1:-1:-1;;;6131:18:2;;;6124:51;6192:18;;9300:96:1::2;5871:345:2::0;9300:96:1::2;9411:92;::::0;;-1:-1:-1;;;;;6441:32:2;;;6423:51;;6505:2;6490:18;;6483:34;;;6533:18;;;6526:34;;;9411:92:1;;::::2;::::0;9442:10:::2;::::0;9411:92;;::::2;::::0;::::2;::::0;6411:2:2;6396:18;9411:92:1::2;;;;;;;9520:9:::0;8643:893;-1:-1:-1;;;;;;;;;8643:893:1:o;2530:1017::-;-1:-1:-1;;;;;2795:23:1;;2720;2795;;;:9;:23;;;;;;;:31;;;;2747:33;;;:45;;2783:9;;2747:45;:::i;:::-;:79;;;;:::i;:::-;2720:107;;2866:15;2845:17;:36;;2837:74;;;;-1:-1:-1;;;2837:74:1;;6773:2:2;2837:74:1;;;6755:21:2;6812:2;6792:18;;;6785:30;6851:27;6831:18;;;6824:55;6896:18;;2837:74:1;6571:349:2;2837:74:1;-1:-1:-1;;;;;2930:23:1;;;;;;;:9;:23;;;;;;;:29;:86;;-1:-1:-1;;;2930:86:1;;:29;;;:42;;:86;;2973:10;;2993:4;;3000:15;;2930:86;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2921:96;;;;;;-1:-1:-1;;;;;3110:23:1;;3027;3110;;;:9;:23;;;;;;;:33;;;;3072:35;;;;;3054:53;;:15;:53;:::i;:::-;3053:90;;;;:::i;:::-;-1:-1:-1;;;;;3153:23:1;;;;;;:9;:23;;;;;:31;;:44;;3027:116;;-1:-1:-1;3188:9:1;;3153:31;;:23;:44;;3188:9;;3153:44;:::i;:::-;;;;-1:-1:-1;;;;;;;3207:23:1;;;;;;:9;:23;;;;;;;:33;:52;;3244:15;;3207:23;:52;;3244:15;;3207:52;:::i;:::-;;;;-1:-1:-1;;;;;;;3311:23:1;;;;;;:9;:23;;;;;;;;3350:10;3311:50;;:38;;:50;;;;;:69;;3365:15;;3311:23;:69;;3365:15;;3311:69;:::i;:::-;;;;-1:-1:-1;;;;;;;3390:23:1;;;;;;:9;:23;;;;;:35;;:54;;3429:15;;3390:23;:54;;3429:15;;3390:54;:::i;:::-;;;;-1:-1:-1;;3459:81:1;;;3513:9;4798:25:2;;4854:2;4839:18;;4832:34;;;3496:15:1;;3484:10;;-1:-1:-1;;;;;3459:81:1;;;;;4771:18:2;3459:81:1;;;;;;;;2609:938;;2530:1017;;:::o;5437:419::-;5528:16;5556:11;5583:7;;5570:10;:20;;;;:::i;:::-;-1:-1:-1;;;;;5619:23:1;;5600:16;5619:23;;;:9;:23;;;;;;;:33;;5556:34;;-1:-1:-1;5600:16:1;5619:46;;5655:10;;5619:46;:::i;:::-;-1:-1:-1;;;;;5729:23:1;;5675:17;5729:23;;;:9;:23;;;;;;;:33;;;;5695:31;;;;;5600:65;;-1:-1:-1;5675:17:1;;5695:67;;5729:33;5695:67;:::i;:::-;5675:87;-1:-1:-1;5828:14:1;5839:3;5828:8;:14;:::i;:::-;5815:28;;:9;:28;:::i;:::-;:32;;5846:1;5815:32;:::i;:::-;-1:-1:-1;;;;;5780:23:1;;;;;;:9;:23;;;;;:31;;;:68;;;;:::i;:::-;5772:77;5437:419;-1:-1:-1;;;;;;5437:419:1:o;4001:831::-;-1:-1:-1;;;;;4080:23:1;;;;;;:9;:23;;;;;;;;4119:10;4080:50;;:38;;:50;;;;;;:60;-1:-1:-1;4080:60:1;4072:100;;;;-1:-1:-1;;;4072:100:1;;7390:2:2;4072:100:1;;;7372:21:2;7429:2;7409:18;;;7402:30;7468:29;7448:18;;;7441:57;7515:18;;4072:100:1;7188:351:2;4072:100:1;-1:-1:-1;;;;;4244:23:1;;4182:14;4244:23;;;:9;:23;;;;;:35;;;;4200:31;;;;;:40;;4234:6;;4200:40;:::i;:::-;4199:80;;;;:::i;:::-;-1:-1:-1;;;;;4355:23:1;;4289:16;4355:23;;;:9;:23;;;;;;;:35;;;;4309:33;;;4182:97;;-1:-1:-1;4289:16:1;;4309:42;;4345:6;;4309:42;:::i;:::-;4308:82;;;;:::i;:::-;-1:-1:-1;;;;;4408:23:1;;;;;;;:9;:23;;;;;;;:29;:60;;-1:-1:-1;;;4408:60:1;;4447:10;4408:60;;;5766:51:2;5833:18;;;5826:34;;;4289:101:1;;-1:-1:-1;4408:29:1;;:38;;5739:18:2;;4408:60:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4400:69;;;;;;-1:-1:-1;;;;;4527:23:1;;;;;;:9;:23;;;;;:31;;:41;;4562:6;;4527:23;:41;;4562:6;;4527:41;:::i;:::-;;;;-1:-1:-1;;;;;;;4578:23:1;;;;;;:9;:23;;;;;;;:33;:45;;4615:8;;4578:23;:45;;4615:8;;4578:45;:::i;:::-;;;;-1:-1:-1;;;;;;;4633:23:1;;;;;;:9;:23;;;;;;;;4672:10;4633:50;;:38;;:50;;;;;:60;;4687:6;;4633:23;:60;;4687:6;;4633:60;:::i;:::-;;;;-1:-1:-1;;;;;;;4703:23:1;;;;;;:9;:23;;;;;:35;;:45;;4742:6;;4703:23;:45;;4742:6;;4703:45;:::i;:::-;;;;-1:-1:-1;;4763:62:1;;;4798:25:2;;;4854:2;4839:18;;4832:34;;;4800:6:1;;4788:10;;-1:-1:-1;;;;;4763:62:1;;;;;4771:18:2;4763:62:1;4624:248:2;1763:761:1;-1:-1:-1;;;;;1864:23:1;;;;;;:9;:23;;;;;:35;;;:40;1855:108;;;;-1:-1:-1;;;1855:108:1;;7746:2:2;1855:108:1;;;7728:21:2;7785:2;7765:18;;;7758:30;7824:34;7804:18;;;7797:62;-1:-1:-1;;;7875:18:2;;;7868:52;7937:19;;1855:108:1;7544:418:2;1855:108:1;2000:1;1982:15;:19;:36;;;;;2017:1;2005:9;:13;1982:36;1973:76;;;;-1:-1:-1;;;1973:76:1;;8169:2:2;1973:76:1;;;8151:21:2;8208:2;8188:18;;;8181:30;8247:28;8227:18;;;8220:56;8293:18;;1973:76:1;7967:350:2;1973:76:1;-1:-1:-1;;;;;2059:23:1;;;;;;;:9;:23;;;;;;;:29;:86;;-1:-1:-1;;;2059:86:1;;:29;;;:42;;:86;;2102:10;;2122:4;;2129:15;;2059:86;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;2155:23:1;;;;;;:9;:23;;;;;;;;:33;;;:51;;;2250:9;2216:31;;;:43;;;2359:10;2320:50;;;:38;;;:50;;;;;2373:5;2320:58;;;;2388:23;;;;;;;:35;;;;:43;;;2446:71;;4798:25:2;;;4839:18;;;4832:34;;;2373:5:1;;2359:10;;2446:71;;4771:18:2;2446:71:1;;;;;;;1763:761;;:::o;5016:415::-;5105:18;5135:11;5160:7;;5149:8;:18;;;;:::i;:::-;-1:-1:-1;;;;;5196:23:1;;5177:16;5196:23;;;:9;:23;;;;;:31;;;5135:32;;-1:-1:-1;5177:16:1;5196:42;;5230:8;;5196:42;:::i;:::-;-1:-1:-1;;;;;5302:23:1;;5248:17;5302:23;;;:9;:23;;;;;;;:33;;;;5268:31;;;;;5177:61;;-1:-1:-1;5248:17:1;;5268:67;;5302:33;5268:67;:::i;:::-;5248:87;-1:-1:-1;5403:14:1;5414:3;5403:8;:14;:::i;:::-;5390:28;;:9;:28;:::i;:::-;:32;;5421:1;5390:32;:::i;:::-;-1:-1:-1;;;;;5353:23:1;;;;;;:9;:23;;;;;;;;:33;;:70;;;;:::i;3553:215::-;-1:-1:-1;;;;;3729:23:1;;3641:22;3729:23;;;:9;:23;;;;;;;:31;;;;3683:33;;;:43;;3719:7;;3683:43;:::i;7539:522::-;-1:-1:-1;;;;;1710:16:1;;7672:18;1710:16;;;:9;:16;;;;;:24;;;7650:12;;1702:37;;;;;;7701:18:::1;7722:42;7740:12;7754:9;7722:17;:42::i;:::-;7701:63;;7796:12;7782:10;:26;;7774:60;;;::::0;-1:-1:-1;;;7774:60:1;;8524:2:2;7774:60:1::1;::::0;::::1;8506:21:2::0;8563:2;8543:18;;;8536:30;-1:-1:-1;;;8582:18:2;;;8575:51;8643:18;;7774:60:1::1;8322:345:2::0;7774:60:1::1;7849:73;::::0;;7900:9:::1;4798:25:2::0;;4854:2;4839:18;;4832:34;;;-1:-1:-1;;;;;7849:73:1;;::::1;::::0;7877:10:::1;::::0;7849:73;;::::1;::::0;::::1;::::0;4771:18:2;7849:73:1::1;;;;;;;-1:-1:-1::0;;;;;7940:23:1;;::::1;;::::0;;;:9:::1;:23;::::0;;;;;;:29;:61;;-1:-1:-1;;;7940:61:1;;5784:32:2;;;7940:61:1::1;::::0;::::1;5766:51:2::0;5833:18;;;5826:34;;;7940:29:1;::::1;::::0;:38:::1;::::0;5739:18:2;;7940:61:1::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7932:95;;;::::0;-1:-1:-1;;;7932:95:1;;6073:2:2;7932:95:1::1;::::0;::::1;6055:21:2::0;6112:2;6092:18;;;6085:30;-1:-1:-1;;;6131:18:2;;;6124:51;6192:18;;7932:95:1::1;5871:345:2::0;7932:95:1::1;8044:10:::0;7539:522;-1:-1:-1;;;;;7539:522:1:o;6709:824::-;6792:16;6819:11;6844:7;;6833:8;:18;;;;:::i;:::-;6819:32;;6898:8;6861:9;:23;6871:12;-1:-1:-1;;;;;6861:23:1;-1:-1:-1;;;;;6861:23:1;;;;;;;;;;;;:33;;;:45;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;6970:23:1;;6916:17;6970:23;;;:9;:23;;;;;;;:33;;;;6936:31;;;;;:67;;6970:33;6936:67;:::i;:::-;-1:-1:-1;;;;;7079:23:1;;7013:15;7079:23;;;:9;:23;;;;;;;:33;;6916:87;;-1:-1:-1;7013:15:1;7079:39;;7115:3;;7079:39;:::i;:::-;7066:53;;:9;:53;:::i;:::-;:57;;7122:1;7066:57;:::i;:::-;-1:-1:-1;;;;;7031:23:1;;;;;;:9;:23;;;;;:31;;;:93;;;;:::i;:::-;-1:-1:-1;;;;;7355:23:1;;;;;;:9;:23;;;;;:31;;;7013:111;;-1:-1:-1;7344:42:1;;;7336:71;;;;-1:-1:-1;;;7336:71:1;;8874:2:2;7336:71:1;;;8856:21:2;8913:2;8893:18;;;8886:30;-1:-1:-1;;;8932:18:2;;;8925:46;8988:18;;7336:71:1;8672:340:2;7336:71:1;-1:-1:-1;;;;;7460:23:1;;;;;;:9;:23;;;;;:31;;:42;;7495:7;;7460:23;:42;;7495:7;;7460:42;:::i;:::-;;;;-1:-1:-1;7519:7:1;;6709:824;-1:-1:-1;;;;;;6709:824:1:o;5866:837::-;5946:18;5975:11;5997:7;;5989:5;:15;;;;:::i;:::-;-1:-1:-1;;;;;6014:23:1;;;;;;:9;:23;;;;;:31;;:40;;5975:29;;-1:-1:-1;6049:5:1;;6014:31;;:23;:40;;6049:5;;6014:40;:::i;:::-;;;;-1:-1:-1;;;;;;;6118:23:1;;6064:17;6118:23;;;:9;:23;;;;;;;:33;;;;6084:31;;;;;:67;;6118:33;6084:67;:::i;:::-;-1:-1:-1;;;;;6232:23:1;;6161:18;6232:23;;;:9;:23;;;;;:31;;;6064:87;;-1:-1:-1;6161:18:1;6232:37;;6266:3;;6232:37;:::i;:::-;6219:51;;:9;:51;:::i;:::-;:55;;6273:1;6219:55;:::i;:::-;-1:-1:-1;;;;;6182:23:1;;;;;;:9;:23;;;;;;;;:33;;:93;;;;:::i;:::-;-1:-1:-1;;;;;6509:23:1;;;;;;:9;:23;;;;;;;;:33;;6161:114;;-1:-1:-1;6495:47:1;;;6487:79;;;;-1:-1:-1;;;6487:79:1;;9219:2:2;6487:79:1;;;9201:21:2;9258:2;9238:18;;;9231:30;-1:-1:-1;;;9277:18:2;;;9270:49;9336:18;;6487:79:1;9017:343:2;6487:79:1;-1:-1:-1;;;;;6622:23:1;;;;;;:9;:23;;;;;;;:33;:47;;6659:10;;6622:23;:47;;6659:10;;6622:47;:::i;14:173:2:-;82:20;;-1:-1:-1;;;;;131:31:2;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:260::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;;408:38;442:2;431:9;427:18;408:38;:::i;:::-;398:48;;192:260;;;;;:::o;639:254::-;707:6;715;768:2;756:9;747:7;743:23;739:32;736:52;;;784:1;781;774:12;736:52;807:29;826:9;807:29;:::i;:::-;797:39;883:2;868:18;;;;855:32;;-1:-1:-1;;;639:254:2:o;898:397::-;984:6;992;1000;1008;1061:3;1049:9;1040:7;1036:23;1032:33;1029:53;;;1078:1;1075;1068:12;1029:53;1101:29;1120:9;1101:29;:::i;:::-;1091:39;;1149:38;1183:2;1172:9;1168:18;1149:38;:::i;:::-;898:397;;1139:48;;-1:-1:-1;;;;1234:2:2;1219:18;;1206:32;;1285:2;1270:18;1257:32;;898:397::o;1300:186::-;1359:6;1412:2;1400:9;1391:7;1387:23;1383:32;1380:52;;;1428:1;1425;1418:12;1380:52;1451:29;1470:9;1451:29;:::i;1928:472::-;2023:6;2031;2039;2047;2055;2108:3;2096:9;2087:7;2083:23;2079:33;2076:53;;;2125:1;2122;2115:12;2076:53;2148:29;2167:9;2148:29;:::i;:::-;2138:39;;2196:38;2230:2;2219:9;2215:18;2196:38;:::i;:::-;2186:48;;2253:38;2287:2;2276:9;2272:18;2253:38;:::i;:::-;1928:472;;;;-1:-1:-1;2243:48:2;;2338:2;2323:18;;2310:32;;-1:-1:-1;2389:3:2;2374:19;2361:33;;1928:472;-1:-1:-1;;1928:472:2:o;2405:328::-;2482:6;2490;2498;2551:2;2539:9;2530:7;2526:23;2522:32;2519:52;;;2567:1;2564;2557:12;2519:52;2590:29;2609:9;2590:29;:::i;:::-;2580:39;;2638:38;2672:2;2661:9;2657:18;2638:38;:::i;:::-;2628:48;;2723:2;2712:9;2708:18;2695:32;2685:42;;2405:328;;;;;:::o;2738:127::-;2799:10;2794:3;2790:20;2787:1;2780:31;2830:4;2827:1;2820:15;2854:4;2851:1;2844:15;2870:168;2910:7;2976:1;2972;2968:6;2964:14;2961:1;2958:21;2953:1;2946:9;2939:17;2935:45;2932:71;;;2983:18;;:::i;:::-;-1:-1:-1;3023:9:2;;2870:168::o;3043:217::-;3083:1;3109;3099:132;;3153:10;3148:3;3144:20;3141:1;3134:31;3188:4;3185:1;3178:15;3216:4;3213:1;3206:15;3099:132;-1:-1:-1;3245:9:2;;3043:217::o;3265:375::-;-1:-1:-1;;;;;3523:15:2;;;3505:34;;3575:15;;;;3570:2;3555:18;;3548:43;3622:2;3607:18;;3600:34;;;;3455:2;3440:18;;3265:375::o;3645:277::-;3712:6;3765:2;3753:9;3744:7;3740:23;3736:32;3733:52;;;3781:1;3778;3771:12;3733:52;3813:9;3807:16;3866:5;3859:13;3852:21;3845:5;3842:32;3832:60;;3888:1;3885;3878:12;6925:128;6965:3;6996:1;6992:6;6989:1;6986:13;6983:39;;;7002:18;;:::i;:::-;-1:-1:-1;7038:9:2;;6925:128::o;7058:125::-;7098:4;7126:1;7123;7120:8;7117:34;;;7131:18;;:::i;:::-;-1:-1:-1;7168:9:2;;7058:125::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    313,
    9538
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDC JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB9B8C246 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xD1FF465F GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xD1FF465F EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0xE437AB1A EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0xEA16E6D1 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0xF0B2CC89 EQ PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB9B8C246 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0xBABD9ADD EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xBB504317 EQ PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x73E10D1D GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x73E10D1D EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x7412DBB3 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x978BBDB9 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0xAFF8E1E9 EQ PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x392040 EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0x5D44A878 EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x68972E50 EQ PUSH2 0x15E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12B PUSH2 0xFC CALLDATASIZE PUSH1 0x4 PUSH2 0x150C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE PUSH1 0x3 SWAP1 SWAP3 ADD SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12B PUSH2 0x159 CALLDATASIZE PUSH1 0x4 PUSH2 0x153F JUMP JUMPDEST PUSH2 0x2FD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12B PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12B PUSH2 0x18F CALLDATASIZE PUSH1 0x4 PUSH2 0x1569 JUMP JUMPDEST PUSH2 0x33D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E2 PUSH2 0x1AF CALLDATASIZE PUSH1 0x4 PUSH2 0x15AB JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 SWAP2 SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x135 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x218 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12B PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12B PUSH2 0x23D CALLDATASIZE PUSH1 0x4 PUSH2 0x15C6 JUMP JUMPDEST PUSH2 0x4DB JUMP JUMPDEST PUSH2 0x255 PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0x153F JUMP JUMPDEST PUSH2 0x7DA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12B PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0x153F JUMP JUMPDEST PUSH2 0xA49 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x255 PUSH2 0x292 CALLDATASIZE PUSH1 0x4 PUSH2 0x153F JUMP JUMPDEST PUSH2 0xB09 JUMP JUMPDEST PUSH2 0x255 PUSH2 0x2A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x153F JUMP JUMPDEST PUSH2 0xD92 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12B PUSH2 0x2C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x153F JUMP JUMPDEST PUSH2 0xF87 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12B PUSH2 0x2E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x153F JUMP JUMPDEST PUSH2 0x103E JUMP JUMPDEST PUSH2 0x12B PUSH2 0x2F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x161B JUMP JUMPDEST PUSH2 0x106B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH2 0x32C SWAP1 DUP5 SWAP1 PUSH2 0x166D JUMP JUMPDEST PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD DUP6 SWAP1 PUSH2 0x364 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x3A7 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x16AE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x16D2 JUMP JUMPDEST PUSH2 0x432 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151ADB881253881D1C985B9CD9995C8819985A5B PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x43E DUP8 DUP7 PUSH2 0x1206 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x486 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x195D1A14185A59080F081B5A5B915D1A13DD5D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP3 CALLER SWAP3 SWAP2 DUP12 AND SWAP2 PUSH32 0x97BFBA06B59241FC2569E88F8BA5ECAEC27A619B54EE2EFBEC2520FF355E7017 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD DUP7 SWAP1 PUSH2 0x502 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP6 SWAP1 PUSH2 0x529 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x56C SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x16AE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x58B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5AF SWAP2 SWAP1 PUSH2 0x16D2 JUMP JUMPDEST PUSH2 0x5F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151ADB881253881D1C985B9CD9995C8819985A5B PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5FE DUP10 DUP8 PUSH2 0x1206 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x650 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820746F6B656E7320696E207061696420696E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x65C DUP9 DUP4 PUSH2 0x1385 JUMP JUMPDEST SWAP1 POP DUP6 DUP2 LT ISZERO PUSH2 0x6AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7574707574206C657373207468616E206D696E546F6B656E734F7574000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE DUP12 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x710 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x734 SWAP2 SWAP1 PUSH2 0x16D2 JUMP JUMPDEST PUSH2 0x778 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151ADB8813D555081D1C985B9CD9995C8819985A5B PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP11 SWAP1 MSTORE SWAP2 DUP2 ADD DUP5 SWAP1 MSTORE DUP2 DUP11 AND SWAP2 CALLER SWAP2 SWAP1 DUP14 AND SWAP1 PUSH32 0xAC8B5664C4B0363F57887BB10DFCE39395A15B308BB7395AE2DCFF238AE01C1B SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP2 ADD SLOAD PUSH2 0x807 SWAP1 CALLVALUE SWAP1 PUSH2 0x166D JUMP JUMPDEST PUSH2 0x811 SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT ISZERO PUSH2 0x863 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178203C20726571756972656420696E766573746D656E7400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x8A6 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x16AE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8E9 SWAP2 SWAP1 PUSH2 0x16D2 JUMP JUMPDEST PUSH2 0x8F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH2 0x920 SWAP1 DUP5 PUSH2 0x166D JUMP JUMPDEST PUSH2 0x92A SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP3 SWAP4 POP CALLVALUE SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x95A SWAP1 DUP5 SWAP1 PUSH2 0x16F4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x98A SWAP1 DUP5 SWAP1 PUSH2 0x16F4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x3 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x9C5 SWAP1 DUP5 SWAP1 PUSH2 0x16F4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x9F5 SWAP1 DUP5 SWAP1 PUSH2 0x16F4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD CALLVALUE DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP3 SWAP2 CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 PUSH32 0x70036A0C8AFF04C45115532A9615C7B3CFFA827060E25DF65BC670EA80D856ED SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SLOAD DUP4 PUSH2 0xA5A SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0xA85 SWAP1 DUP6 SWAP1 PUSH2 0x16F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH2 0xAB8 SWAP2 SWAP1 PUSH2 0x166D JUMP JUMPDEST SWAP1 POP PUSH2 0xAC4 DUP4 DUP4 PUSH2 0x170C JUMP JUMPDEST PUSH2 0xACE SWAP1 DUP3 PUSH2 0x168C JUMP JUMPDEST PUSH2 0xAD9 SWAP1 PUSH1 0x1 PUSH2 0x16F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xAFF SWAP2 SWAP1 PUSH2 0x170C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x3 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0xB7F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682073686172657320746F206469766573740000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH2 0xBAD SWAP1 DUP5 SWAP1 PUSH2 0x166D JUMP JUMPDEST PUSH2 0xBB7 SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD SWAP2 ADD SLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH2 0xBE9 SWAP1 DUP6 SWAP1 PUSH2 0x166D JUMP JUMPDEST PUSH2 0xBF3 SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC55 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC79 SWAP2 SWAP1 PUSH2 0x16D2 JUMP JUMPDEST PUSH2 0xC82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xCAD SWAP1 DUP5 SWAP1 PUSH2 0x170C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xCDD SWAP1 DUP5 SWAP1 PUSH2 0x170C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x3 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0xD18 SWAP1 DUP5 SWAP1 PUSH2 0x170C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0xD48 SWAP1 DUP5 SWAP1 PUSH2 0x170C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE DUP5 SWAP2 CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 PUSH32 0xDAD7796DF9A6C41D40041FD7A4CEDDF72D437F4368688E1C1A69A07244FB6632 SWAP2 ADD PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD ISZERO PUSH2 0xE1A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C697175696469747920706F6F6C20697320616C726561647920736565646564 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0xB081D5CD9481A5B9D995CDD0A0A481A5B9CDD195859 PUSH1 0x52 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0xE2A JUMPI POP PUSH1 0x0 CALLVALUE GT JUMPDEST PUSH2 0xE76 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D75737420696E766573742045544820616E6420746F6B656E73000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xEB9 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x16AE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xED8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEFC SWAP2 SWAP1 PUSH2 0x16D2 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 DUP5 ADD DUP8 SWAP1 SSTORE CALLVALUE PUSH1 0x1 DUP3 ADD DUP2 SWAP1 SSTORE CALLER DUP1 DUP8 MSTORE PUSH1 0x3 DUP4 ADD DUP6 MSTORE DUP4 DUP8 KECCAK256 PUSH2 0x2710 SWAP1 DUP2 SWAP1 SSTORE SWAP7 DUP9 SWAP1 MSTORE SWAP5 DUP5 MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD DUP6 SWAP1 SSTORE DUP2 MLOAD SWAP1 DUP2 MSTORE SWAP2 DUP3 ADD DUP7 SWAP1 MSTORE SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0x70036A0C8AFF04C45115532A9615C7B3CFFA827060E25DF65BC670EA80D856ED SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SLOAD DUP4 PUSH2 0xF98 SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0xFC3 SWAP1 DUP6 SWAP1 PUSH2 0x16F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH2 0xFF6 SWAP2 SWAP1 PUSH2 0x166D JUMP JUMPDEST SWAP1 POP PUSH2 0x1002 DUP4 DUP4 PUSH2 0x170C JUMP JUMPDEST PUSH2 0x100C SWAP1 DUP3 PUSH2 0x168C JUMP JUMPDEST PUSH2 0x1017 SWAP1 PUSH1 0x1 PUSH2 0x16F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0xAFF SWAP2 SWAP1 PUSH2 0x170C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP2 ADD SLOAD PUSH2 0x32C SWAP1 DUP5 SWAP1 PUSH2 0x166D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD DUP5 SWAP1 PUSH2 0x1092 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x109E DUP7 CALLVALUE PUSH2 0x1385 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x10E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x1D1ADB9CD4185A59080F081B5A5B951ADB9CD3DD5D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLVALUE DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND SWAP3 CALLER SWAP3 SWAP2 DUP11 AND SWAP2 PUSH32 0xD1508EB33CB2FF0CD96CF67F00AB2C6B7FC5142D97832ADD4B29748B29111024 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE DUP8 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1195 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11B9 SWAP2 SWAP1 PUSH2 0x16D2 JUMP JUMPDEST PUSH2 0x11FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151ADB8813D555081D1C985B9CD9995C8819985A5B PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SLOAD DUP4 PUSH2 0x1217 SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1251 SWAP2 SWAP1 PUSH2 0x16F4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH2 0x1284 SWAP2 SWAP1 PUSH2 0x166D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x12AF SWAP1 DUP5 SWAP1 PUSH2 0x170C JUMP JUMPDEST PUSH2 0x12B9 SWAP1 DUP4 PUSH2 0x168C JUMP JUMPDEST PUSH2 0x12C4 SWAP1 PUSH1 0x1 PUSH2 0x16F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x12EA SWAP2 SWAP1 PUSH2 0x170C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 SWAP2 POP DUP2 GT ISZERO PUSH2 0x134B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x98C2C6D6D2DCCE40E0DEDED840CAE8D PUSH1 0x83 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1376 SWAP1 DUP5 SWAP1 PUSH2 0x170C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SLOAD DUP4 PUSH2 0x1396 SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP3 SWAP4 POP DUP6 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x13C6 SWAP1 DUP5 SWAP1 PUSH2 0x16F4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH2 0x13F9 SWAP2 SWAP1 PUSH2 0x166D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x1424 SWAP1 DUP5 SWAP1 PUSH2 0x170C JUMP JUMPDEST PUSH2 0x142E SWAP1 DUP4 PUSH2 0x168C JUMP JUMPDEST PUSH2 0x1439 SWAP1 PUSH1 0x1 PUSH2 0x16F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x1460 SWAP2 SWAP1 PUSH2 0x170C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 SWAP2 POP DUP2 GT ISZERO PUSH2 0x14C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4C61636B696E6720706F6F6C20746F6B656E73 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1376 SWAP1 DUP5 SWAP1 PUSH2 0x170C JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x151F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1528 DUP4 PUSH2 0x14F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1536 PUSH1 0x20 DUP5 ADD PUSH2 0x14F0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1552 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x155B DUP4 PUSH2 0x14F0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x157F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1588 DUP6 PUSH2 0x14F0 JUMP JUMPDEST SWAP4 POP PUSH2 0x1596 PUSH1 0x20 DUP7 ADD PUSH2 0x14F0 JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x336 DUP3 PUSH2 0x14F0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x15DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15E7 DUP7 PUSH2 0x14F0 JUMP JUMPDEST SWAP5 POP PUSH2 0x15F5 PUSH1 0x20 DUP8 ADD PUSH2 0x14F0 JUMP JUMPDEST SWAP4 POP PUSH2 0x1603 PUSH1 0x40 DUP8 ADD PUSH2 0x14F0 JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1630 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1639 DUP5 PUSH2 0x14F0 JUMP JUMPDEST SWAP3 POP PUSH2 0x1647 PUSH1 0x20 DUP6 ADD PUSH2 0x14F0 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1687 JUMPI PUSH2 0x1687 PUSH2 0x1657 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x16A9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1707 JUMPI PUSH2 0x1707 PUSH2 0x1657 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x171E JUMPI PUSH2 0x171E PUSH2 0x1657 JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0xE263095DE2C9A123CFD488016A2EE63B6023060174CB25773F328317F5 PUSH21 0xC964736F6C634300080A0033000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        313,
        9538
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "LT",
      "path": "1"
    },
    "9": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDC"
    },
    "12": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "13": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "SHR",
      "path": "1"
    },
    "19": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "DUP1",
      "path": "1"
    },
    "20": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xB9B8C246"
    },
    "25": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "GT",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7F"
    },
    "29": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "30": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "DUP1",
      "path": "1"
    },
    "31": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xD1FF465F"
    },
    "36": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "GT",
      "path": "1"
    },
    "37": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x59"
    },
    "40": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "41": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "DUP1",
      "path": "1"
    },
    "42": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xD1FF465F"
    },
    "47": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "EQ",
      "path": "1"
    },
    "48": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x297"
    },
    "51": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "52": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "DUP1",
      "path": "1"
    },
    "53": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xE437AB1A"
    },
    "58": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "EQ",
      "path": "1"
    },
    "59": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2AA"
    },
    "62": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "63": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "DUP1",
      "path": "1"
    },
    "64": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xEA16E6D1"
    },
    "69": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "EQ",
      "path": "1"
    },
    "70": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2CA"
    },
    "73": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "74": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "DUP1",
      "path": "1"
    },
    "75": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xF0B2CC89"
    },
    "80": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "EQ",
      "path": "1"
    },
    "81": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2EA"
    },
    "84": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "85": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "87": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "DUP1",
      "path": "1"
    },
    "88": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "REVERT",
      "path": "1"
    },
    "89": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "90": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "DUP1",
      "path": "1"
    },
    "91": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xB9B8C246"
    },
    "96": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "EQ",
      "path": "1"
    },
    "97": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x242"
    },
    "100": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "101": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "DUP1",
      "path": "1"
    },
    "102": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xBABD9ADD"
    },
    "107": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "EQ",
      "path": "1"
    },
    "108": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x257"
    },
    "111": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "112": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "DUP1",
      "path": "1"
    },
    "113": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xBB504317"
    },
    "118": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "EQ",
      "path": "1"
    },
    "119": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x277"
    },
    "122": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "123": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "125": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "DUP1",
      "path": "1"
    },
    "126": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "REVERT",
      "path": "1"
    },
    "127": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "128": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "DUP1",
      "path": "1"
    },
    "129": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x73E10D1D"
    },
    "134": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "GT",
      "path": "1"
    },
    "135": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBB"
    },
    "138": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "139": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "DUP1",
      "path": "1"
    },
    "140": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x73E10D1D"
    },
    "145": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "EQ",
      "path": "1"
    },
    "146": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x174"
    },
    "149": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "150": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "DUP1",
      "path": "1"
    },
    "151": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x7412DBB3"
    },
    "156": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "EQ",
      "path": "1"
    },
    "157": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x194"
    },
    "160": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "161": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "DUP1",
      "path": "1"
    },
    "162": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x978BBDB9"
    },
    "167": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "EQ",
      "path": "1"
    },
    "168": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20C"
    },
    "171": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "172": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "DUP1",
      "path": "1"
    },
    "173": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xAFF8E1E9"
    },
    "178": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "EQ",
      "path": "1"
    },
    "179": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x222"
    },
    "182": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "183": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "185": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "DUP1",
      "path": "1"
    },
    "186": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "REVERT",
      "path": "1"
    },
    "187": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "188": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "DUP1",
      "path": "1"
    },
    "189": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x392040"
    },
    "193": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "EQ",
      "path": "1"
    },
    "194": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE1"
    },
    "197": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "198": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "DUP1",
      "path": "1"
    },
    "199": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x5D44A878"
    },
    "204": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "EQ",
      "path": "1"
    },
    "205": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13E"
    },
    "208": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "209": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "DUP1",
      "path": "1"
    },
    "210": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x68972E50"
    },
    "215": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "EQ",
      "path": "1"
    },
    "216": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15E"
    },
    "219": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "220": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "221": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "223": {
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "DUP1",
      "path": "1"
    },
    "224": {
      "first_revert": true,
      "fn": null,
      "offset": [
        313,
        9538
      ],
      "op": "REVERT",
      "path": "1"
    },
    "225": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4838,
        5010
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "226": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4838,
        5010
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "227": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4838,
        5010
      ],
      "op": "DUP1",
      "path": "1"
    },
    "228": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4838,
        5010
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "229": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4838,
        5010
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xED"
    },
    "232": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4838,
        5010
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "233": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4838,
        5010
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "235": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4838,
        5010
      ],
      "op": "DUP1",
      "path": "1"
    },
    "236": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4838,
        5010
      ],
      "op": "REVERT",
      "path": "1"
    },
    "237": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4838,
        5010
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "238": {
      "op": "POP"
    },
    "239": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4838,
        5010
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12B"
    },
    "242": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4838,
        5010
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFC"
    },
    "245": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4838,
        5010
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "246": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4838,
        5010
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "248": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4838,
        5010
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x150C"
    },
    "251": {
      "fn": "MiniSwap.getShares",
      "jump": "i",
      "offset": [
        4838,
        5010
      ],
      "op": "JUMP",
      "path": "1"
    },
    "252": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4838,
        5010
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "257": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "259": {
      "op": "SHL"
    },
    "260": {
      "op": "SUB"
    },
    "261": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4955,
        4978
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 0
    },
    "262": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4955,
        4978
      ],
      "op": "DUP3",
      "path": "1"
    },
    "263": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4955,
        4978
      ],
      "op": "AND",
      "path": "1"
    },
    "264": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4918,
        4936
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "266": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4955,
        4978
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "267": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4955,
        4978
      ],
      "op": "DUP2",
      "path": "1"
    },
    "268": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4955,
        4978
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "269": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4955,
        4964
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "271": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4955,
        4978
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "273": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4955,
        4978
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "274": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4955,
        4978
      ],
      "op": "DUP2",
      "path": "1"
    },
    "275": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4955,
        4978
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "276": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4955,
        4978
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "278": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4955,
        4978
      ],
      "op": "DUP1",
      "path": "1"
    },
    "279": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4955,
        4978
      ],
      "op": "DUP4",
      "path": "1"
    },
    "280": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4955,
        4978
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "281": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4955,
        5003
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "282": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4955,
        5003
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "283": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4955,
        5003
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "284": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4955,
        5003
      ],
      "op": "AND",
      "path": "1"
    },
    "285": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4955,
        5003
      ],
      "op": "DUP3",
      "path": "1"
    },
    "286": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4955,
        5003
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "287": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4955,
        4993
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "289": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4955,
        4993
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "290": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4955,
        4993
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "291": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4955,
        4993
      ],
      "op": "ADD",
      "path": "1"
    },
    "292": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4955,
        5003
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "293": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4955,
        5003
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "294": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4955,
        5003
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "295": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4955,
        5003
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "296": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4955,
        5003
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "297": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4955,
        5003
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "298": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4838,
        5010
      ],
      "op": "JUMP",
      "path": "1"
    },
    "299": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4838,
        5010
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "300": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4838,
        5010
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "302": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4838,
        5010
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "303": {
      "op": "SWAP1"
    },
    "304": {
      "op": "DUP2"
    },
    "305": {
      "op": "MSTORE"
    },
    "306": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "308": {
      "op": "ADD"
    },
    "309": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4838,
        5010
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "310": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4838,
        5010
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "312": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4838,
        5010
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "313": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4838,
        5010
      ],
      "op": "DUP1",
      "path": "1"
    },
    "314": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4838,
        5010
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "315": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4838,
        5010
      ],
      "op": "SUB",
      "path": "1"
    },
    "316": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4838,
        5010
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "317": {
      "fn": "MiniSwap.getShares",
      "offset": [
        4838,
        5010
      ],
      "op": "RETURN",
      "path": "1"
    },
    "318": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3774,
        3995
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "319": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3774,
        3995
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "320": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3774,
        3995
      ],
      "op": "DUP1",
      "path": "1"
    },
    "321": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3774,
        3995
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "322": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3774,
        3995
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14A"
    },
    "325": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3774,
        3995
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "326": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3774,
        3995
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "328": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3774,
        3995
      ],
      "op": "DUP1",
      "path": "1"
    },
    "329": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3774,
        3995
      ],
      "op": "REVERT",
      "path": "1"
    },
    "330": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3774,
        3995
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "331": {
      "op": "POP"
    },
    "332": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3774,
        3995
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12B"
    },
    "335": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3774,
        3995
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x159"
    },
    "338": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3774,
        3995
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "339": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3774,
        3995
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "341": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3774,
        3995
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x153F"
    },
    "344": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "jump": "i",
      "offset": [
        3774,
        3995
      ],
      "op": "JUMP",
      "path": "1"
    },
    "345": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3774,
        3995
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "346": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3774,
        3995
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2FD"
    },
    "349": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "jump": "i",
      "offset": [
        3774,
        3995
      ],
      "op": "JUMP",
      "path": "1"
    },
    "350": {
      "offset": [
        365,
        393
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "351": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        365,
        393
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "352": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        365,
        393
      ],
      "op": "DUP1",
      "path": "1"
    },
    "353": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        365,
        393
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "354": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        365,
        393
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16A"
    },
    "357": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        365,
        393
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "358": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        365,
        393
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "360": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        365,
        393
      ],
      "op": "DUP1",
      "path": "1"
    },
    "361": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        365,
        393
      ],
      "op": "REVERT",
      "path": "1"
    },
    "362": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        365,
        393
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "363": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        365,
        393
      ],
      "op": "POP",
      "path": "1"
    },
    "364": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        365,
        393
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12B"
    },
    "367": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        365,
        393
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "369": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        365,
        393
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "370": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        365,
        393
      ],
      "op": "DUP2",
      "path": "1"
    },
    "371": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        365,
        393
      ],
      "op": "JUMP",
      "path": "1"
    },
    "372": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8067,
        8637
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "373": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8067,
        8637
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "374": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8067,
        8637
      ],
      "op": "DUP1",
      "path": "1"
    },
    "375": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8067,
        8637
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "376": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8067,
        8637
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x180"
    },
    "379": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8067,
        8637
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "380": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8067,
        8637
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "382": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8067,
        8637
      ],
      "op": "DUP1",
      "path": "1"
    },
    "383": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8067,
        8637
      ],
      "op": "REVERT",
      "path": "1"
    },
    "384": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8067,
        8637
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "385": {
      "op": "POP"
    },
    "386": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8067,
        8637
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12B"
    },
    "389": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8067,
        8637
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x18F"
    },
    "392": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8067,
        8637
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "393": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8067,
        8637
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "395": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8067,
        8637
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1569"
    },
    "398": {
      "fn": "MiniSwap.tokenToEth",
      "jump": "i",
      "offset": [
        8067,
        8637
      ],
      "op": "JUMP",
      "path": "1"
    },
    "399": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8067,
        8637
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "400": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8067,
        8637
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x33D"
    },
    "403": {
      "fn": "MiniSwap.tokenToEth",
      "jump": "i",
      "offset": [
        8067,
        8637
      ],
      "op": "JUMP",
      "path": "1"
    },
    "404": {
      "offset": [
        702,
        748
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "405": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "406": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "DUP1",
      "path": "1"
    },
    "407": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "408": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A0"
    },
    "411": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "412": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "414": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "DUP1",
      "path": "1"
    },
    "415": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "REVERT",
      "path": "1"
    },
    "416": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "417": {
      "op": "POP"
    },
    "418": {
      "offset": [
        702,
        748
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E2"
    },
    "421": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1AF"
    },
    "424": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "425": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "427": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15AB"
    },
    "430": {
      "fn": "MiniSwap.tokenToEth",
      "jump": "i",
      "offset": [
        702,
        748
      ],
      "op": "JUMP",
      "path": "1"
    },
    "431": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "432": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "434": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "436": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "DUP2",
      "path": "1"
    },
    "437": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "438": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "439": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "441": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "442": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "DUP3",
      "path": "1"
    },
    "443": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "444": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "446": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "447": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "448": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "449": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "DUP1",
      "path": "1"
    },
    "450": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "451": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "453": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "DUP3",
      "path": "1"
    },
    "454": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "ADD",
      "path": "1"
    },
    "455": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "456": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "457": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "DUP3",
      "path": "1"
    },
    "458": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "ADD",
      "path": "1"
    },
    "459": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "460": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "462": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "463": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "464": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "ADD",
      "path": "1"
    },
    "465": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "470": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "472": {
      "op": "SHL"
    },
    "473": {
      "op": "SUB"
    },
    "474": {
      "offset": [
        702,
        748
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "475": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "476": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "AND",
      "path": "1"
    },
    "477": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "478": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "479": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "480": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "DUP5",
      "path": "1"
    },
    "481": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "JUMP",
      "path": "1"
    },
    "482": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "483": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "485": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "DUP1",
      "path": "1"
    },
    "486": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        702,
        748
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "491": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "493": {
      "op": "SHL"
    },
    "494": {
      "op": "SUB"
    },
    "495": {
      "op": "SWAP1"
    },
    "496": {
      "op": "SWAP6"
    },
    "497": {
      "op": "AND"
    },
    "498": {
      "op": "DUP6"
    },
    "499": {
      "op": "MSTORE"
    },
    "500": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "502": {
      "op": "DUP6"
    },
    "503": {
      "op": "ADD"
    },
    "504": {
      "op": "SWAP4"
    },
    "505": {
      "op": "SWAP1"
    },
    "506": {
      "op": "SWAP4"
    },
    "507": {
      "op": "MSTORE"
    },
    "508": {
      "op": "SWAP2"
    },
    "509": {
      "op": "DUP4"
    },
    "510": {
      "op": "ADD"
    },
    "511": {
      "op": "MSTORE"
    },
    "512": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "514": {
      "op": "DUP3"
    },
    "515": {
      "op": "ADD"
    },
    "516": {
      "op": "MSTORE"
    },
    "517": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "519": {
      "op": "ADD"
    },
    "520": {
      "offset": [
        702,
        748
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x135"
    },
    "523": {
      "op": "JUMP"
    },
    "524": {
      "offset": [
        337,
        359
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "525": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        337,
        359
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "526": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        337,
        359
      ],
      "op": "DUP1",
      "path": "1"
    },
    "527": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        337,
        359
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "528": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        337,
        359
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x218"
    },
    "531": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        337,
        359
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "532": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        337,
        359
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "534": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        337,
        359
      ],
      "op": "DUP1",
      "path": "1"
    },
    "535": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        337,
        359
      ],
      "op": "REVERT",
      "path": "1"
    },
    "536": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        337,
        359
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "537": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        337,
        359
      ],
      "op": "POP",
      "path": "1"
    },
    "538": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        337,
        359
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12B"
    },
    "541": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        337,
        359
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "543": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        337,
        359
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "544": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        337,
        359
      ],
      "op": "DUP2",
      "path": "1"
    },
    "545": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        337,
        359
      ],
      "op": "JUMP",
      "path": "1"
    },
    "546": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8643,
        9536
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "547": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8643,
        9536
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "548": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8643,
        9536
      ],
      "op": "DUP1",
      "path": "1"
    },
    "549": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8643,
        9536
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "550": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8643,
        9536
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x22E"
    },
    "553": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8643,
        9536
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "554": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8643,
        9536
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "556": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8643,
        9536
      ],
      "op": "DUP1",
      "path": "1"
    },
    "557": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8643,
        9536
      ],
      "op": "REVERT",
      "path": "1"
    },
    "558": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8643,
        9536
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "559": {
      "op": "POP"
    },
    "560": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8643,
        9536
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12B"
    },
    "563": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8643,
        9536
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x23D"
    },
    "566": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8643,
        9536
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "567": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8643,
        9536
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "569": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8643,
        9536
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15C6"
    },
    "572": {
      "fn": "MiniSwap.tokenToToken",
      "jump": "i",
      "offset": [
        8643,
        9536
      ],
      "op": "JUMP",
      "path": "1"
    },
    "573": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8643,
        9536
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "574": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8643,
        9536
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4DB"
    },
    "577": {
      "fn": "MiniSwap.tokenToToken",
      "jump": "i",
      "offset": [
        8643,
        9536
      ],
      "op": "JUMP",
      "path": "1"
    },
    "578": {
      "fn": "MiniSwap.invest",
      "offset": [
        2530,
        3547
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "579": {
      "fn": "MiniSwap.invest",
      "offset": [
        2530,
        3547
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x255"
    },
    "582": {
      "fn": "MiniSwap.invest",
      "offset": [
        2530,
        3547
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x250"
    },
    "585": {
      "fn": "MiniSwap.invest",
      "offset": [
        2530,
        3547
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "586": {
      "fn": "MiniSwap.invest",
      "offset": [
        2530,
        3547
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "588": {
      "fn": "MiniSwap.invest",
      "offset": [
        2530,
        3547
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x153F"
    },
    "591": {
      "fn": "MiniSwap.invest",
      "jump": "i",
      "offset": [
        2530,
        3547
      ],
      "op": "JUMP",
      "path": "1"
    },
    "592": {
      "fn": "MiniSwap.invest",
      "offset": [
        2530,
        3547
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "593": {
      "fn": "MiniSwap.invest",
      "offset": [
        2530,
        3547
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7DA"
    },
    "596": {
      "fn": "MiniSwap.invest",
      "jump": "i",
      "offset": [
        2530,
        3547
      ],
      "op": "JUMP",
      "path": "1"
    },
    "597": {
      "fn": "MiniSwap.invest",
      "offset": [
        2530,
        3547
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "598": {
      "fn": "MiniSwap.invest",
      "offset": [
        2530,
        3547
      ],
      "op": "STOP",
      "path": "1"
    },
    "599": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5437,
        5856
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "600": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5437,
        5856
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "601": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5437,
        5856
      ],
      "op": "DUP1",
      "path": "1"
    },
    "602": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5437,
        5856
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "603": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5437,
        5856
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x263"
    },
    "606": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5437,
        5856
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "607": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5437,
        5856
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "609": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5437,
        5856
      ],
      "op": "DUP1",
      "path": "1"
    },
    "610": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5437,
        5856
      ],
      "op": "REVERT",
      "path": "1"
    },
    "611": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5437,
        5856
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "612": {
      "op": "POP"
    },
    "613": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5437,
        5856
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12B"
    },
    "616": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5437,
        5856
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x272"
    },
    "619": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5437,
        5856
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "620": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5437,
        5856
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "622": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5437,
        5856
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x153F"
    },
    "625": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "jump": "i",
      "offset": [
        5437,
        5856
      ],
      "op": "JUMP",
      "path": "1"
    },
    "626": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5437,
        5856
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "627": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5437,
        5856
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA49"
    },
    "630": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "jump": "i",
      "offset": [
        5437,
        5856
      ],
      "op": "JUMP",
      "path": "1"
    },
    "631": {
      "fn": "MiniSwap.divest",
      "offset": [
        4001,
        4832
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "632": {
      "fn": "MiniSwap.divest",
      "offset": [
        4001,
        4832
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "633": {
      "fn": "MiniSwap.divest",
      "offset": [
        4001,
        4832
      ],
      "op": "DUP1",
      "path": "1"
    },
    "634": {
      "fn": "MiniSwap.divest",
      "offset": [
        4001,
        4832
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "635": {
      "fn": "MiniSwap.divest",
      "offset": [
        4001,
        4832
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x283"
    },
    "638": {
      "fn": "MiniSwap.divest",
      "offset": [
        4001,
        4832
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "639": {
      "fn": "MiniSwap.divest",
      "offset": [
        4001,
        4832
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "641": {
      "fn": "MiniSwap.divest",
      "offset": [
        4001,
        4832
      ],
      "op": "DUP1",
      "path": "1"
    },
    "642": {
      "fn": "MiniSwap.divest",
      "offset": [
        4001,
        4832
      ],
      "op": "REVERT",
      "path": "1"
    },
    "643": {
      "fn": "MiniSwap.divest",
      "offset": [
        4001,
        4832
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "644": {
      "op": "POP"
    },
    "645": {
      "fn": "MiniSwap.divest",
      "offset": [
        4001,
        4832
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x255"
    },
    "648": {
      "fn": "MiniSwap.divest",
      "offset": [
        4001,
        4832
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x292"
    },
    "651": {
      "fn": "MiniSwap.divest",
      "offset": [
        4001,
        4832
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "652": {
      "fn": "MiniSwap.divest",
      "offset": [
        4001,
        4832
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "654": {
      "fn": "MiniSwap.divest",
      "offset": [
        4001,
        4832
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x153F"
    },
    "657": {
      "fn": "MiniSwap.divest",
      "jump": "i",
      "offset": [
        4001,
        4832
      ],
      "op": "JUMP",
      "path": "1"
    },
    "658": {
      "fn": "MiniSwap.divest",
      "offset": [
        4001,
        4832
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "659": {
      "fn": "MiniSwap.divest",
      "offset": [
        4001,
        4832
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB09"
    },
    "662": {
      "fn": "MiniSwap.divest",
      "jump": "i",
      "offset": [
        4001,
        4832
      ],
      "op": "JUMP",
      "path": "1"
    },
    "663": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1763,
        2524
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "664": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1763,
        2524
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x255"
    },
    "667": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1763,
        2524
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A5"
    },
    "670": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1763,
        2524
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "671": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1763,
        2524
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "673": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1763,
        2524
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x153F"
    },
    "676": {
      "fn": "MiniSwap.seedInvest",
      "jump": "i",
      "offset": [
        1763,
        2524
      ],
      "op": "JUMP",
      "path": "1"
    },
    "677": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1763,
        2524
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "678": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1763,
        2524
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD92"
    },
    "681": {
      "fn": "MiniSwap.seedInvest",
      "jump": "i",
      "offset": [
        1763,
        2524
      ],
      "op": "JUMP",
      "path": "1"
    },
    "682": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5016,
        5431
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "683": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5016,
        5431
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "684": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5016,
        5431
      ],
      "op": "DUP1",
      "path": "1"
    },
    "685": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5016,
        5431
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "686": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5016,
        5431
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B6"
    },
    "689": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5016,
        5431
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "690": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5016,
        5431
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "692": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5016,
        5431
      ],
      "op": "DUP1",
      "path": "1"
    },
    "693": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5016,
        5431
      ],
      "op": "REVERT",
      "path": "1"
    },
    "694": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5016,
        5431
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "695": {
      "op": "POP"
    },
    "696": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5016,
        5431
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12B"
    },
    "699": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5016,
        5431
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2C5"
    },
    "702": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5016,
        5431
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "703": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5016,
        5431
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "705": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5016,
        5431
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x153F"
    },
    "708": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "jump": "i",
      "offset": [
        5016,
        5431
      ],
      "op": "JUMP",
      "path": "1"
    },
    "709": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5016,
        5431
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "710": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5016,
        5431
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF87"
    },
    "713": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "jump": "i",
      "offset": [
        5016,
        5431
      ],
      "op": "JUMP",
      "path": "1"
    },
    "714": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3553,
        3768
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "715": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3553,
        3768
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "716": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3553,
        3768
      ],
      "op": "DUP1",
      "path": "1"
    },
    "717": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3553,
        3768
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "718": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3553,
        3768
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D6"
    },
    "721": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3553,
        3768
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "722": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3553,
        3768
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "724": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3553,
        3768
      ],
      "op": "DUP1",
      "path": "1"
    },
    "725": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3553,
        3768
      ],
      "op": "REVERT",
      "path": "1"
    },
    "726": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3553,
        3768
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "727": {
      "op": "POP"
    },
    "728": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3553,
        3768
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12B"
    },
    "731": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3553,
        3768
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2E5"
    },
    "734": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3553,
        3768
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "735": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3553,
        3768
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "737": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3553,
        3768
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x153F"
    },
    "740": {
      "fn": "MiniSwap.investQuoteFromEth",
      "jump": "i",
      "offset": [
        3553,
        3768
      ],
      "op": "JUMP",
      "path": "1"
    },
    "741": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3553,
        3768
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "742": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3553,
        3768
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x103E"
    },
    "745": {
      "fn": "MiniSwap.investQuoteFromEth",
      "jump": "i",
      "offset": [
        3553,
        3768
      ],
      "op": "JUMP",
      "path": "1"
    },
    "746": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7539,
        8061
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "747": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7539,
        8061
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12B"
    },
    "750": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7539,
        8061
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2F8"
    },
    "753": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7539,
        8061
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "754": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7539,
        8061
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "756": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7539,
        8061
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x161B"
    },
    "759": {
      "fn": "MiniSwap.ethToToken",
      "jump": "i",
      "offset": [
        7539,
        8061
      ],
      "op": "JUMP",
      "path": "1"
    },
    "760": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7539,
        8061
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "761": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7539,
        8061
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x106B"
    },
    "764": {
      "fn": "MiniSwap.ethToToken",
      "jump": "i",
      "offset": [
        7539,
        8061
      ],
      "op": "JUMP",
      "path": "1"
    },
    "765": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3774,
        3995
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "770": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "772": {
      "op": "SHL"
    },
    "773": {
      "op": "SUB"
    },
    "774": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3954,
        3977
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 1
    },
    "775": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3954,
        3977
      ],
      "op": "AND",
      "path": "1"
    },
    "776": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3868,
        3887
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "778": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3954,
        3977
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "779": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3954,
        3977
      ],
      "op": "DUP2",
      "path": "1"
    },
    "780": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3954,
        3977
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "781": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3954,
        3963
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "783": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3954,
        3977
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "785": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3954,
        3977
      ],
      "op": "DUP2",
      "path": "1"
    },
    "786": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3954,
        3977
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "787": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3954,
        3977
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "788": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3954,
        3977
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "790": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3954,
        3977
      ],
      "op": "DUP3",
      "path": "1"
    },
    "791": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3954,
        3977
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "792": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3954,
        3987
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "793": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3954,
        3987
      ],
      "op": "DUP2",
      "path": "1"
    },
    "794": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3954,
        3987
      ],
      "op": "ADD",
      "path": "1"
    },
    "795": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3954,
        3987
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "796": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3907,
        3938
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "798": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3907,
        3938
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "799": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3907,
        3938
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "800": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3907,
        3938
      ],
      "op": "ADD",
      "path": "1"
    },
    "801": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3907,
        3938
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "802": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3907,
        3951
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x32C"
    },
    "805": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3907,
        3951
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "806": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3941,
        3951
      ],
      "op": "DUP5",
      "path": "1"
    },
    "807": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3941,
        3951
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "808": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3907,
        3951
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x166D"
    },
    "811": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "jump": "i",
      "offset": [
        3907,
        3951
      ],
      "op": "JUMP",
      "path": "1"
    },
    "812": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3907,
        3951
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "813": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3907,
        3987
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x336"
    },
    "816": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3907,
        3987
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "817": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3907,
        3987
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "818": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3907,
        3987
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x168C"
    },
    "821": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "jump": "i",
      "offset": [
        3907,
        3987
      ],
      "op": "JUMP",
      "path": "1"
    },
    "822": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3907,
        3987
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "823": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3899,
        3988
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "824": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "offset": [
        3774,
        3995
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "825": {
      "op": "POP"
    },
    "826": {
      "op": "POP"
    },
    "827": {
      "op": "POP"
    },
    "828": {
      "fn": "MiniSwap.investQuoteFromTokens",
      "jump": "o",
      "offset": [
        3774,
        3995
      ],
      "op": "JUMP",
      "path": "1"
    },
    "829": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8067,
        8637
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "834": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "836": {
      "op": "SHL"
    },
    "837": {
      "op": "SUB"
    },
    "838": {
      "offset": [
        1710,
        1726
      ],
      "op": "DUP5",
      "path": "1"
    },
    "839": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        1710,
        1726
      ],
      "op": "AND",
      "path": "1"
    },
    "840": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8207,
        8222
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "842": {
      "offset": [
        1710,
        1726
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "843": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        1710,
        1726
      ],
      "op": "DUP2",
      "path": "1"
    },
    "844": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        1710,
        1726
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "845": {
      "offset": [
        1710,
        1719
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "847": {
      "offset": [
        1710,
        1726
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "849": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        1710,
        1726
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "850": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        1710,
        1726
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "852": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        1710,
        1726
      ],
      "op": "DUP2",
      "path": "1"
    },
    "853": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        1710,
        1726
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "854": {
      "offset": [
        1710,
        1734
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "856": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        1710,
        1734
      ],
      "op": "ADD",
      "path": "1"
    },
    "857": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        1710,
        1734
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "858": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8185,
        8197
      ],
      "op": "DUP6",
      "path": "1"
    },
    "859": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8185,
        8197
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "860": {
      "offset": [
        1702,
        1739
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x364"
    },
    "863": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        1702,
        1739
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "864": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        1702,
        1739
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "866": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        1702,
        1739
      ],
      "op": "DUP1",
      "path": "1"
    },
    "867": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        1702,
        1739
      ],
      "op": "REVERT",
      "path": "1"
    },
    "868": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        1702,
        1739
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "873": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "875": {
      "op": "SHL"
    },
    "876": {
      "op": "SUB"
    },
    "877": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8264
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 2
    },
    "878": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8264
      ],
      "op": "DUP8",
      "path": "1"
    },
    "879": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8264
      ],
      "op": "AND",
      "path": "1"
    },
    "880": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8264
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "882": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8264
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "883": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8264
      ],
      "op": "DUP2",
      "path": "1"
    },
    "884": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8264
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "885": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8250
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "887": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8264
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "889": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8264
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "890": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8264
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "892": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8264
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "893": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8264
      ],
      "op": "DUP2",
      "path": "1"
    },
    "894": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8264
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "895": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8264
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "896": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8270
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "897": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "898": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "899": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "904": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "906": {
      "op": "SHL"
    },
    "907": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "DUP2",
      "path": "1"
    },
    "908": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "909": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8270
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "910": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8270
      ],
      "op": "AND",
      "path": "1"
    },
    "911": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8270
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "912": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8283
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x23B872DD"
    },
    "917": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8283
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "918": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3A7"
    },
    "921": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "922": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8284,
        8294
      ],
      "op": "CALLER",
      "path": "1"
    },
    "923": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8284,
        8294
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "924": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8304,
        8308
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "925": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8304,
        8308
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "926": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8311,
        8319
      ],
      "op": "DUP10",
      "path": "1"
    },
    "927": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8311,
        8319
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "928": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "930": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "ADD",
      "path": "1"
    },
    "931": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16AE"
    },
    "934": {
      "fn": "MiniSwap.tokenToEth",
      "jump": "i",
      "offset": [
        8241,
        8320
      ],
      "op": "JUMP",
      "path": "1"
    },
    "935": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "936": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "938": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "940": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "941": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "DUP1",
      "path": "1"
    },
    "942": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "DUP4",
      "path": "1"
    },
    "943": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "SUB",
      "path": "1"
    },
    "944": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "DUP2",
      "path": "1"
    },
    "945": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "947": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "DUP8",
      "path": "1"
    },
    "948": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "GAS",
      "path": "1"
    },
    "949": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "CALL",
      "path": "1"
    },
    "950": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "951": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "DUP1",
      "path": "1"
    },
    "952": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "953": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3C6"
    },
    "956": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "957": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "958": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "960": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "DUP1",
      "path": "1"
    },
    "961": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "962": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "963": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "965": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "1"
    },
    "966": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "967": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "POP",
      "path": "1"
    },
    "968": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "POP",
      "path": "1"
    },
    "969": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "POP",
      "path": "1"
    },
    "970": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "POP",
      "path": "1"
    },
    "971": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "973": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "974": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "975": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "977": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "NOT",
      "path": "1"
    },
    "978": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "980": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "DUP3",
      "path": "1"
    },
    "981": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "ADD",
      "path": "1"
    },
    "982": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "AND",
      "path": "1"
    },
    "983": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "DUP3",
      "path": "1"
    },
    "984": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "ADD",
      "path": "1"
    },
    "985": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "DUP1",
      "path": "1"
    },
    "986": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "988": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "989": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "POP",
      "path": "1"
    },
    "990": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "DUP2",
      "path": "1"
    },
    "991": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "ADD",
      "path": "1"
    },
    "992": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "993": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3EA"
    },
    "996": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "997": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "998": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16D2"
    },
    "1001": {
      "fn": "MiniSwap.tokenToEth",
      "jump": "i",
      "offset": [
        8241,
        8320
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1002": {
      "branch": 48,
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8241,
        8320
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1003": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8233,
        8345
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x432"
    },
    "1006": {
      "branch": 48,
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8233,
        8345
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1007": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8233,
        8345
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1009": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8233,
        8345
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1010": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1016": {
      "op": "SHL"
    },
    "1017": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8233,
        8345
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1018": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8233,
        8345
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1019": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1021": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8233,
        8345
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1023": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8233,
        8345
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1024": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8233,
        8345
      ],
      "op": "ADD",
      "path": "1"
    },
    "1025": {
      "op": "MSTORE"
    },
    "1026": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "1028": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1030": {
      "op": "DUP3"
    },
    "1031": {
      "op": "ADD"
    },
    "1032": {
      "op": "MSTORE"
    },
    "1033": {
      "op": "PUSH20",
      "value": "0x151ADB881253881D1C985B9CD9995C8819985A5B"
    },
    "1054": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "1056": {
      "op": "SHL"
    },
    "1057": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1059": {
      "op": "DUP3"
    },
    "1060": {
      "op": "ADD"
    },
    "1061": {
      "op": "MSTORE"
    },
    "1062": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1064": {
      "op": "ADD"
    },
    "1065": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8233,
        8345
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1066": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8233,
        8345
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1068": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8233,
        8345
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1069": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8233,
        8345
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1070": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8233,
        8345
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1071": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8233,
        8345
      ],
      "op": "SUB",
      "path": "1"
    },
    "1072": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8233,
        8345
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1073": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8233,
        8345
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1074": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8233,
        8345
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1075": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8355,
        8370
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1077": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8373,
        8414
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x43E"
    },
    "1080": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8391,
        8403
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1081": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8405,
        8413
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1082": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8373,
        8390
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1206"
    },
    "1085": {
      "fn": "MiniSwap.tokenToEth",
      "jump": "i",
      "offset": [
        8373,
        8414
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1086": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8373,
        8414
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1087": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8355,
        8414
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1088": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8355,
        8414
      ],
      "op": "POP",
      "path": "1"
    },
    "1089": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8443,
        8452
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 3
    },
    "1090": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8432,
        8439
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1091": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8432,
        8452
      ],
      "op": "LT",
      "path": "1"
    },
    "1092": {
      "branch": 49,
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8432,
        8452
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1093": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8424,
        8476
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x486"
    },
    "1096": {
      "branch": 49,
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8424,
        8476
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1097": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8424,
        8476
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1099": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8424,
        8476
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1100": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1104": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1106": {
      "op": "SHL"
    },
    "1107": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8424,
        8476
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1108": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8424,
        8476
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1111": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8424,
        8476
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1113": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8424,
        8476
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1114": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8424,
        8476
      ],
      "op": "ADD",
      "path": "1"
    },
    "1115": {
      "op": "MSTORE"
    },
    "1116": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "1118": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1120": {
      "op": "DUP3"
    },
    "1121": {
      "op": "ADD"
    },
    "1122": {
      "op": "MSTORE"
    },
    "1123": {
      "op": "PUSH19",
      "value": "0x195D1A14185A59080F081B5A5B915D1A13DD5D"
    },
    "1143": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "1145": {
      "op": "SHL"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1148": {
      "op": "DUP3"
    },
    "1149": {
      "op": "ADD"
    },
    "1150": {
      "op": "MSTORE"
    },
    "1151": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1153": {
      "op": "ADD"
    },
    "1154": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8424,
        8476
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x429"
    },
    "1157": {
      "op": "JUMP"
    },
    "1158": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8424,
        8476
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1159": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8491,
        8558
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 4,
      "value": "0x40"
    },
    "1161": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8491,
        8558
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1162": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8491,
        8558
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1163": {
      "op": "DUP7"
    },
    "1164": {
      "op": "DUP2"
    },
    "1165": {
      "op": "MSTORE"
    },
    "1166": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1168": {
      "op": "DUP2"
    },
    "1169": {
      "op": "ADD"
    },
    "1170": {
      "op": "DUP4"
    },
    "1171": {
      "op": "SWAP1"
    },
    "1172": {
      "op": "MSTORE"
    },
    "1173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1177": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1179": {
      "op": "SHL"
    },
    "1180": {
      "op": "SUB"
    },
    "1181": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8491,
        8558
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1182": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8491,
        8558
      ],
      "op": "DUP10",
      "path": "1"
    },
    "1183": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8491,
        8558
      ],
      "op": "AND",
      "path": "1"
    },
    "1184": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8491,
        8558
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1185": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8517,
        8527
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1186": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8517,
        8527
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1187": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8491,
        8558
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1188": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8491,
        8558
      ],
      "op": "DUP12",
      "path": "1"
    },
    "1189": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8491,
        8558
      ],
      "op": "AND",
      "path": "1"
    },
    "1190": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8491,
        8558
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1191": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8491,
        8558
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x97BFBA06B59241FC2569E88F8BA5ECAEC27A619B54EE2EFBEC2520FF355E7017"
    },
    "1224": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8491,
        8558
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1225": {
      "op": "ADD"
    },
    "1226": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8491,
        8558
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1228": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8491,
        8558
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1229": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8491,
        8558
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1230": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8491,
        8558
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1231": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8491,
        8558
      ],
      "op": "SUB",
      "path": "1"
    },
    "1232": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8491,
        8558
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1233": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8491,
        8558
      ],
      "op": "LOG4",
      "path": "1"
    },
    "1234": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8623,
        8630
      ],
      "op": "SWAP7",
      "path": "1",
      "statement": 5
    },
    "1235": {
      "fn": "MiniSwap.tokenToEth",
      "offset": [
        8067,
        8637
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "1236": {
      "op": "POP"
    },
    "1237": {
      "op": "POP"
    },
    "1238": {
      "op": "POP"
    },
    "1239": {
      "op": "POP"
    },
    "1240": {
      "op": "POP"
    },
    "1241": {
      "op": "POP"
    },
    "1242": {
      "fn": "MiniSwap.tokenToEth",
      "jump": "o",
      "offset": [
        8067,
        8637
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1243": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8643,
        9536
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1248": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1250": {
      "op": "SHL"
    },
    "1251": {
      "op": "SUB"
    },
    "1252": {
      "offset": [
        1710,
        1726
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1253": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        1710,
        1726
      ],
      "op": "AND",
      "path": "1"
    },
    "1254": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8849,
        8867
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1256": {
      "offset": [
        1710,
        1726
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1257": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        1710,
        1726
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1258": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        1710,
        1726
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1259": {
      "offset": [
        1710,
        1719
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1261": {
      "offset": [
        1710,
        1726
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1263": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        1710,
        1726
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1264": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        1710,
        1726
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1266": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        1710,
        1726
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1267": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        1710,
        1726
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1268": {
      "offset": [
        1710,
        1734
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1270": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        1710,
        1734
      ],
      "op": "ADD",
      "path": "1"
    },
    "1271": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        1710,
        1734
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1272": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8794,
        8810
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1273": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8794,
        8810
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1274": {
      "offset": [
        1702,
        1739
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x502"
    },
    "1277": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        1702,
        1739
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1278": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        1702,
        1739
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1280": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        1702,
        1739
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1281": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        1702,
        1739
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1282": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        1702,
        1739
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1287": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1289": {
      "op": "SHL"
    },
    "1290": {
      "op": "SUB"
    },
    "1291": {
      "offset": [
        1710,
        1726
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1292": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        1710,
        1726
      ],
      "op": "AND",
      "path": "1"
    },
    "1293": {
      "offset": [
        1737,
        1738
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1295": {
      "offset": [
        1710,
        1726
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1296": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        1710,
        1726
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1297": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        1710,
        1726
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1298": {
      "offset": [
        1710,
        1719
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1300": {
      "offset": [
        1710,
        1726
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1302": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        1710,
        1726
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1303": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        1710,
        1726
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1305": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        1710,
        1726
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1306": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        1710,
        1726
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1307": {
      "offset": [
        1710,
        1734
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1309": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        1710,
        1734
      ],
      "op": "ADD",
      "path": "1"
    },
    "1310": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        1710,
        1734
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1311": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8825,
        8839
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1312": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8825,
        8839
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1313": {
      "offset": [
        1702,
        1739
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x529"
    },
    "1316": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        1702,
        1739
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1317": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        1702,
        1739
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1319": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        1702,
        1739
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1320": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        1702,
        1739
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1321": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        1702,
        1739
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1326": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1328": {
      "op": "SHL"
    },
    "1329": {
      "op": "SUB"
    },
    "1330": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8913
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 6
    },
    "1331": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8913
      ],
      "op": "DUP10",
      "path": "1"
    },
    "1332": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8913
      ],
      "op": "AND",
      "path": "1"
    },
    "1333": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8913
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1335": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8913
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1336": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8913
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1337": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8913
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1338": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8895
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1340": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8913
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1342": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8913
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1343": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8913
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1345": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8913
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1346": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8913
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1347": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8913
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1348": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8913
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1349": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8919
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1350": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1351": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1352": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1357": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1359": {
      "op": "SHL"
    },
    "1360": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1361": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1362": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8919
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1363": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8919
      ],
      "op": "AND",
      "path": "1"
    },
    "1364": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8919
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1365": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8932
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x23B872DD"
    },
    "1370": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8932
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1371": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x56C"
    },
    "1374": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1375": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8933,
        8943
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1376": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8933,
        8943
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1377": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8953,
        8957
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "1378": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8953,
        8957
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1379": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8960,
        8968
      ],
      "op": "DUP11",
      "path": "1"
    },
    "1380": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8960,
        8968
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1381": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1383": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "ADD",
      "path": "1"
    },
    "1384": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16AE"
    },
    "1387": {
      "fn": "MiniSwap.tokenToToken",
      "jump": "i",
      "offset": [
        8886,
        8969
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1388": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1389": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1391": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1393": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1394": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1395": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1396": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "SUB",
      "path": "1"
    },
    "1397": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1398": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1400": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1401": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "GAS",
      "path": "1"
    },
    "1402": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "CALL",
      "path": "1"
    },
    "1403": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1404": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1405": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1406": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x58B"
    },
    "1409": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1410": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1411": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1413": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1414": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "1415": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1416": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1418": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1419": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1420": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "POP",
      "path": "1"
    },
    "1421": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "POP",
      "path": "1"
    },
    "1422": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "POP",
      "path": "1"
    },
    "1423": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "POP",
      "path": "1"
    },
    "1424": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1426": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1427": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1428": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1430": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "NOT",
      "path": "1"
    },
    "1431": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1433": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1434": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "ADD",
      "path": "1"
    },
    "1435": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "AND",
      "path": "1"
    },
    "1436": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1437": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "ADD",
      "path": "1"
    },
    "1438": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1439": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1441": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1442": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "POP",
      "path": "1"
    },
    "1443": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1444": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "ADD",
      "path": "1"
    },
    "1445": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1446": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5AF"
    },
    "1449": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1450": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1451": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16D2"
    },
    "1454": {
      "fn": "MiniSwap.tokenToToken",
      "jump": "i",
      "offset": [
        8886,
        8969
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1455": {
      "branch": 50,
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8886,
        8969
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1456": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8878,
        8994
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5F2"
    },
    "1459": {
      "branch": 50,
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8878,
        8994
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1460": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8878,
        8994
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1462": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8878,
        8994
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1463": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1467": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1469": {
      "op": "SHL"
    },
    "1470": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8878,
        8994
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1471": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8878,
        8994
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1472": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1474": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8878,
        8994
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1476": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8878,
        8994
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1477": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8878,
        8994
      ],
      "op": "ADD",
      "path": "1"
    },
    "1478": {
      "op": "MSTORE"
    },
    "1479": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "1481": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1483": {
      "op": "DUP3"
    },
    "1484": {
      "op": "ADD"
    },
    "1485": {
      "op": "MSTORE"
    },
    "1486": {
      "op": "PUSH20",
      "value": "0x151ADB881253881D1C985B9CD9995C8819985A5B"
    },
    "1507": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "1509": {
      "op": "SHL"
    },
    "1510": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1512": {
      "op": "DUP3"
    },
    "1513": {
      "op": "ADD"
    },
    "1514": {
      "op": "MSTORE"
    },
    "1515": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1517": {
      "op": "ADD"
    },
    "1518": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8878,
        8994
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x429"
    },
    "1521": {
      "op": "JUMP"
    },
    "1522": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8878,
        8994
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1523": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9004,
        9023
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1525": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9026,
        9071
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5FE"
    },
    "1528": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9044,
        9060
      ],
      "op": "DUP10",
      "path": "1"
    },
    "1529": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9062,
        9070
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1530": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9026,
        9043
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1206"
    },
    "1533": {
      "fn": "MiniSwap.tokenToToken",
      "jump": "i",
      "offset": [
        9026,
        9071
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1534": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9026,
        9071
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1535": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9004,
        9071
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1536": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9004,
        9071
      ],
      "op": "POP",
      "path": "1"
    },
    "1537": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9103,
        9104
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 7,
      "value": "0x0"
    },
    "1539": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9089,
        9100
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1540": {
      "branch": 51,
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9089,
        9104
      ],
      "op": "GT",
      "path": "1"
    },
    "1541": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9081,
        9137
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x650"
    },
    "1544": {
      "branch": 51,
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9081,
        9137
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1545": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9081,
        9137
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1547": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9081,
        9137
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1548": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1552": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1554": {
      "op": "SHL"
    },
    "1555": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9081,
        9137
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1556": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9081,
        9137
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1557": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1559": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9081,
        9137
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1561": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9081,
        9137
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1562": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9081,
        9137
      ],
      "op": "ADD",
      "path": "1"
    },
    "1563": {
      "op": "MSTORE"
    },
    "1564": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "1566": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1568": {
      "op": "DUP3"
    },
    "1569": {
      "op": "ADD"
    },
    "1570": {
      "op": "MSTORE"
    },
    "1571": {
      "op": "PUSH32",
      "value": "0x4E6F7420656E6F75676820746F6B656E7320696E207061696420696E00000000"
    },
    "1604": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1606": {
      "op": "DUP3"
    },
    "1607": {
      "op": "ADD"
    },
    "1608": {
      "op": "MSTORE"
    },
    "1609": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1611": {
      "op": "ADD"
    },
    "1612": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9081,
        9137
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x429"
    },
    "1615": {
      "op": "JUMP"
    },
    "1616": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9081,
        9137
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1617": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9147,
        9164
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1619": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9167,
        9213
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x65C"
    },
    "1622": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9185,
        9199
      ],
      "op": "DUP9",
      "path": "1"
    },
    "1623": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9201,
        9212
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1624": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9167,
        9184
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1385"
    },
    "1627": {
      "fn": "MiniSwap.tokenToToken",
      "jump": "i",
      "offset": [
        9167,
        9213
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1628": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9167,
        9213
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1629": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9147,
        9213
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1630": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9147,
        9213
      ],
      "op": "POP",
      "path": "1"
    },
    "1631": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9244,
        9256
      ],
      "op": "DUP6",
      "path": "1",
      "statement": 8
    },
    "1632": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9231,
        9240
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1633": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9231,
        9256
      ],
      "op": "LT",
      "path": "1"
    },
    "1634": {
      "branch": 52,
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9231,
        9256
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1635": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9223,
        9290
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6AE"
    },
    "1638": {
      "branch": 52,
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9223,
        9290
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1639": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9223,
        9290
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1641": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9223,
        9290
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1642": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1646": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1648": {
      "op": "SHL"
    },
    "1649": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9223,
        9290
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1650": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9223,
        9290
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1651": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1653": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9223,
        9290
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1655": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9223,
        9290
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1656": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9223,
        9290
      ],
      "op": "ADD",
      "path": "1"
    },
    "1657": {
      "op": "MSTORE"
    },
    "1658": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "1660": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1662": {
      "op": "DUP3"
    },
    "1663": {
      "op": "ADD"
    },
    "1664": {
      "op": "MSTORE"
    },
    "1665": {
      "op": "PUSH32",
      "value": "0x4F7574707574206C657373207468616E206D696E546F6B656E734F7574000000"
    },
    "1698": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1700": {
      "op": "DUP3"
    },
    "1701": {
      "op": "ADD"
    },
    "1702": {
      "op": "MSTORE"
    },
    "1703": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1705": {
      "op": "ADD"
    },
    "1706": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9223,
        9290
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x429"
    },
    "1709": {
      "op": "JUMP"
    },
    "1710": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9223,
        9290
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1715": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1717": {
      "op": "SHL"
    },
    "1718": {
      "op": "SUB"
    },
    "1719": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9333
      ],
      "op": "DUP9",
      "path": "1",
      "statement": 9
    },
    "1720": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9333
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1721": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9333
      ],
      "op": "AND",
      "path": "1"
    },
    "1722": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9333
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1724": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9333
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1725": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9333
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1726": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9333
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1727": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9317
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1729": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9333
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1731": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9333
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1732": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9333
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1734": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9333
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1735": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9333
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1736": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9333
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1737": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9333
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1738": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9339
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1739": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1740": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1741": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1746": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1748": {
      "op": "SHL"
    },
    "1749": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1750": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1751": {
      "op": "DUP12"
    },
    "1752": {
      "op": "DUP4"
    },
    "1753": {
      "op": "AND"
    },
    "1754": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1756": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1757": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "ADD",
      "path": "1"
    },
    "1758": {
      "op": "MSTORE"
    },
    "1759": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1761": {
      "op": "DUP2"
    },
    "1762": {
      "op": "ADD"
    },
    "1763": {
      "op": "DUP5"
    },
    "1764": {
      "op": "SWAP1"
    },
    "1765": {
      "op": "MSTORE"
    },
    "1766": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9339
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1767": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9339
      ],
      "op": "AND",
      "path": "1"
    },
    "1768": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9339
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1769": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9348
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA9059CBB"
    },
    "1774": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9348
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1775": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1777": {
      "op": "ADD"
    },
    "1778": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1780": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1782": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1783": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1784": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1785": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "SUB",
      "path": "1"
    },
    "1786": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1787": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1789": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1790": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "GAS",
      "path": "1"
    },
    "1791": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "CALL",
      "path": "1"
    },
    "1792": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1793": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1794": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1795": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x710"
    },
    "1798": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1799": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1800": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1802": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1803": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "1804": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1805": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1807": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1808": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1809": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "POP",
      "path": "1"
    },
    "1810": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "POP",
      "path": "1"
    },
    "1811": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "POP",
      "path": "1"
    },
    "1812": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "POP",
      "path": "1"
    },
    "1813": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1815": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1816": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1817": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1819": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "NOT",
      "path": "1"
    },
    "1820": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1822": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1823": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "ADD",
      "path": "1"
    },
    "1824": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "AND",
      "path": "1"
    },
    "1825": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1826": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "ADD",
      "path": "1"
    },
    "1827": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1828": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1830": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1831": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "POP",
      "path": "1"
    },
    "1832": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1833": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "ADD",
      "path": "1"
    },
    "1834": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1835": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x734"
    },
    "1838": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1839": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1840": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16D2"
    },
    "1843": {
      "fn": "MiniSwap.tokenToToken",
      "jump": "i",
      "offset": [
        9308,
        9370
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1844": {
      "branch": 53,
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9308,
        9370
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1845": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9300,
        9396
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x778"
    },
    "1848": {
      "branch": 53,
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9300,
        9396
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1849": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9300,
        9396
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1851": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9300,
        9396
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1852": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1856": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1858": {
      "op": "SHL"
    },
    "1859": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9300,
        9396
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1860": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9300,
        9396
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1861": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1863": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9300,
        9396
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1865": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9300,
        9396
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1866": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9300,
        9396
      ],
      "op": "ADD",
      "path": "1"
    },
    "1867": {
      "op": "MSTORE"
    },
    "1868": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "1870": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1872": {
      "op": "DUP3"
    },
    "1873": {
      "op": "ADD"
    },
    "1874": {
      "op": "MSTORE"
    },
    "1875": {
      "op": "PUSH21",
      "value": "0x151ADB8813D555081D1C985B9CD9995C8819985A5B"
    },
    "1897": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "1899": {
      "op": "SHL"
    },
    "1900": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1902": {
      "op": "DUP3"
    },
    "1903": {
      "op": "ADD"
    },
    "1904": {
      "op": "MSTORE"
    },
    "1905": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1907": {
      "op": "ADD"
    },
    "1908": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9300,
        9396
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x429"
    },
    "1911": {
      "op": "JUMP"
    },
    "1912": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9300,
        9396
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1913": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9411,
        9503
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 10,
      "value": "0x40"
    },
    "1915": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9411,
        9503
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1916": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9411,
        9503
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1921": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1923": {
      "op": "SHL"
    },
    "1924": {
      "op": "SUB"
    },
    "1925": {
      "op": "DUP12"
    },
    "1926": {
      "op": "DUP2"
    },
    "1927": {
      "op": "AND"
    },
    "1928": {
      "op": "DUP3"
    },
    "1929": {
      "op": "MSTORE"
    },
    "1930": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1932": {
      "op": "DUP3"
    },
    "1933": {
      "op": "ADD"
    },
    "1934": {
      "op": "DUP11"
    },
    "1935": {
      "op": "SWAP1"
    },
    "1936": {
      "op": "MSTORE"
    },
    "1937": {
      "op": "SWAP2"
    },
    "1938": {
      "op": "DUP2"
    },
    "1939": {
      "op": "ADD"
    },
    "1940": {
      "op": "DUP5"
    },
    "1941": {
      "op": "SWAP1"
    },
    "1942": {
      "op": "MSTORE"
    },
    "1943": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9411,
        9503
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1944": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9411,
        9503
      ],
      "op": "DUP11",
      "path": "1"
    },
    "1945": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9411,
        9503
      ],
      "op": "AND",
      "path": "1"
    },
    "1946": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9411,
        9503
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1947": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9442,
        9452
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1948": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9442,
        9452
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1949": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9411,
        9503
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1950": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9411,
        9503
      ],
      "op": "DUP14",
      "path": "1"
    },
    "1951": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9411,
        9503
      ],
      "op": "AND",
      "path": "1"
    },
    "1952": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9411,
        9503
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1953": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9411,
        9503
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xAC8B5664C4B0363F57887BB10DFCE39395A15B308BB7395AE2DCFF238AE01C1B"
    },
    "1986": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9411,
        9503
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1987": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1989": {
      "op": "ADD"
    },
    "1990": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9411,
        9503
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1992": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9411,
        9503
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1993": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9411,
        9503
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1994": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9411,
        9503
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1995": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9411,
        9503
      ],
      "op": "SUB",
      "path": "1"
    },
    "1996": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9411,
        9503
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1997": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9411,
        9503
      ],
      "op": "LOG4",
      "path": "1"
    },
    "1998": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        9520,
        9529
      ],
      "op": "SWAP10",
      "path": "1",
      "statement": 11
    },
    "1999": {
      "fn": "MiniSwap.tokenToToken",
      "offset": [
        8643,
        9536
      ],
      "op": "SWAP9",
      "path": "1"
    },
    "2000": {
      "op": "POP"
    },
    "2001": {
      "op": "POP"
    },
    "2002": {
      "op": "POP"
    },
    "2003": {
      "op": "POP"
    },
    "2004": {
      "op": "POP"
    },
    "2005": {
      "op": "POP"
    },
    "2006": {
      "op": "POP"
    },
    "2007": {
      "op": "POP"
    },
    "2008": {
      "op": "POP"
    },
    "2009": {
      "fn": "MiniSwap.tokenToToken",
      "jump": "o",
      "offset": [
        8643,
        9536
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2010": {
      "fn": "MiniSwap.invest",
      "offset": [
        2530,
        3547
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2015": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2017": {
      "op": "SHL"
    },
    "2018": {
      "op": "SUB"
    },
    "2019": {
      "fn": "MiniSwap.invest",
      "offset": [
        2795,
        2818
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2020": {
      "fn": "MiniSwap.invest",
      "offset": [
        2795,
        2818
      ],
      "op": "AND",
      "path": "1"
    },
    "2021": {
      "fn": "MiniSwap.invest",
      "offset": [
        2720,
        2743
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2023": {
      "fn": "MiniSwap.invest",
      "offset": [
        2795,
        2818
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2024": {
      "fn": "MiniSwap.invest",
      "offset": [
        2795,
        2818
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2025": {
      "fn": "MiniSwap.invest",
      "offset": [
        2795,
        2818
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2026": {
      "fn": "MiniSwap.invest",
      "offset": [
        2795,
        2804
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "2028": {
      "fn": "MiniSwap.invest",
      "offset": [
        2795,
        2818
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2030": {
      "fn": "MiniSwap.invest",
      "offset": [
        2795,
        2818
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2031": {
      "fn": "MiniSwap.invest",
      "offset": [
        2795,
        2818
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2032": {
      "fn": "MiniSwap.invest",
      "offset": [
        2795,
        2818
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2033": {
      "fn": "MiniSwap.invest",
      "offset": [
        2795,
        2818
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2035": {
      "fn": "MiniSwap.invest",
      "offset": [
        2795,
        2818
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2036": {
      "fn": "MiniSwap.invest",
      "offset": [
        2795,
        2818
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2037": {
      "fn": "MiniSwap.invest",
      "offset": [
        2795,
        2826
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2039": {
      "fn": "MiniSwap.invest",
      "offset": [
        2795,
        2826
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2040": {
      "fn": "MiniSwap.invest",
      "offset": [
        2795,
        2826
      ],
      "op": "ADD",
      "path": "1"
    },
    "2041": {
      "fn": "MiniSwap.invest",
      "offset": [
        2795,
        2826
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2042": {
      "fn": "MiniSwap.invest",
      "offset": [
        2747,
        2780
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2043": {
      "fn": "MiniSwap.invest",
      "offset": [
        2747,
        2780
      ],
      "op": "ADD",
      "path": "1"
    },
    "2044": {
      "fn": "MiniSwap.invest",
      "offset": [
        2747,
        2780
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2045": {
      "fn": "MiniSwap.invest",
      "offset": [
        2747,
        2792
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x807"
    },
    "2048": {
      "fn": "MiniSwap.invest",
      "offset": [
        2747,
        2792
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2049": {
      "fn": "MiniSwap.invest",
      "offset": [
        2783,
        2792
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "2050": {
      "fn": "MiniSwap.invest",
      "offset": [
        2783,
        2792
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2051": {
      "fn": "MiniSwap.invest",
      "offset": [
        2747,
        2792
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x166D"
    },
    "2054": {
      "fn": "MiniSwap.invest",
      "jump": "i",
      "offset": [
        2747,
        2792
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2055": {
      "fn": "MiniSwap.invest",
      "offset": [
        2747,
        2792
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2056": {
      "fn": "MiniSwap.invest",
      "offset": [
        2747,
        2826
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x811"
    },
    "2059": {
      "fn": "MiniSwap.invest",
      "offset": [
        2747,
        2826
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2060": {
      "fn": "MiniSwap.invest",
      "offset": [
        2747,
        2826
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2061": {
      "fn": "MiniSwap.invest",
      "offset": [
        2747,
        2826
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x168C"
    },
    "2064": {
      "fn": "MiniSwap.invest",
      "jump": "i",
      "offset": [
        2747,
        2826
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2065": {
      "fn": "MiniSwap.invest",
      "offset": [
        2747,
        2826
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2066": {
      "fn": "MiniSwap.invest",
      "offset": [
        2720,
        2827
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2067": {
      "fn": "MiniSwap.invest",
      "offset": [
        2720,
        2827
      ],
      "op": "POP",
      "path": "1"
    },
    "2068": {
      "fn": "MiniSwap.invest",
      "offset": [
        2866,
        2881
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 12
    },
    "2069": {
      "fn": "MiniSwap.invest",
      "offset": [
        2845,
        2862
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2070": {
      "fn": "MiniSwap.invest",
      "offset": [
        2845,
        2881
      ],
      "op": "LT",
      "path": "1"
    },
    "2071": {
      "branch": 54,
      "fn": "MiniSwap.invest",
      "offset": [
        2845,
        2881
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2072": {
      "fn": "MiniSwap.invest",
      "offset": [
        2837,
        2911
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x863"
    },
    "2075": {
      "branch": 54,
      "fn": "MiniSwap.invest",
      "offset": [
        2837,
        2911
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2076": {
      "fn": "MiniSwap.invest",
      "offset": [
        2837,
        2911
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2078": {
      "fn": "MiniSwap.invest",
      "offset": [
        2837,
        2911
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2079": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2083": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2085": {
      "op": "SHL"
    },
    "2086": {
      "fn": "MiniSwap.invest",
      "offset": [
        2837,
        2911
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2087": {
      "fn": "MiniSwap.invest",
      "offset": [
        2837,
        2911
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2088": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2090": {
      "fn": "MiniSwap.invest",
      "offset": [
        2837,
        2911
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2092": {
      "fn": "MiniSwap.invest",
      "offset": [
        2837,
        2911
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2093": {
      "fn": "MiniSwap.invest",
      "offset": [
        2837,
        2911
      ],
      "op": "ADD",
      "path": "1"
    },
    "2094": {
      "op": "MSTORE"
    },
    "2095": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "2097": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2099": {
      "op": "DUP3"
    },
    "2100": {
      "op": "ADD"
    },
    "2101": {
      "op": "MSTORE"
    },
    "2102": {
      "op": "PUSH32",
      "value": "0x4D6178203C20726571756972656420696E766573746D656E7400000000000000"
    },
    "2135": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2137": {
      "op": "DUP3"
    },
    "2138": {
      "op": "ADD"
    },
    "2139": {
      "op": "MSTORE"
    },
    "2140": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2142": {
      "op": "ADD"
    },
    "2143": {
      "fn": "MiniSwap.invest",
      "offset": [
        2837,
        2911
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x429"
    },
    "2146": {
      "op": "JUMP"
    },
    "2147": {
      "fn": "MiniSwap.invest",
      "offset": [
        2837,
        2911
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2152": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2154": {
      "op": "SHL"
    },
    "2155": {
      "op": "SUB"
    },
    "2156": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        2953
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 13
    },
    "2157": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        2953
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2158": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        2953
      ],
      "op": "AND",
      "path": "1"
    },
    "2159": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        2953
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2161": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        2953
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2162": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        2953
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2163": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        2953
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2164": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        2939
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "2166": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        2953
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2168": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        2953
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2169": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        2953
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2171": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        2953
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2172": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        2953
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2173": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        2953
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2174": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        2953
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2175": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        2959
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2176": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2177": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2178": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2183": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2185": {
      "op": "SHL"
    },
    "2186": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2187": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2188": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        2959
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2189": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        2959
      ],
      "op": "AND",
      "path": "1"
    },
    "2190": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        2959
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2191": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        2972
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x23B872DD"
    },
    "2196": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        2972
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2197": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8A6"
    },
    "2200": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2201": {
      "fn": "MiniSwap.invest",
      "offset": [
        2973,
        2983
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2202": {
      "fn": "MiniSwap.invest",
      "offset": [
        2973,
        2983
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2203": {
      "fn": "MiniSwap.invest",
      "offset": [
        2993,
        2997
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "2204": {
      "fn": "MiniSwap.invest",
      "offset": [
        2993,
        2997
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2205": {
      "fn": "MiniSwap.invest",
      "offset": [
        3000,
        3015
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2206": {
      "fn": "MiniSwap.invest",
      "offset": [
        3000,
        3015
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2207": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2209": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "ADD",
      "path": "1"
    },
    "2210": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16AE"
    },
    "2213": {
      "fn": "MiniSwap.invest",
      "jump": "i",
      "offset": [
        2930,
        3016
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2214": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2215": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2217": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2219": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2220": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2221": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2222": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "SUB",
      "path": "1"
    },
    "2223": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2224": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2226": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2227": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "GAS",
      "path": "1"
    },
    "2228": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "CALL",
      "path": "1"
    },
    "2229": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2230": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2231": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2232": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8C5"
    },
    "2235": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2236": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2237": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2239": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2240": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2241": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2242": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2244": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2245": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2246": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "POP",
      "path": "1"
    },
    "2247": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "POP",
      "path": "1"
    },
    "2248": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "POP",
      "path": "1"
    },
    "2249": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "POP",
      "path": "1"
    },
    "2250": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2252": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2253": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2254": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2256": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "NOT",
      "path": "1"
    },
    "2257": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2259": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2260": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "ADD",
      "path": "1"
    },
    "2261": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "AND",
      "path": "1"
    },
    "2262": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2263": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "ADD",
      "path": "1"
    },
    "2264": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2265": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2267": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2268": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "POP",
      "path": "1"
    },
    "2269": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2270": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "ADD",
      "path": "1"
    },
    "2271": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2272": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8E9"
    },
    "2275": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2276": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2277": {
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16D2"
    },
    "2280": {
      "fn": "MiniSwap.invest",
      "jump": "i",
      "offset": [
        2930,
        3016
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2281": {
      "branch": 55,
      "fn": "MiniSwap.invest",
      "offset": [
        2930,
        3016
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2282": {
      "fn": "MiniSwap.invest",
      "offset": [
        2921,
        3017
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8F2"
    },
    "2285": {
      "branch": 55,
      "fn": "MiniSwap.invest",
      "offset": [
        2921,
        3017
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2286": {
      "fn": "MiniSwap.invest",
      "offset": [
        2921,
        3017
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2288": {
      "fn": "MiniSwap.invest",
      "offset": [
        2921,
        3017
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2289": {
      "fn": "MiniSwap.invest",
      "offset": [
        2921,
        3017
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2290": {
      "fn": "MiniSwap.invest",
      "offset": [
        2921,
        3017
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2295": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2297": {
      "op": "SHL"
    },
    "2298": {
      "op": "SUB"
    },
    "2299": {
      "fn": "MiniSwap.invest",
      "offset": [
        3110,
        3133
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2300": {
      "fn": "MiniSwap.invest",
      "offset": [
        3110,
        3133
      ],
      "op": "AND",
      "path": "1"
    },
    "2301": {
      "fn": "MiniSwap.invest",
      "offset": [
        3027,
        3050
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2303": {
      "fn": "MiniSwap.invest",
      "offset": [
        3110,
        3133
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2304": {
      "fn": "MiniSwap.invest",
      "offset": [
        3110,
        3133
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2305": {
      "fn": "MiniSwap.invest",
      "offset": [
        3110,
        3133
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2306": {
      "fn": "MiniSwap.invest",
      "offset": [
        3110,
        3119
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "2308": {
      "fn": "MiniSwap.invest",
      "offset": [
        3110,
        3133
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2310": {
      "fn": "MiniSwap.invest",
      "offset": [
        3110,
        3133
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2311": {
      "fn": "MiniSwap.invest",
      "offset": [
        3110,
        3133
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2312": {
      "fn": "MiniSwap.invest",
      "offset": [
        3110,
        3133
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2313": {
      "fn": "MiniSwap.invest",
      "offset": [
        3110,
        3133
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2315": {
      "fn": "MiniSwap.invest",
      "offset": [
        3110,
        3133
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2316": {
      "fn": "MiniSwap.invest",
      "offset": [
        3110,
        3133
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2317": {
      "fn": "MiniSwap.invest",
      "offset": [
        3110,
        3143
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2318": {
      "fn": "MiniSwap.invest",
      "offset": [
        3110,
        3143
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2319": {
      "fn": "MiniSwap.invest",
      "offset": [
        3110,
        3143
      ],
      "op": "ADD",
      "path": "1"
    },
    "2320": {
      "fn": "MiniSwap.invest",
      "offset": [
        3110,
        3143
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2321": {
      "fn": "MiniSwap.invest",
      "offset": [
        3072,
        3107
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2323": {
      "fn": "MiniSwap.invest",
      "offset": [
        3072,
        3107
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2324": {
      "fn": "MiniSwap.invest",
      "offset": [
        3072,
        3107
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2325": {
      "fn": "MiniSwap.invest",
      "offset": [
        3072,
        3107
      ],
      "op": "ADD",
      "path": "1"
    },
    "2326": {
      "fn": "MiniSwap.invest",
      "offset": [
        3072,
        3107
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2327": {
      "fn": "MiniSwap.invest",
      "offset": [
        3054,
        3107
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x920"
    },
    "2330": {
      "fn": "MiniSwap.invest",
      "offset": [
        3054,
        3107
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2331": {
      "fn": "MiniSwap.invest",
      "offset": [
        3054,
        3069
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2332": {
      "fn": "MiniSwap.invest",
      "offset": [
        3054,
        3107
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x166D"
    },
    "2335": {
      "fn": "MiniSwap.invest",
      "jump": "i",
      "offset": [
        3054,
        3107
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2336": {
      "fn": "MiniSwap.invest",
      "offset": [
        3054,
        3107
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2337": {
      "fn": "MiniSwap.invest",
      "offset": [
        3053,
        3143
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x92A"
    },
    "2340": {
      "fn": "MiniSwap.invest",
      "offset": [
        3053,
        3143
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2341": {
      "fn": "MiniSwap.invest",
      "offset": [
        3053,
        3143
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2342": {
      "fn": "MiniSwap.invest",
      "offset": [
        3053,
        3143
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x168C"
    },
    "2345": {
      "fn": "MiniSwap.invest",
      "jump": "i",
      "offset": [
        3053,
        3143
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2346": {
      "fn": "MiniSwap.invest",
      "offset": [
        3053,
        3143
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2351": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2353": {
      "op": "SHL"
    },
    "2354": {
      "op": "SUB"
    },
    "2355": {
      "fn": "MiniSwap.invest",
      "offset": [
        3153,
        3176
      ],
      "op": "DUP6",
      "path": "1",
      "statement": 14
    },
    "2356": {
      "fn": "MiniSwap.invest",
      "offset": [
        3153,
        3176
      ],
      "op": "AND",
      "path": "1"
    },
    "2357": {
      "fn": "MiniSwap.invest",
      "offset": [
        3153,
        3176
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2359": {
      "fn": "MiniSwap.invest",
      "offset": [
        3153,
        3176
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2360": {
      "fn": "MiniSwap.invest",
      "offset": [
        3153,
        3176
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2361": {
      "fn": "MiniSwap.invest",
      "offset": [
        3153,
        3176
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2362": {
      "fn": "MiniSwap.invest",
      "offset": [
        3153,
        3162
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "2364": {
      "fn": "MiniSwap.invest",
      "offset": [
        3153,
        3176
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2366": {
      "fn": "MiniSwap.invest",
      "offset": [
        3153,
        3176
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2367": {
      "fn": "MiniSwap.invest",
      "offset": [
        3153,
        3176
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2369": {
      "fn": "MiniSwap.invest",
      "offset": [
        3153,
        3176
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2370": {
      "fn": "MiniSwap.invest",
      "offset": [
        3153,
        3176
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2371": {
      "fn": "MiniSwap.invest",
      "offset": [
        3153,
        3184
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2373": {
      "fn": "MiniSwap.invest",
      "offset": [
        3153,
        3184
      ],
      "op": "ADD",
      "path": "1"
    },
    "2374": {
      "fn": "MiniSwap.invest",
      "offset": [
        3153,
        3197
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2375": {
      "fn": "MiniSwap.invest",
      "offset": [
        3153,
        3197
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2376": {
      "fn": "MiniSwap.invest",
      "offset": [
        3027,
        3143
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2377": {
      "fn": "MiniSwap.invest",
      "offset": [
        3027,
        3143
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2378": {
      "op": "POP"
    },
    "2379": {
      "fn": "MiniSwap.invest",
      "offset": [
        3188,
        3197
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "2380": {
      "fn": "MiniSwap.invest",
      "offset": [
        3188,
        3197
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2381": {
      "fn": "MiniSwap.invest",
      "offset": [
        3153,
        3184
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2382": {
      "fn": "MiniSwap.invest",
      "offset": [
        3153,
        3184
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2383": {
      "fn": "MiniSwap.invest",
      "offset": [
        3153,
        3176
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2384": {
      "fn": "MiniSwap.invest",
      "offset": [
        3153,
        3197
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x95A"
    },
    "2387": {
      "fn": "MiniSwap.invest",
      "offset": [
        3153,
        3197
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2388": {
      "fn": "MiniSwap.invest",
      "offset": [
        3188,
        3197
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2389": {
      "fn": "MiniSwap.invest",
      "offset": [
        3188,
        3197
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2390": {
      "fn": "MiniSwap.invest",
      "offset": [
        3153,
        3197
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16F4"
    },
    "2393": {
      "fn": "MiniSwap.invest",
      "jump": "i",
      "offset": [
        3153,
        3197
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2394": {
      "fn": "MiniSwap.invest",
      "offset": [
        3153,
        3197
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2395": {
      "fn": "MiniSwap.invest",
      "offset": [
        3153,
        3197
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2396": {
      "fn": "MiniSwap.invest",
      "offset": [
        3153,
        3197
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2397": {
      "fn": "MiniSwap.invest",
      "offset": [
        3153,
        3197
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2398": {
      "op": "POP"
    },
    "2399": {
      "op": "POP"
    },
    "2400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2404": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2406": {
      "op": "SHL"
    },
    "2407": {
      "op": "SUB"
    },
    "2408": {
      "fn": "MiniSwap.invest",
      "offset": [
        3207,
        3230
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 15
    },
    "2409": {
      "fn": "MiniSwap.invest",
      "offset": [
        3207,
        3230
      ],
      "op": "AND",
      "path": "1"
    },
    "2410": {
      "fn": "MiniSwap.invest",
      "offset": [
        3207,
        3230
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2412": {
      "fn": "MiniSwap.invest",
      "offset": [
        3207,
        3230
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2413": {
      "fn": "MiniSwap.invest",
      "offset": [
        3207,
        3230
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2414": {
      "fn": "MiniSwap.invest",
      "offset": [
        3207,
        3230
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2415": {
      "fn": "MiniSwap.invest",
      "offset": [
        3207,
        3216
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "2417": {
      "fn": "MiniSwap.invest",
      "offset": [
        3207,
        3230
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2419": {
      "fn": "MiniSwap.invest",
      "offset": [
        3207,
        3230
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2420": {
      "fn": "MiniSwap.invest",
      "offset": [
        3207,
        3230
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2421": {
      "fn": "MiniSwap.invest",
      "offset": [
        3207,
        3230
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2422": {
      "fn": "MiniSwap.invest",
      "offset": [
        3207,
        3230
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2424": {
      "fn": "MiniSwap.invest",
      "offset": [
        3207,
        3230
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2425": {
      "fn": "MiniSwap.invest",
      "offset": [
        3207,
        3230
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2426": {
      "fn": "MiniSwap.invest",
      "offset": [
        3207,
        3240
      ],
      "op": "ADD",
      "path": "1"
    },
    "2427": {
      "fn": "MiniSwap.invest",
      "offset": [
        3207,
        3259
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2428": {
      "fn": "MiniSwap.invest",
      "offset": [
        3207,
        3259
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2429": {
      "fn": "MiniSwap.invest",
      "offset": [
        3244,
        3259
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2430": {
      "fn": "MiniSwap.invest",
      "offset": [
        3244,
        3259
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2431": {
      "fn": "MiniSwap.invest",
      "offset": [
        3207,
        3230
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2432": {
      "fn": "MiniSwap.invest",
      "offset": [
        3207,
        3259
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x98A"
    },
    "2435": {
      "fn": "MiniSwap.invest",
      "offset": [
        3207,
        3259
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2436": {
      "fn": "MiniSwap.invest",
      "offset": [
        3244,
        3259
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2437": {
      "fn": "MiniSwap.invest",
      "offset": [
        3244,
        3259
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2438": {
      "fn": "MiniSwap.invest",
      "offset": [
        3207,
        3259
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16F4"
    },
    "2441": {
      "fn": "MiniSwap.invest",
      "jump": "i",
      "offset": [
        3207,
        3259
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2442": {
      "fn": "MiniSwap.invest",
      "offset": [
        3207,
        3259
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2443": {
      "fn": "MiniSwap.invest",
      "offset": [
        3207,
        3259
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2444": {
      "fn": "MiniSwap.invest",
      "offset": [
        3207,
        3259
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2445": {
      "fn": "MiniSwap.invest",
      "offset": [
        3207,
        3259
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2446": {
      "op": "POP"
    },
    "2447": {
      "op": "POP"
    },
    "2448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2452": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2454": {
      "op": "SHL"
    },
    "2455": {
      "op": "SUB"
    },
    "2456": {
      "fn": "MiniSwap.invest",
      "offset": [
        3311,
        3334
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 16
    },
    "2457": {
      "fn": "MiniSwap.invest",
      "offset": [
        3311,
        3334
      ],
      "op": "AND",
      "path": "1"
    },
    "2458": {
      "fn": "MiniSwap.invest",
      "offset": [
        3311,
        3334
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2460": {
      "fn": "MiniSwap.invest",
      "offset": [
        3311,
        3334
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2461": {
      "fn": "MiniSwap.invest",
      "offset": [
        3311,
        3334
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2462": {
      "fn": "MiniSwap.invest",
      "offset": [
        3311,
        3334
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2463": {
      "fn": "MiniSwap.invest",
      "offset": [
        3311,
        3320
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "2465": {
      "fn": "MiniSwap.invest",
      "offset": [
        3311,
        3334
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2467": {
      "fn": "MiniSwap.invest",
      "offset": [
        3311,
        3334
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2468": {
      "fn": "MiniSwap.invest",
      "offset": [
        3311,
        3334
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2469": {
      "fn": "MiniSwap.invest",
      "offset": [
        3311,
        3334
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2470": {
      "fn": "MiniSwap.invest",
      "offset": [
        3311,
        3334
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2472": {
      "fn": "MiniSwap.invest",
      "offset": [
        3311,
        3334
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2473": {
      "fn": "MiniSwap.invest",
      "offset": [
        3311,
        3334
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2474": {
      "fn": "MiniSwap.invest",
      "offset": [
        3311,
        3334
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2475": {
      "fn": "MiniSwap.invest",
      "offset": [
        3350,
        3360
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2476": {
      "fn": "MiniSwap.invest",
      "offset": [
        3311,
        3361
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2477": {
      "fn": "MiniSwap.invest",
      "offset": [
        3311,
        3361
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2478": {
      "fn": "MiniSwap.invest",
      "offset": [
        3311,
        3349
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "2480": {
      "fn": "MiniSwap.invest",
      "offset": [
        3311,
        3349
      ],
      "op": "ADD",
      "path": "1"
    },
    "2481": {
      "fn": "MiniSwap.invest",
      "offset": [
        3311,
        3361
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2482": {
      "fn": "MiniSwap.invest",
      "offset": [
        3311,
        3361
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2483": {
      "fn": "MiniSwap.invest",
      "offset": [
        3311,
        3361
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2484": {
      "fn": "MiniSwap.invest",
      "offset": [
        3311,
        3361
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2485": {
      "fn": "MiniSwap.invest",
      "offset": [
        3311,
        3361
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2486": {
      "fn": "MiniSwap.invest",
      "offset": [
        3311,
        3380
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2487": {
      "fn": "MiniSwap.invest",
      "offset": [
        3311,
        3380
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2488": {
      "fn": "MiniSwap.invest",
      "offset": [
        3365,
        3380
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2489": {
      "fn": "MiniSwap.invest",
      "offset": [
        3365,
        3380
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2490": {
      "fn": "MiniSwap.invest",
      "offset": [
        3311,
        3334
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2491": {
      "fn": "MiniSwap.invest",
      "offset": [
        3311,
        3380
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9C5"
    },
    "2494": {
      "fn": "MiniSwap.invest",
      "offset": [
        3311,
        3380
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2495": {
      "fn": "MiniSwap.invest",
      "offset": [
        3365,
        3380
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2496": {
      "fn": "MiniSwap.invest",
      "offset": [
        3365,
        3380
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2497": {
      "fn": "MiniSwap.invest",
      "offset": [
        3311,
        3380
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16F4"
    },
    "2500": {
      "fn": "MiniSwap.invest",
      "jump": "i",
      "offset": [
        3311,
        3380
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2501": {
      "fn": "MiniSwap.invest",
      "offset": [
        3311,
        3380
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2502": {
      "fn": "MiniSwap.invest",
      "offset": [
        3311,
        3380
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2503": {
      "fn": "MiniSwap.invest",
      "offset": [
        3311,
        3380
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2504": {
      "fn": "MiniSwap.invest",
      "offset": [
        3311,
        3380
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2505": {
      "op": "POP"
    },
    "2506": {
      "op": "POP"
    },
    "2507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2511": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2513": {
      "op": "SHL"
    },
    "2514": {
      "op": "SUB"
    },
    "2515": {
      "fn": "MiniSwap.invest",
      "offset": [
        3390,
        3413
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 17
    },
    "2516": {
      "fn": "MiniSwap.invest",
      "offset": [
        3390,
        3413
      ],
      "op": "AND",
      "path": "1"
    },
    "2517": {
      "fn": "MiniSwap.invest",
      "offset": [
        3390,
        3413
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2519": {
      "fn": "MiniSwap.invest",
      "offset": [
        3390,
        3413
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2520": {
      "fn": "MiniSwap.invest",
      "offset": [
        3390,
        3413
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2521": {
      "fn": "MiniSwap.invest",
      "offset": [
        3390,
        3413
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2522": {
      "fn": "MiniSwap.invest",
      "offset": [
        3390,
        3399
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "2524": {
      "fn": "MiniSwap.invest",
      "offset": [
        3390,
        3413
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2526": {
      "fn": "MiniSwap.invest",
      "offset": [
        3390,
        3413
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2527": {
      "fn": "MiniSwap.invest",
      "offset": [
        3390,
        3413
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2529": {
      "fn": "MiniSwap.invest",
      "offset": [
        3390,
        3413
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2530": {
      "fn": "MiniSwap.invest",
      "offset": [
        3390,
        3413
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2531": {
      "fn": "MiniSwap.invest",
      "offset": [
        3390,
        3425
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2533": {
      "fn": "MiniSwap.invest",
      "offset": [
        3390,
        3425
      ],
      "op": "ADD",
      "path": "1"
    },
    "2534": {
      "fn": "MiniSwap.invest",
      "offset": [
        3390,
        3444
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2535": {
      "fn": "MiniSwap.invest",
      "offset": [
        3390,
        3444
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2536": {
      "fn": "MiniSwap.invest",
      "offset": [
        3429,
        3444
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2537": {
      "fn": "MiniSwap.invest",
      "offset": [
        3429,
        3444
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2538": {
      "fn": "MiniSwap.invest",
      "offset": [
        3390,
        3413
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2539": {
      "fn": "MiniSwap.invest",
      "offset": [
        3390,
        3444
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9F5"
    },
    "2542": {
      "fn": "MiniSwap.invest",
      "offset": [
        3390,
        3444
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2543": {
      "fn": "MiniSwap.invest",
      "offset": [
        3429,
        3444
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2544": {
      "fn": "MiniSwap.invest",
      "offset": [
        3429,
        3444
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2545": {
      "fn": "MiniSwap.invest",
      "offset": [
        3390,
        3444
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16F4"
    },
    "2548": {
      "fn": "MiniSwap.invest",
      "jump": "i",
      "offset": [
        3390,
        3444
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2549": {
      "fn": "MiniSwap.invest",
      "offset": [
        3390,
        3444
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2550": {
      "fn": "MiniSwap.invest",
      "offset": [
        3390,
        3444
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2551": {
      "fn": "MiniSwap.invest",
      "offset": [
        3390,
        3444
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2552": {
      "fn": "MiniSwap.invest",
      "offset": [
        3390,
        3444
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2553": {
      "op": "POP"
    },
    "2554": {
      "op": "POP"
    },
    "2555": {
      "fn": "MiniSwap.invest",
      "offset": [
        3459,
        3540
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 18,
      "value": "0x40"
    },
    "2557": {
      "fn": "MiniSwap.invest",
      "offset": [
        3459,
        3540
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2558": {
      "fn": "MiniSwap.invest",
      "offset": [
        3459,
        3540
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2559": {
      "fn": "MiniSwap.invest",
      "offset": [
        3513,
        3522
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "2560": {
      "op": "DUP2"
    },
    "2561": {
      "op": "MSTORE"
    },
    "2562": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2564": {
      "op": "DUP2"
    },
    "2565": {
      "op": "ADD"
    },
    "2566": {
      "op": "DUP5"
    },
    "2567": {
      "op": "SWAP1"
    },
    "2568": {
      "op": "MSTORE"
    },
    "2569": {
      "fn": "MiniSwap.invest",
      "offset": [
        3496,
        3511
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2570": {
      "fn": "MiniSwap.invest",
      "offset": [
        3496,
        3511
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2571": {
      "fn": "MiniSwap.invest",
      "offset": [
        3484,
        3494
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2572": {
      "fn": "MiniSwap.invest",
      "offset": [
        3484,
        3494
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2577": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2579": {
      "op": "SHL"
    },
    "2580": {
      "op": "SUB"
    },
    "2581": {
      "fn": "MiniSwap.invest",
      "offset": [
        3459,
        3540
      ],
      "op": "DUP9",
      "path": "1"
    },
    "2582": {
      "fn": "MiniSwap.invest",
      "offset": [
        3459,
        3540
      ],
      "op": "AND",
      "path": "1"
    },
    "2583": {
      "fn": "MiniSwap.invest",
      "offset": [
        3459,
        3540
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2584": {
      "fn": "MiniSwap.invest",
      "offset": [
        3459,
        3540
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x70036A0C8AFF04C45115532A9615C7B3CFFA827060E25DF65BC670EA80D856ED"
    },
    "2617": {
      "fn": "MiniSwap.invest",
      "offset": [
        3459,
        3540
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2618": {
      "op": "ADD"
    },
    "2619": {
      "fn": "MiniSwap.invest",
      "offset": [
        3459,
        3540
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2620": {
      "fn": "MiniSwap.invest",
      "offset": [
        3459,
        3540
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2622": {
      "fn": "MiniSwap.invest",
      "offset": [
        3459,
        3540
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2623": {
      "fn": "MiniSwap.invest",
      "offset": [
        3459,
        3540
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2624": {
      "fn": "MiniSwap.invest",
      "offset": [
        3459,
        3540
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2625": {
      "fn": "MiniSwap.invest",
      "offset": [
        3459,
        3540
      ],
      "op": "SUB",
      "path": "1"
    },
    "2626": {
      "fn": "MiniSwap.invest",
      "offset": [
        3459,
        3540
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2627": {
      "fn": "MiniSwap.invest",
      "offset": [
        3459,
        3540
      ],
      "op": "LOG4",
      "path": "1"
    },
    "2628": {
      "fn": "MiniSwap.invest",
      "offset": [
        2609,
        3547
      ],
      "op": "POP",
      "path": "1"
    },
    "2629": {
      "fn": "MiniSwap.invest",
      "offset": [
        2609,
        3547
      ],
      "op": "POP",
      "path": "1"
    },
    "2630": {
      "fn": "MiniSwap.invest",
      "offset": [
        2530,
        3547
      ],
      "op": "POP",
      "path": "1"
    },
    "2631": {
      "fn": "MiniSwap.invest",
      "offset": [
        2530,
        3547
      ],
      "op": "POP",
      "path": "1"
    },
    "2632": {
      "fn": "MiniSwap.invest",
      "jump": "o",
      "offset": [
        2530,
        3547
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2633": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5437,
        5856
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2634": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5528,
        5544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2636": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5556,
        5567
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2637": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5583,
        5590
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2639": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5583,
        5590
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2640": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5570,
        5580
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2641": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5570,
        5590
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA5A"
    },
    "2644": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5570,
        5590
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2645": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5570,
        5590
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2646": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5570,
        5590
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x168C"
    },
    "2649": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "jump": "i",
      "offset": [
        5570,
        5590
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2650": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5570,
        5590
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2655": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2657": {
      "op": "SHL"
    },
    "2658": {
      "op": "SUB"
    },
    "2659": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5619,
        5642
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2660": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5619,
        5642
      ],
      "op": "AND",
      "path": "1"
    },
    "2661": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5600,
        5616
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2663": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5619,
        5642
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2664": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5619,
        5642
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2665": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5619,
        5642
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2666": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5619,
        5628
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "2668": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5619,
        5642
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2670": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5619,
        5642
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2671": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5619,
        5642
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2672": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5619,
        5642
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2673": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5619,
        5642
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2675": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5619,
        5642
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2676": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5619,
        5642
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2677": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5619,
        5652
      ],
      "op": "ADD",
      "path": "1"
    },
    "2678": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5619,
        5652
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2679": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5556,
        5590
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2680": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5556,
        5590
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2681": {
      "op": "POP"
    },
    "2682": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5600,
        5616
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2683": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5619,
        5665
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA85"
    },
    "2686": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5619,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2687": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5655,
        5665
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2688": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2689": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5619,
        5665
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16F4"
    },
    "2692": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "jump": "i",
      "offset": [
        5619,
        5665
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2693": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5619,
        5665
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2698": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2700": {
      "op": "SHL"
    },
    "2701": {
      "op": "SUB"
    },
    "2702": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5729,
        5752
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2703": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5729,
        5752
      ],
      "op": "AND",
      "path": "1"
    },
    "2704": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5675,
        5692
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2706": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5729,
        5752
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2707": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5729,
        5752
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2708": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5729,
        5752
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2709": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5729,
        5738
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "2711": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5729,
        5752
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2713": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5729,
        5752
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2714": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5729,
        5752
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2715": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5729,
        5752
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2716": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5729,
        5752
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2718": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5729,
        5752
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2719": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5729,
        5752
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2720": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5729,
        5762
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2721": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5729,
        5762
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2722": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5729,
        5762
      ],
      "op": "ADD",
      "path": "1"
    },
    "2723": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5729,
        5762
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2724": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5695,
        5726
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2726": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5695,
        5726
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2727": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5695,
        5726
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2728": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5695,
        5726
      ],
      "op": "ADD",
      "path": "1"
    },
    "2729": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5695,
        5726
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2730": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5600,
        5665
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2731": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5600,
        5665
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2732": {
      "op": "POP"
    },
    "2733": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5675,
        5692
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2734": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5675,
        5692
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2735": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5695,
        5762
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAB8"
    },
    "2738": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5695,
        5762
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2739": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5729,
        5762
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2740": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5695,
        5762
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x166D"
    },
    "2743": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "jump": "i",
      "offset": [
        5695,
        5762
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2744": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5695,
        5762
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2745": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5675,
        5762
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2746": {
      "op": "POP"
    },
    "2747": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5828,
        5842
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 19,
      "value": "0xAC4"
    },
    "2750": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5839,
        5842
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2751": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5828,
        5836
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2752": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5828,
        5842
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x170C"
    },
    "2755": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "jump": "i",
      "offset": [
        5828,
        5842
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2756": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5828,
        5842
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2757": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5815,
        5843
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xACE"
    },
    "2760": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5815,
        5843
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2761": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5815,
        5824
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2762": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5815,
        5843
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x168C"
    },
    "2765": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "jump": "i",
      "offset": [
        5815,
        5843
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2766": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5815,
        5843
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2767": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5815,
        5847
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAD9"
    },
    "2770": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5815,
        5847
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2771": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5846,
        5847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2773": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5815,
        5847
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16F4"
    },
    "2776": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "jump": "i",
      "offset": [
        5815,
        5847
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2777": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5815,
        5847
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2782": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2784": {
      "op": "SHL"
    },
    "2785": {
      "op": "SUB"
    },
    "2786": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5780,
        5803
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2787": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5780,
        5803
      ],
      "op": "AND",
      "path": "1"
    },
    "2788": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5780,
        5803
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2790": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5780,
        5803
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2791": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5780,
        5803
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2792": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5780,
        5803
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2793": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5780,
        5789
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "2795": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5780,
        5803
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2797": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5780,
        5803
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2798": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5780,
        5803
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2800": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5780,
        5803
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2801": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5780,
        5803
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2802": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5780,
        5811
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2804": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5780,
        5811
      ],
      "op": "ADD",
      "path": "1"
    },
    "2805": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5780,
        5811
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2806": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5780,
        5848
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAFF"
    },
    "2809": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5780,
        5848
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2810": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5780,
        5848
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2811": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5780,
        5848
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x170C"
    },
    "2814": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "jump": "i",
      "offset": [
        5780,
        5848
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2815": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5780,
        5848
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2816": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5772,
        5849
      ],
      "op": "SWAP7",
      "path": "1"
    },
    "2817": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "offset": [
        5437,
        5856
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "2818": {
      "op": "POP"
    },
    "2819": {
      "op": "POP"
    },
    "2820": {
      "op": "POP"
    },
    "2821": {
      "op": "POP"
    },
    "2822": {
      "op": "POP"
    },
    "2823": {
      "op": "POP"
    },
    "2824": {
      "fn": "MiniSwap.getTokenToEthQuote",
      "jump": "o",
      "offset": [
        5437,
        5856
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2825": {
      "fn": "MiniSwap.divest",
      "offset": [
        4001,
        4832
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2830": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2832": {
      "op": "SHL"
    },
    "2833": {
      "op": "SUB"
    },
    "2834": {
      "fn": "MiniSwap.divest",
      "offset": [
        4080,
        4103
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 20
    },
    "2835": {
      "fn": "MiniSwap.divest",
      "offset": [
        4080,
        4103
      ],
      "op": "AND",
      "path": "1"
    },
    "2836": {
      "fn": "MiniSwap.divest",
      "offset": [
        4080,
        4103
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2838": {
      "fn": "MiniSwap.divest",
      "offset": [
        4080,
        4103
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2839": {
      "fn": "MiniSwap.divest",
      "offset": [
        4080,
        4103
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2840": {
      "fn": "MiniSwap.divest",
      "offset": [
        4080,
        4103
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2841": {
      "fn": "MiniSwap.divest",
      "offset": [
        4080,
        4089
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "2843": {
      "fn": "MiniSwap.divest",
      "offset": [
        4080,
        4103
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2845": {
      "fn": "MiniSwap.divest",
      "offset": [
        4080,
        4103
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2846": {
      "fn": "MiniSwap.divest",
      "offset": [
        4080,
        4103
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2847": {
      "fn": "MiniSwap.divest",
      "offset": [
        4080,
        4103
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2848": {
      "fn": "MiniSwap.divest",
      "offset": [
        4080,
        4103
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2850": {
      "fn": "MiniSwap.divest",
      "offset": [
        4080,
        4103
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2851": {
      "fn": "MiniSwap.divest",
      "offset": [
        4080,
        4103
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2852": {
      "fn": "MiniSwap.divest",
      "offset": [
        4080,
        4103
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2853": {
      "fn": "MiniSwap.divest",
      "offset": [
        4119,
        4129
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2854": {
      "fn": "MiniSwap.divest",
      "offset": [
        4080,
        4130
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2855": {
      "fn": "MiniSwap.divest",
      "offset": [
        4080,
        4130
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2856": {
      "fn": "MiniSwap.divest",
      "offset": [
        4080,
        4118
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "2858": {
      "fn": "MiniSwap.divest",
      "offset": [
        4080,
        4118
      ],
      "op": "ADD",
      "path": "1"
    },
    "2859": {
      "fn": "MiniSwap.divest",
      "offset": [
        4080,
        4130
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2860": {
      "fn": "MiniSwap.divest",
      "offset": [
        4080,
        4130
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2861": {
      "fn": "MiniSwap.divest",
      "offset": [
        4080,
        4130
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2862": {
      "fn": "MiniSwap.divest",
      "offset": [
        4080,
        4130
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2863": {
      "fn": "MiniSwap.divest",
      "offset": [
        4080,
        4130
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2864": {
      "fn": "MiniSwap.divest",
      "offset": [
        4080,
        4130
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2865": {
      "fn": "MiniSwap.divest",
      "offset": [
        4080,
        4140
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2866": {
      "op": "GT"
    },
    "2867": {
      "branch": 56,
      "fn": "MiniSwap.divest",
      "offset": [
        4080,
        4140
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2868": {
      "fn": "MiniSwap.divest",
      "offset": [
        4072,
        4172
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB7F"
    },
    "2871": {
      "branch": 56,
      "fn": "MiniSwap.divest",
      "offset": [
        4072,
        4172
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2872": {
      "fn": "MiniSwap.divest",
      "offset": [
        4072,
        4172
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2874": {
      "fn": "MiniSwap.divest",
      "offset": [
        4072,
        4172
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2875": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2879": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2881": {
      "op": "SHL"
    },
    "2882": {
      "fn": "MiniSwap.divest",
      "offset": [
        4072,
        4172
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2883": {
      "fn": "MiniSwap.divest",
      "offset": [
        4072,
        4172
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2884": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2886": {
      "fn": "MiniSwap.divest",
      "offset": [
        4072,
        4172
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2888": {
      "fn": "MiniSwap.divest",
      "offset": [
        4072,
        4172
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2889": {
      "fn": "MiniSwap.divest",
      "offset": [
        4072,
        4172
      ],
      "op": "ADD",
      "path": "1"
    },
    "2890": {
      "op": "MSTORE"
    },
    "2891": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "2893": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2895": {
      "op": "DUP3"
    },
    "2896": {
      "op": "ADD"
    },
    "2897": {
      "op": "MSTORE"
    },
    "2898": {
      "op": "PUSH32",
      "value": "0x4E6F7420656E6F7567682073686172657320746F206469766573740000000000"
    },
    "2931": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2933": {
      "op": "DUP3"
    },
    "2934": {
      "op": "ADD"
    },
    "2935": {
      "op": "MSTORE"
    },
    "2936": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2938": {
      "op": "ADD"
    },
    "2939": {
      "fn": "MiniSwap.divest",
      "offset": [
        4072,
        4172
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x429"
    },
    "2942": {
      "op": "JUMP"
    },
    "2943": {
      "fn": "MiniSwap.divest",
      "offset": [
        4072,
        4172
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2948": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2950": {
      "op": "SHL"
    },
    "2951": {
      "op": "SUB"
    },
    "2952": {
      "fn": "MiniSwap.divest",
      "offset": [
        4244,
        4267
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2953": {
      "fn": "MiniSwap.divest",
      "offset": [
        4244,
        4267
      ],
      "op": "AND",
      "path": "1"
    },
    "2954": {
      "fn": "MiniSwap.divest",
      "offset": [
        4182,
        4196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2956": {
      "fn": "MiniSwap.divest",
      "offset": [
        4244,
        4267
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2957": {
      "fn": "MiniSwap.divest",
      "offset": [
        4244,
        4267
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2958": {
      "fn": "MiniSwap.divest",
      "offset": [
        4244,
        4267
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2959": {
      "fn": "MiniSwap.divest",
      "offset": [
        4244,
        4253
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "2961": {
      "fn": "MiniSwap.divest",
      "offset": [
        4244,
        4267
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2963": {
      "fn": "MiniSwap.divest",
      "offset": [
        4244,
        4267
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2964": {
      "fn": "MiniSwap.divest",
      "offset": [
        4244,
        4267
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2966": {
      "fn": "MiniSwap.divest",
      "offset": [
        4244,
        4267
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2967": {
      "fn": "MiniSwap.divest",
      "offset": [
        4244,
        4267
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2968": {
      "fn": "MiniSwap.divest",
      "offset": [
        4244,
        4279
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2970": {
      "fn": "MiniSwap.divest",
      "offset": [
        4244,
        4279
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2971": {
      "fn": "MiniSwap.divest",
      "offset": [
        4244,
        4279
      ],
      "op": "ADD",
      "path": "1"
    },
    "2972": {
      "fn": "MiniSwap.divest",
      "offset": [
        4244,
        4279
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2973": {
      "fn": "MiniSwap.divest",
      "offset": [
        4200,
        4231
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2975": {
      "fn": "MiniSwap.divest",
      "offset": [
        4200,
        4231
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2976": {
      "fn": "MiniSwap.divest",
      "offset": [
        4200,
        4231
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2977": {
      "fn": "MiniSwap.divest",
      "offset": [
        4200,
        4231
      ],
      "op": "ADD",
      "path": "1"
    },
    "2978": {
      "fn": "MiniSwap.divest",
      "offset": [
        4200,
        4231
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2979": {
      "fn": "MiniSwap.divest",
      "offset": [
        4200,
        4240
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBAD"
    },
    "2982": {
      "fn": "MiniSwap.divest",
      "offset": [
        4200,
        4240
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2983": {
      "fn": "MiniSwap.divest",
      "offset": [
        4234,
        4240
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2984": {
      "fn": "MiniSwap.divest",
      "offset": [
        4234,
        4240
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2985": {
      "fn": "MiniSwap.divest",
      "offset": [
        4200,
        4240
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x166D"
    },
    "2988": {
      "fn": "MiniSwap.divest",
      "jump": "i",
      "offset": [
        4200,
        4240
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2989": {
      "fn": "MiniSwap.divest",
      "offset": [
        4200,
        4240
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2990": {
      "fn": "MiniSwap.divest",
      "offset": [
        4199,
        4279
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBB7"
    },
    "2993": {
      "fn": "MiniSwap.divest",
      "offset": [
        4199,
        4279
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2994": {
      "fn": "MiniSwap.divest",
      "offset": [
        4199,
        4279
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2995": {
      "fn": "MiniSwap.divest",
      "offset": [
        4199,
        4279
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x168C"
    },
    "2998": {
      "fn": "MiniSwap.divest",
      "jump": "i",
      "offset": [
        4199,
        4279
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2999": {
      "fn": "MiniSwap.divest",
      "offset": [
        4199,
        4279
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3000": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3004": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3006": {
      "op": "SHL"
    },
    "3007": {
      "op": "SUB"
    },
    "3008": {
      "fn": "MiniSwap.divest",
      "offset": [
        4355,
        4378
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3009": {
      "fn": "MiniSwap.divest",
      "offset": [
        4355,
        4378
      ],
      "op": "AND",
      "path": "1"
    },
    "3010": {
      "fn": "MiniSwap.divest",
      "offset": [
        4289,
        4305
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3012": {
      "fn": "MiniSwap.divest",
      "offset": [
        4355,
        4378
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3013": {
      "fn": "MiniSwap.divest",
      "offset": [
        4355,
        4378
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3014": {
      "fn": "MiniSwap.divest",
      "offset": [
        4355,
        4378
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3015": {
      "fn": "MiniSwap.divest",
      "offset": [
        4355,
        4364
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "3017": {
      "fn": "MiniSwap.divest",
      "offset": [
        4355,
        4378
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3019": {
      "fn": "MiniSwap.divest",
      "offset": [
        4355,
        4378
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3020": {
      "fn": "MiniSwap.divest",
      "offset": [
        4355,
        4378
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3021": {
      "fn": "MiniSwap.divest",
      "offset": [
        4355,
        4378
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3022": {
      "fn": "MiniSwap.divest",
      "offset": [
        4355,
        4378
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3024": {
      "fn": "MiniSwap.divest",
      "offset": [
        4355,
        4378
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3025": {
      "fn": "MiniSwap.divest",
      "offset": [
        4355,
        4378
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3026": {
      "fn": "MiniSwap.divest",
      "offset": [
        4355,
        4390
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3028": {
      "fn": "MiniSwap.divest",
      "offset": [
        4355,
        4390
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3029": {
      "fn": "MiniSwap.divest",
      "offset": [
        4355,
        4390
      ],
      "op": "ADD",
      "path": "1"
    },
    "3030": {
      "fn": "MiniSwap.divest",
      "offset": [
        4355,
        4390
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3031": {
      "fn": "MiniSwap.divest",
      "offset": [
        4309,
        4342
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3032": {
      "fn": "MiniSwap.divest",
      "offset": [
        4309,
        4342
      ],
      "op": "ADD",
      "path": "1"
    },
    "3033": {
      "fn": "MiniSwap.divest",
      "offset": [
        4309,
        4342
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3034": {
      "fn": "MiniSwap.divest",
      "offset": [
        4182,
        4279
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3035": {
      "fn": "MiniSwap.divest",
      "offset": [
        4182,
        4279
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3036": {
      "op": "POP"
    },
    "3037": {
      "fn": "MiniSwap.divest",
      "offset": [
        4289,
        4305
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3038": {
      "fn": "MiniSwap.divest",
      "offset": [
        4289,
        4305
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3039": {
      "fn": "MiniSwap.divest",
      "offset": [
        4309,
        4351
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBE9"
    },
    "3042": {
      "fn": "MiniSwap.divest",
      "offset": [
        4309,
        4351
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3043": {
      "fn": "MiniSwap.divest",
      "offset": [
        4345,
        4351
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3044": {
      "fn": "MiniSwap.divest",
      "offset": [
        4345,
        4351
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3045": {
      "fn": "MiniSwap.divest",
      "offset": [
        4309,
        4351
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x166D"
    },
    "3048": {
      "fn": "MiniSwap.divest",
      "jump": "i",
      "offset": [
        4309,
        4351
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3049": {
      "fn": "MiniSwap.divest",
      "offset": [
        4309,
        4351
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3050": {
      "fn": "MiniSwap.divest",
      "offset": [
        4308,
        4390
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBF3"
    },
    "3053": {
      "fn": "MiniSwap.divest",
      "offset": [
        4308,
        4390
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3054": {
      "fn": "MiniSwap.divest",
      "offset": [
        4308,
        4390
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3055": {
      "fn": "MiniSwap.divest",
      "offset": [
        4308,
        4390
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x168C"
    },
    "3058": {
      "fn": "MiniSwap.divest",
      "jump": "i",
      "offset": [
        4308,
        4390
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3059": {
      "fn": "MiniSwap.divest",
      "offset": [
        4308,
        4390
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3064": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3066": {
      "op": "SHL"
    },
    "3067": {
      "op": "SUB"
    },
    "3068": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4431
      ],
      "op": "DUP6",
      "path": "1",
      "statement": 21
    },
    "3069": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4431
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3070": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4431
      ],
      "op": "AND",
      "path": "1"
    },
    "3071": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4431
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3073": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4431
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3074": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4431
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3075": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4431
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3076": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "3078": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4431
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3080": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4431
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3081": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4431
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3083": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4431
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3084": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4431
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3085": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4431
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3086": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4431
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3087": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4437
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3088": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3089": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3090": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "3095": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3097": {
      "op": "SHL"
    },
    "3098": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3099": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3100": {
      "fn": "MiniSwap.divest",
      "offset": [
        4447,
        4457
      ],
      "op": "CALLER",
      "path": "1"
    },
    "3101": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3103": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3104": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "ADD",
      "path": "1"
    },
    "3105": {
      "op": "MSTORE"
    },
    "3106": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3108": {
      "op": "DUP2"
    },
    "3109": {
      "op": "ADD"
    },
    "3110": {
      "op": "DUP5"
    },
    "3111": {
      "op": "SWAP1"
    },
    "3112": {
      "op": "MSTORE"
    },
    "3113": {
      "fn": "MiniSwap.divest",
      "offset": [
        4289,
        4390
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3114": {
      "fn": "MiniSwap.divest",
      "offset": [
        4289,
        4390
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3115": {
      "op": "POP"
    },
    "3116": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4437
      ],
      "op": "AND",
      "path": "1"
    },
    "3117": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4437
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3118": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4446
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA9059CBB"
    },
    "3123": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4446
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3124": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3126": {
      "op": "ADD"
    },
    "3127": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3129": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3131": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3132": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3133": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3134": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "SUB",
      "path": "1"
    },
    "3135": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3136": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3138": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "DUP8",
      "path": "1"
    },
    "3139": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "GAS",
      "path": "1"
    },
    "3140": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "CALL",
      "path": "1"
    },
    "3141": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3142": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3143": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3144": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC55"
    },
    "3147": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3148": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3149": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3151": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3152": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "3153": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3154": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3156": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3157": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3158": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "POP",
      "path": "1"
    },
    "3159": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "POP",
      "path": "1"
    },
    "3160": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "POP",
      "path": "1"
    },
    "3161": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "POP",
      "path": "1"
    },
    "3162": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3164": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3165": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3166": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "3168": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "NOT",
      "path": "1"
    },
    "3169": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "3171": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3172": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "ADD",
      "path": "1"
    },
    "3173": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "AND",
      "path": "1"
    },
    "3174": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3175": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "ADD",
      "path": "1"
    },
    "3176": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3177": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3179": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3180": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "POP",
      "path": "1"
    },
    "3181": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3182": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "ADD",
      "path": "1"
    },
    "3183": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3184": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC79"
    },
    "3187": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3188": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3189": {
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16D2"
    },
    "3192": {
      "fn": "MiniSwap.divest",
      "jump": "i",
      "offset": [
        4408,
        4468
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3193": {
      "branch": 57,
      "fn": "MiniSwap.divest",
      "offset": [
        4408,
        4468
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3194": {
      "fn": "MiniSwap.divest",
      "offset": [
        4400,
        4469
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC82"
    },
    "3197": {
      "branch": 57,
      "fn": "MiniSwap.divest",
      "offset": [
        4400,
        4469
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3198": {
      "fn": "MiniSwap.divest",
      "offset": [
        4400,
        4469
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3200": {
      "fn": "MiniSwap.divest",
      "offset": [
        4400,
        4469
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3201": {
      "fn": "MiniSwap.divest",
      "offset": [
        4400,
        4469
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3202": {
      "fn": "MiniSwap.divest",
      "offset": [
        4400,
        4469
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3207": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3209": {
      "op": "SHL"
    },
    "3210": {
      "op": "SUB"
    },
    "3211": {
      "fn": "MiniSwap.divest",
      "offset": [
        4527,
        4550
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 22
    },
    "3212": {
      "fn": "MiniSwap.divest",
      "offset": [
        4527,
        4550
      ],
      "op": "AND",
      "path": "1"
    },
    "3213": {
      "fn": "MiniSwap.divest",
      "offset": [
        4527,
        4550
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3215": {
      "fn": "MiniSwap.divest",
      "offset": [
        4527,
        4550
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3216": {
      "fn": "MiniSwap.divest",
      "offset": [
        4527,
        4550
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3217": {
      "fn": "MiniSwap.divest",
      "offset": [
        4527,
        4550
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3218": {
      "fn": "MiniSwap.divest",
      "offset": [
        4527,
        4536
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "3220": {
      "fn": "MiniSwap.divest",
      "offset": [
        4527,
        4550
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3222": {
      "fn": "MiniSwap.divest",
      "offset": [
        4527,
        4550
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3223": {
      "fn": "MiniSwap.divest",
      "offset": [
        4527,
        4550
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3225": {
      "fn": "MiniSwap.divest",
      "offset": [
        4527,
        4550
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3226": {
      "fn": "MiniSwap.divest",
      "offset": [
        4527,
        4550
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3227": {
      "fn": "MiniSwap.divest",
      "offset": [
        4527,
        4558
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3229": {
      "fn": "MiniSwap.divest",
      "offset": [
        4527,
        4558
      ],
      "op": "ADD",
      "path": "1"
    },
    "3230": {
      "fn": "MiniSwap.divest",
      "offset": [
        4527,
        4568
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3231": {
      "fn": "MiniSwap.divest",
      "offset": [
        4527,
        4568
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3232": {
      "fn": "MiniSwap.divest",
      "offset": [
        4562,
        4568
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3233": {
      "fn": "MiniSwap.divest",
      "offset": [
        4562,
        4568
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3234": {
      "fn": "MiniSwap.divest",
      "offset": [
        4527,
        4550
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3235": {
      "fn": "MiniSwap.divest",
      "offset": [
        4527,
        4568
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCAD"
    },
    "3238": {
      "fn": "MiniSwap.divest",
      "offset": [
        4527,
        4568
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3239": {
      "fn": "MiniSwap.divest",
      "offset": [
        4562,
        4568
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3240": {
      "fn": "MiniSwap.divest",
      "offset": [
        4562,
        4568
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3241": {
      "fn": "MiniSwap.divest",
      "offset": [
        4527,
        4568
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x170C"
    },
    "3244": {
      "fn": "MiniSwap.divest",
      "jump": "i",
      "offset": [
        4527,
        4568
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3245": {
      "fn": "MiniSwap.divest",
      "offset": [
        4527,
        4568
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3246": {
      "fn": "MiniSwap.divest",
      "offset": [
        4527,
        4568
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3247": {
      "fn": "MiniSwap.divest",
      "offset": [
        4527,
        4568
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3248": {
      "fn": "MiniSwap.divest",
      "offset": [
        4527,
        4568
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3249": {
      "op": "POP"
    },
    "3250": {
      "op": "POP"
    },
    "3251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3255": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3257": {
      "op": "SHL"
    },
    "3258": {
      "op": "SUB"
    },
    "3259": {
      "fn": "MiniSwap.divest",
      "offset": [
        4578,
        4601
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 23
    },
    "3260": {
      "fn": "MiniSwap.divest",
      "offset": [
        4578,
        4601
      ],
      "op": "AND",
      "path": "1"
    },
    "3261": {
      "fn": "MiniSwap.divest",
      "offset": [
        4578,
        4601
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3263": {
      "fn": "MiniSwap.divest",
      "offset": [
        4578,
        4601
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3264": {
      "fn": "MiniSwap.divest",
      "offset": [
        4578,
        4601
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3265": {
      "fn": "MiniSwap.divest",
      "offset": [
        4578,
        4601
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3266": {
      "fn": "MiniSwap.divest",
      "offset": [
        4578,
        4587
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "3268": {
      "fn": "MiniSwap.divest",
      "offset": [
        4578,
        4601
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3270": {
      "fn": "MiniSwap.divest",
      "offset": [
        4578,
        4601
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3271": {
      "fn": "MiniSwap.divest",
      "offset": [
        4578,
        4601
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3272": {
      "fn": "MiniSwap.divest",
      "offset": [
        4578,
        4601
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3273": {
      "fn": "MiniSwap.divest",
      "offset": [
        4578,
        4601
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3275": {
      "fn": "MiniSwap.divest",
      "offset": [
        4578,
        4601
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3276": {
      "fn": "MiniSwap.divest",
      "offset": [
        4578,
        4601
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3277": {
      "fn": "MiniSwap.divest",
      "offset": [
        4578,
        4611
      ],
      "op": "ADD",
      "path": "1"
    },
    "3278": {
      "fn": "MiniSwap.divest",
      "offset": [
        4578,
        4623
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3279": {
      "fn": "MiniSwap.divest",
      "offset": [
        4578,
        4623
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3280": {
      "fn": "MiniSwap.divest",
      "offset": [
        4615,
        4623
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3281": {
      "fn": "MiniSwap.divest",
      "offset": [
        4615,
        4623
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3282": {
      "fn": "MiniSwap.divest",
      "offset": [
        4578,
        4601
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3283": {
      "fn": "MiniSwap.divest",
      "offset": [
        4578,
        4623
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCDD"
    },
    "3286": {
      "fn": "MiniSwap.divest",
      "offset": [
        4578,
        4623
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3287": {
      "fn": "MiniSwap.divest",
      "offset": [
        4615,
        4623
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3288": {
      "fn": "MiniSwap.divest",
      "offset": [
        4615,
        4623
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3289": {
      "fn": "MiniSwap.divest",
      "offset": [
        4578,
        4623
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x170C"
    },
    "3292": {
      "fn": "MiniSwap.divest",
      "jump": "i",
      "offset": [
        4578,
        4623
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3293": {
      "fn": "MiniSwap.divest",
      "offset": [
        4578,
        4623
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3294": {
      "fn": "MiniSwap.divest",
      "offset": [
        4578,
        4623
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3295": {
      "fn": "MiniSwap.divest",
      "offset": [
        4578,
        4623
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3296": {
      "fn": "MiniSwap.divest",
      "offset": [
        4578,
        4623
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3297": {
      "op": "POP"
    },
    "3298": {
      "op": "POP"
    },
    "3299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3303": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3305": {
      "op": "SHL"
    },
    "3306": {
      "op": "SUB"
    },
    "3307": {
      "fn": "MiniSwap.divest",
      "offset": [
        4633,
        4656
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 24
    },
    "3308": {
      "fn": "MiniSwap.divest",
      "offset": [
        4633,
        4656
      ],
      "op": "AND",
      "path": "1"
    },
    "3309": {
      "fn": "MiniSwap.divest",
      "offset": [
        4633,
        4656
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3311": {
      "fn": "MiniSwap.divest",
      "offset": [
        4633,
        4656
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3312": {
      "fn": "MiniSwap.divest",
      "offset": [
        4633,
        4656
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3313": {
      "fn": "MiniSwap.divest",
      "offset": [
        4633,
        4656
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3314": {
      "fn": "MiniSwap.divest",
      "offset": [
        4633,
        4642
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "3316": {
      "fn": "MiniSwap.divest",
      "offset": [
        4633,
        4656
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3318": {
      "fn": "MiniSwap.divest",
      "offset": [
        4633,
        4656
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3319": {
      "fn": "MiniSwap.divest",
      "offset": [
        4633,
        4656
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3320": {
      "fn": "MiniSwap.divest",
      "offset": [
        4633,
        4656
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3321": {
      "fn": "MiniSwap.divest",
      "offset": [
        4633,
        4656
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3323": {
      "fn": "MiniSwap.divest",
      "offset": [
        4633,
        4656
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3324": {
      "fn": "MiniSwap.divest",
      "offset": [
        4633,
        4656
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3325": {
      "fn": "MiniSwap.divest",
      "offset": [
        4633,
        4656
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3326": {
      "fn": "MiniSwap.divest",
      "offset": [
        4672,
        4682
      ],
      "op": "CALLER",
      "path": "1"
    },
    "3327": {
      "fn": "MiniSwap.divest",
      "offset": [
        4633,
        4683
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3328": {
      "fn": "MiniSwap.divest",
      "offset": [
        4633,
        4683
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3329": {
      "fn": "MiniSwap.divest",
      "offset": [
        4633,
        4671
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "3331": {
      "fn": "MiniSwap.divest",
      "offset": [
        4633,
        4671
      ],
      "op": "ADD",
      "path": "1"
    },
    "3332": {
      "fn": "MiniSwap.divest",
      "offset": [
        4633,
        4683
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3333": {
      "fn": "MiniSwap.divest",
      "offset": [
        4633,
        4683
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3334": {
      "fn": "MiniSwap.divest",
      "offset": [
        4633,
        4683
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3335": {
      "fn": "MiniSwap.divest",
      "offset": [
        4633,
        4683
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3336": {
      "fn": "MiniSwap.divest",
      "offset": [
        4633,
        4683
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3337": {
      "fn": "MiniSwap.divest",
      "offset": [
        4633,
        4693
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3338": {
      "fn": "MiniSwap.divest",
      "offset": [
        4633,
        4693
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3339": {
      "fn": "MiniSwap.divest",
      "offset": [
        4687,
        4693
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3340": {
      "fn": "MiniSwap.divest",
      "offset": [
        4687,
        4693
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3341": {
      "fn": "MiniSwap.divest",
      "offset": [
        4633,
        4656
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3342": {
      "fn": "MiniSwap.divest",
      "offset": [
        4633,
        4693
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD18"
    },
    "3345": {
      "fn": "MiniSwap.divest",
      "offset": [
        4633,
        4693
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3346": {
      "fn": "MiniSwap.divest",
      "offset": [
        4687,
        4693
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3347": {
      "fn": "MiniSwap.divest",
      "offset": [
        4687,
        4693
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3348": {
      "fn": "MiniSwap.divest",
      "offset": [
        4633,
        4693
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x170C"
    },
    "3351": {
      "fn": "MiniSwap.divest",
      "jump": "i",
      "offset": [
        4633,
        4693
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3352": {
      "fn": "MiniSwap.divest",
      "offset": [
        4633,
        4693
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3353": {
      "fn": "MiniSwap.divest",
      "offset": [
        4633,
        4693
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3354": {
      "fn": "MiniSwap.divest",
      "offset": [
        4633,
        4693
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3355": {
      "fn": "MiniSwap.divest",
      "offset": [
        4633,
        4693
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3356": {
      "op": "POP"
    },
    "3357": {
      "op": "POP"
    },
    "3358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3362": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3364": {
      "op": "SHL"
    },
    "3365": {
      "op": "SUB"
    },
    "3366": {
      "fn": "MiniSwap.divest",
      "offset": [
        4703,
        4726
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 25
    },
    "3367": {
      "fn": "MiniSwap.divest",
      "offset": [
        4703,
        4726
      ],
      "op": "AND",
      "path": "1"
    },
    "3368": {
      "fn": "MiniSwap.divest",
      "offset": [
        4703,
        4726
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3370": {
      "fn": "MiniSwap.divest",
      "offset": [
        4703,
        4726
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3371": {
      "fn": "MiniSwap.divest",
      "offset": [
        4703,
        4726
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3372": {
      "fn": "MiniSwap.divest",
      "offset": [
        4703,
        4726
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3373": {
      "fn": "MiniSwap.divest",
      "offset": [
        4703,
        4712
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "3375": {
      "fn": "MiniSwap.divest",
      "offset": [
        4703,
        4726
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3377": {
      "fn": "MiniSwap.divest",
      "offset": [
        4703,
        4726
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3378": {
      "fn": "MiniSwap.divest",
      "offset": [
        4703,
        4726
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3380": {
      "fn": "MiniSwap.divest",
      "offset": [
        4703,
        4726
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3381": {
      "fn": "MiniSwap.divest",
      "offset": [
        4703,
        4726
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3382": {
      "fn": "MiniSwap.divest",
      "offset": [
        4703,
        4738
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3384": {
      "fn": "MiniSwap.divest",
      "offset": [
        4703,
        4738
      ],
      "op": "ADD",
      "path": "1"
    },
    "3385": {
      "fn": "MiniSwap.divest",
      "offset": [
        4703,
        4748
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3386": {
      "fn": "MiniSwap.divest",
      "offset": [
        4703,
        4748
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3387": {
      "fn": "MiniSwap.divest",
      "offset": [
        4742,
        4748
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3388": {
      "fn": "MiniSwap.divest",
      "offset": [
        4742,
        4748
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3389": {
      "fn": "MiniSwap.divest",
      "offset": [
        4703,
        4726
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3390": {
      "fn": "MiniSwap.divest",
      "offset": [
        4703,
        4748
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD48"
    },
    "3393": {
      "fn": "MiniSwap.divest",
      "offset": [
        4703,
        4748
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3394": {
      "fn": "MiniSwap.divest",
      "offset": [
        4742,
        4748
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3395": {
      "fn": "MiniSwap.divest",
      "offset": [
        4742,
        4748
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3396": {
      "fn": "MiniSwap.divest",
      "offset": [
        4703,
        4748
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x170C"
    },
    "3399": {
      "fn": "MiniSwap.divest",
      "jump": "i",
      "offset": [
        4703,
        4748
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3400": {
      "fn": "MiniSwap.divest",
      "offset": [
        4703,
        4748
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3401": {
      "fn": "MiniSwap.divest",
      "offset": [
        4703,
        4748
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3402": {
      "fn": "MiniSwap.divest",
      "offset": [
        4703,
        4748
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3403": {
      "fn": "MiniSwap.divest",
      "offset": [
        4703,
        4748
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3404": {
      "op": "POP"
    },
    "3405": {
      "op": "POP"
    },
    "3406": {
      "fn": "MiniSwap.divest",
      "offset": [
        4763,
        4825
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 26,
      "value": "0x40"
    },
    "3408": {
      "fn": "MiniSwap.divest",
      "offset": [
        4763,
        4825
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3409": {
      "fn": "MiniSwap.divest",
      "offset": [
        4763,
        4825
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3410": {
      "op": "DUP4"
    },
    "3411": {
      "op": "DUP2"
    },
    "3412": {
      "op": "MSTORE"
    },
    "3413": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3415": {
      "op": "DUP2"
    },
    "3416": {
      "op": "ADD"
    },
    "3417": {
      "op": "DUP4"
    },
    "3418": {
      "op": "SWAP1"
    },
    "3419": {
      "op": "MSTORE"
    },
    "3420": {
      "fn": "MiniSwap.divest",
      "offset": [
        4800,
        4806
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3421": {
      "fn": "MiniSwap.divest",
      "offset": [
        4800,
        4806
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3422": {
      "fn": "MiniSwap.divest",
      "offset": [
        4788,
        4798
      ],
      "op": "CALLER",
      "path": "1"
    },
    "3423": {
      "fn": "MiniSwap.divest",
      "offset": [
        4788,
        4798
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3428": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3430": {
      "op": "SHL"
    },
    "3431": {
      "op": "SUB"
    },
    "3432": {
      "fn": "MiniSwap.divest",
      "offset": [
        4763,
        4825
      ],
      "op": "DUP9",
      "path": "1"
    },
    "3433": {
      "fn": "MiniSwap.divest",
      "offset": [
        4763,
        4825
      ],
      "op": "AND",
      "path": "1"
    },
    "3434": {
      "fn": "MiniSwap.divest",
      "offset": [
        4763,
        4825
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3435": {
      "fn": "MiniSwap.divest",
      "offset": [
        4763,
        4825
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xDAD7796DF9A6C41D40041FD7A4CEDDF72D437F4368688E1C1A69A07244FB6632"
    },
    "3468": {
      "fn": "MiniSwap.divest",
      "offset": [
        4763,
        4825
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3469": {
      "op": "ADD"
    },
    "3470": {
      "fn": "MiniSwap.divest",
      "offset": [
        4763,
        4825
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA3B"
    },
    "3473": {
      "op": "JUMP"
    },
    "3474": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1763,
        2524
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3479": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3481": {
      "op": "SHL"
    },
    "3482": {
      "op": "SUB"
    },
    "3483": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1864,
        1887
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 27
    },
    "3484": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1864,
        1887
      ],
      "op": "AND",
      "path": "1"
    },
    "3485": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1864,
        1887
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3487": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1864,
        1887
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3488": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1864,
        1887
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3489": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1864,
        1887
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3490": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1864,
        1873
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "3492": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1864,
        1887
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3494": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1864,
        1887
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3495": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1864,
        1887
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3497": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1864,
        1887
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3498": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1864,
        1887
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3499": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1864,
        1899
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3501": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1864,
        1899
      ],
      "op": "ADD",
      "path": "1"
    },
    "3502": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1864,
        1899
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3503": {
      "branch": 58,
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1864,
        1904
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3504": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1855,
        1963
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE1A"
    },
    "3507": {
      "branch": 58,
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1855,
        1963
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3508": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1855,
        1963
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3510": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1855,
        1963
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3511": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3515": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3517": {
      "op": "SHL"
    },
    "3518": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1855,
        1963
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3519": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1855,
        1963
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3520": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3522": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1855,
        1963
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3524": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1855,
        1963
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3525": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1855,
        1963
      ],
      "op": "ADD",
      "path": "1"
    },
    "3526": {
      "op": "MSTORE"
    },
    "3527": {
      "op": "PUSH1",
      "value": "0x36"
    },
    "3529": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3531": {
      "op": "DUP3"
    },
    "3532": {
      "op": "ADD"
    },
    "3533": {
      "op": "MSTORE"
    },
    "3534": {
      "op": "PUSH32",
      "value": "0x4C697175696469747920706F6F6C20697320616C726561647920736565646564"
    },
    "3567": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3569": {
      "op": "DUP3"
    },
    "3570": {
      "op": "ADD"
    },
    "3571": {
      "op": "MSTORE"
    },
    "3572": {
      "op": "PUSH22",
      "value": "0xB081D5CD9481A5B9D995CDD0A0A481A5B9CDD195859"
    },
    "3595": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "3597": {
      "op": "SHL"
    },
    "3598": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3600": {
      "op": "DUP3"
    },
    "3601": {
      "op": "ADD"
    },
    "3602": {
      "op": "MSTORE"
    },
    "3603": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3605": {
      "op": "ADD"
    },
    "3606": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1855,
        1963
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x429"
    },
    "3609": {
      "op": "JUMP"
    },
    "3610": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1855,
        1963
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3611": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2000,
        2001
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 28,
      "value": "0x0"
    },
    "3613": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1982,
        1997
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3614": {
      "branch": 59,
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1982,
        2001
      ],
      "op": "GT",
      "path": "1"
    },
    "3615": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1982,
        2018
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3616": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1982,
        2018
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3617": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1982,
        2018
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE2A"
    },
    "3620": {
      "branch": 59,
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1982,
        2018
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3621": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1982,
        2018
      ],
      "op": "POP",
      "path": "1"
    },
    "3622": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2017,
        2018
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3624": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2005,
        2014
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "3625": {
      "branch": 60,
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2005,
        2018
      ],
      "op": "GT",
      "path": "1"
    },
    "3626": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1982,
        2018
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3627": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1973,
        2049
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE76"
    },
    "3630": {
      "branch": 60,
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1973,
        2049
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3631": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1973,
        2049
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3633": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1973,
        2049
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3634": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3638": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3640": {
      "op": "SHL"
    },
    "3641": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1973,
        2049
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3642": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1973,
        2049
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3643": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3645": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1973,
        2049
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3647": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1973,
        2049
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3648": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1973,
        2049
      ],
      "op": "ADD",
      "path": "1"
    },
    "3649": {
      "op": "MSTORE"
    },
    "3650": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "3652": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3654": {
      "op": "DUP3"
    },
    "3655": {
      "op": "ADD"
    },
    "3656": {
      "op": "MSTORE"
    },
    "3657": {
      "op": "PUSH32",
      "value": "0x4D75737420696E766573742045544820616E6420746F6B656E73000000000000"
    },
    "3690": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3692": {
      "op": "DUP3"
    },
    "3693": {
      "op": "ADD"
    },
    "3694": {
      "op": "MSTORE"
    },
    "3695": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3697": {
      "op": "ADD"
    },
    "3698": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1973,
        2049
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x429"
    },
    "3701": {
      "op": "JUMP"
    },
    "3702": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1973,
        2049
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3707": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3709": {
      "op": "SHL"
    },
    "3710": {
      "op": "SUB"
    },
    "3711": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2082
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 29
    },
    "3712": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2082
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3713": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2082
      ],
      "op": "AND",
      "path": "1"
    },
    "3714": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2082
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3716": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2082
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3717": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2082
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3718": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2082
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3719": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2068
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "3721": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2082
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3723": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2082
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3724": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2082
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3726": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2082
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3727": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2082
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3728": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2082
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3729": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2082
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3730": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2088
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3731": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3732": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3733": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "3738": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3740": {
      "op": "SHL"
    },
    "3741": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3742": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3743": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2088
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3744": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2088
      ],
      "op": "AND",
      "path": "1"
    },
    "3745": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2088
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3746": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2101
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x23B872DD"
    },
    "3751": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2101
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3752": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEB9"
    },
    "3755": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3756": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2102,
        2112
      ],
      "op": "CALLER",
      "path": "1"
    },
    "3757": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2102,
        2112
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3758": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2122,
        2126
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "3759": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2122,
        2126
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3760": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2129,
        2144
      ],
      "op": "DUP7",
      "path": "1"
    },
    "3761": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2129,
        2144
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3762": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3764": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "ADD",
      "path": "1"
    },
    "3765": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16AE"
    },
    "3768": {
      "fn": "MiniSwap.seedInvest",
      "jump": "i",
      "offset": [
        2059,
        2145
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3769": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3770": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3772": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3774": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3775": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3776": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3777": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "SUB",
      "path": "1"
    },
    "3778": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3779": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3781": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "DUP8",
      "path": "1"
    },
    "3782": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "GAS",
      "path": "1"
    },
    "3783": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "CALL",
      "path": "1"
    },
    "3784": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3785": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3786": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3787": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xED8"
    },
    "3790": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3791": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3792": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3794": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3795": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "3796": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3797": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3799": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3800": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3801": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "POP",
      "path": "1"
    },
    "3802": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "POP",
      "path": "1"
    },
    "3803": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "POP",
      "path": "1"
    },
    "3804": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "POP",
      "path": "1"
    },
    "3805": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3807": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3808": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3809": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "3811": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "NOT",
      "path": "1"
    },
    "3812": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "3814": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3815": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "ADD",
      "path": "1"
    },
    "3816": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "AND",
      "path": "1"
    },
    "3817": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3818": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "ADD",
      "path": "1"
    },
    "3819": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3820": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3822": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3823": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "POP",
      "path": "1"
    },
    "3824": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3825": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "ADD",
      "path": "1"
    },
    "3826": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3827": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEFC"
    },
    "3830": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3831": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3832": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16D2"
    },
    "3835": {
      "fn": "MiniSwap.seedInvest",
      "jump": "i",
      "offset": [
        2059,
        2145
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3836": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2059,
        2145
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3837": {
      "op": "POP"
    },
    "3838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3842": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3844": {
      "op": "SHL"
    },
    "3845": {
      "op": "SUB"
    },
    "3846": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2155,
        2178
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 30
    },
    "3847": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2155,
        2178
      ],
      "op": "AND",
      "path": "1"
    },
    "3848": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2155,
        2178
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3850": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2155,
        2178
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3851": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2155,
        2178
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3852": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2155,
        2178
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3853": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2155,
        2164
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "3855": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2155,
        2178
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3857": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2155,
        2178
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3858": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2155,
        2178
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3859": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2155,
        2178
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3860": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2155,
        2178
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3862": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2155,
        2178
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3863": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2155,
        2178
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3864": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2155,
        2178
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3865": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2155,
        2188
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3866": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2155,
        2188
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3867": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2155,
        2188
      ],
      "op": "ADD",
      "path": "1"
    },
    "3868": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2155,
        2206
      ],
      "op": "DUP8",
      "path": "1"
    },
    "3869": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2155,
        2206
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3870": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2155,
        2206
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3871": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2250,
        2259
      ],
      "op": "CALLVALUE",
      "path": "1",
      "statement": 31
    },
    "3872": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2216,
        2247
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3874": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2216,
        2247
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3875": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2216,
        2247
      ],
      "op": "ADD",
      "path": "1"
    },
    "3876": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2216,
        2259
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3877": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2216,
        2259
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3878": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2216,
        2259
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3879": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2359,
        2369
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 32
    },
    "3880": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2320,
        2370
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3881": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2320,
        2370
      ],
      "op": "DUP8",
      "path": "1"
    },
    "3882": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2320,
        2370
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3883": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2320,
        2358
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "3885": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2320,
        2358
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3886": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2320,
        2358
      ],
      "op": "ADD",
      "path": "1"
    },
    "3887": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2320,
        2370
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3888": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2320,
        2370
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3889": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2320,
        2370
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3890": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2320,
        2370
      ],
      "op": "DUP8",
      "path": "1"
    },
    "3891": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2320,
        2370
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3892": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2373,
        2378
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2710"
    },
    "3895": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2320,
        2378
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3896": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2320,
        2378
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3897": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2320,
        2378
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3898": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2320,
        2378
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3899": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2388,
        2411
      ],
      "op": "SWAP7",
      "path": "1",
      "statement": 33
    },
    "3900": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2388,
        2411
      ],
      "op": "DUP9",
      "path": "1"
    },
    "3901": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2388,
        2411
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3902": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2388,
        2411
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3903": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2388,
        2411
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "3904": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2388,
        2411
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3905": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2388,
        2411
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3906": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2388,
        2423
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3908": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2388,
        2423
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3909": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2388,
        2423
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3910": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2388,
        2423
      ],
      "op": "ADD",
      "path": "1"
    },
    "3911": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2388,
        2431
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3912": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2388,
        2431
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3913": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2388,
        2431
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3914": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2446,
        2517
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 34
    },
    "3915": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2446,
        2517
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3916": {
      "op": "SWAP1"
    },
    "3917": {
      "op": "DUP2"
    },
    "3918": {
      "op": "MSTORE"
    },
    "3919": {
      "op": "SWAP2"
    },
    "3920": {
      "op": "DUP3"
    },
    "3921": {
      "op": "ADD"
    },
    "3922": {
      "op": "DUP7"
    },
    "3923": {
      "op": "SWAP1"
    },
    "3924": {
      "op": "MSTORE"
    },
    "3925": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2373,
        2378
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3926": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2373,
        2378
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3927": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2359,
        2369
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3928": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2359,
        2369
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3929": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2446,
        2517
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x70036A0C8AFF04C45115532A9615C7B3CFFA827060E25DF65BC670EA80D856ED"
    },
    "3962": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2446,
        2517
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3963": {
      "op": "ADD"
    },
    "3964": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2446,
        2517
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3966": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2446,
        2517
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3967": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2446,
        2517
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3968": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2446,
        2517
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3969": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2446,
        2517
      ],
      "op": "SUB",
      "path": "1"
    },
    "3970": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2446,
        2517
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3971": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        2446,
        2517
      ],
      "op": "LOG4",
      "path": "1"
    },
    "3972": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1763,
        2524
      ],
      "op": "POP",
      "path": "1"
    },
    "3973": {
      "fn": "MiniSwap.seedInvest",
      "offset": [
        1763,
        2524
      ],
      "op": "POP",
      "path": "1"
    },
    "3974": {
      "fn": "MiniSwap.seedInvest",
      "jump": "o",
      "offset": [
        1763,
        2524
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3975": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5016,
        5431
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3976": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5105,
        5123
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3978": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5135,
        5146
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3979": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5160,
        5167
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3981": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5160,
        5167
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3982": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5149,
        5157
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3983": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5149,
        5167
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF98"
    },
    "3986": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5149,
        5167
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3987": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5149,
        5167
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3988": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5149,
        5167
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x168C"
    },
    "3991": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "jump": "i",
      "offset": [
        5149,
        5167
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3992": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5149,
        5167
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3997": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3999": {
      "op": "SHL"
    },
    "4000": {
      "op": "SUB"
    },
    "4001": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5196,
        5219
      ],
      "op": "DUP6",
      "path": "1"
    },
    "4002": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5196,
        5219
      ],
      "op": "AND",
      "path": "1"
    },
    "4003": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5177,
        5193
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4005": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5196,
        5219
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4006": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5196,
        5219
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4007": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5196,
        5219
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4008": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5196,
        5205
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "4010": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5196,
        5219
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4012": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5196,
        5219
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4013": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5196,
        5219
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4015": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5196,
        5219
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4016": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5196,
        5219
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4017": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5196,
        5227
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4019": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5196,
        5227
      ],
      "op": "ADD",
      "path": "1"
    },
    "4020": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5196,
        5227
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4021": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5135,
        5167
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4022": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5135,
        5167
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "4023": {
      "op": "POP"
    },
    "4024": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5177,
        5193
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4025": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5196,
        5238
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFC3"
    },
    "4028": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5196,
        5238
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4029": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5230,
        5238
      ],
      "op": "DUP6",
      "path": "1"
    },
    "4030": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5230,
        5238
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4031": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5196,
        5238
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16F4"
    },
    "4034": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "jump": "i",
      "offset": [
        5196,
        5238
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4035": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5196,
        5238
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4040": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4042": {
      "op": "SHL"
    },
    "4043": {
      "op": "SUB"
    },
    "4044": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5302,
        5325
      ],
      "op": "DUP7",
      "path": "1"
    },
    "4045": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5302,
        5325
      ],
      "op": "AND",
      "path": "1"
    },
    "4046": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5248,
        5265
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4048": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5302,
        5325
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4049": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5302,
        5325
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4050": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5302,
        5325
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4051": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5302,
        5311
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "4053": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5302,
        5325
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4055": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5302,
        5325
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4056": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5302,
        5325
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4057": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5302,
        5325
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4058": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5302,
        5325
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4060": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5302,
        5325
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4061": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5302,
        5325
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4062": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5302,
        5335
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4063": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5302,
        5335
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4064": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5302,
        5335
      ],
      "op": "ADD",
      "path": "1"
    },
    "4065": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5302,
        5335
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4066": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5268,
        5299
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4068": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5268,
        5299
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4069": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5268,
        5299
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4070": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5268,
        5299
      ],
      "op": "ADD",
      "path": "1"
    },
    "4071": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5268,
        5299
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4072": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5177,
        5238
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "4073": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5177,
        5238
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "4074": {
      "op": "POP"
    },
    "4075": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5248,
        5265
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4076": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5248,
        5265
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4077": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5268,
        5335
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFF6"
    },
    "4080": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5268,
        5335
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4081": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5302,
        5335
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4082": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5268,
        5335
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x166D"
    },
    "4085": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "jump": "i",
      "offset": [
        5268,
        5335
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4086": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5268,
        5335
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4087": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5248,
        5335
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4088": {
      "op": "POP"
    },
    "4089": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5403,
        5417
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 35,
      "value": "0x1002"
    },
    "4092": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5414,
        5417
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4093": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5403,
        5411
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4094": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5403,
        5417
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x170C"
    },
    "4097": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "jump": "i",
      "offset": [
        5403,
        5417
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4098": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5403,
        5417
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4099": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5390,
        5418
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100C"
    },
    "4102": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5390,
        5418
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4103": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5390,
        5399
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4104": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5390,
        5418
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x168C"
    },
    "4107": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "jump": "i",
      "offset": [
        5390,
        5418
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4108": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5390,
        5418
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4109": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5390,
        5422
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1017"
    },
    "4112": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5390,
        5422
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4113": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5421,
        5422
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4115": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5390,
        5422
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16F4"
    },
    "4118": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "jump": "i",
      "offset": [
        5390,
        5422
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4119": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5390,
        5422
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4124": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4126": {
      "op": "SHL"
    },
    "4127": {
      "op": "SUB"
    },
    "4128": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5353,
        5376
      ],
      "op": "DUP8",
      "path": "1"
    },
    "4129": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5353,
        5376
      ],
      "op": "AND",
      "path": "1"
    },
    "4130": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5353,
        5376
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4132": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5353,
        5376
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4133": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5353,
        5376
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4134": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5353,
        5376
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4135": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5353,
        5362
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "4137": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5353,
        5376
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4139": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5353,
        5376
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4140": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5353,
        5376
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4141": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5353,
        5376
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4142": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5353,
        5376
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4144": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5353,
        5376
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4145": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5353,
        5376
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4146": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5353,
        5376
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4147": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5353,
        5386
      ],
      "op": "ADD",
      "path": "1"
    },
    "4148": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5353,
        5386
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4149": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5353,
        5423
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAFF"
    },
    "4152": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5353,
        5423
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4153": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5353,
        5423
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4154": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "offset": [
        5353,
        5423
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x170C"
    },
    "4157": {
      "fn": "MiniSwap.getEthToTokenQuote",
      "jump": "i",
      "offset": [
        5353,
        5423
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4158": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3553,
        3768
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4163": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4165": {
      "op": "SHL"
    },
    "4166": {
      "op": "SUB"
    },
    "4167": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3729,
        3752
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 36
    },
    "4168": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3729,
        3752
      ],
      "op": "AND",
      "path": "1"
    },
    "4169": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3641,
        3663
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4171": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3729,
        3752
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4172": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3729,
        3752
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4173": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3729,
        3752
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4174": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3729,
        3738
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "4176": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3729,
        3752
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4178": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3729,
        3752
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4179": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3729,
        3752
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4180": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3729,
        3752
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4181": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3729,
        3752
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4183": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3729,
        3752
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4184": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3729,
        3752
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4185": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3729,
        3760
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4187": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3729,
        3760
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4188": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3729,
        3760
      ],
      "op": "ADD",
      "path": "1"
    },
    "4189": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3729,
        3760
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4190": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3683,
        3716
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4191": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3683,
        3716
      ],
      "op": "ADD",
      "path": "1"
    },
    "4192": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3683,
        3716
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4193": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3683,
        3726
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x32C"
    },
    "4196": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3683,
        3726
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4197": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3719,
        3726
      ],
      "op": "DUP5",
      "path": "1"
    },
    "4198": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3719,
        3726
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4199": {
      "fn": "MiniSwap.investQuoteFromEth",
      "offset": [
        3683,
        3726
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x166D"
    },
    "4202": {
      "fn": "MiniSwap.investQuoteFromEth",
      "jump": "i",
      "offset": [
        3683,
        3726
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4203": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7539,
        8061
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4208": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4210": {
      "op": "SHL"
    },
    "4211": {
      "op": "SUB"
    },
    "4212": {
      "offset": [
        1710,
        1726
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4213": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        1710,
        1726
      ],
      "op": "AND",
      "path": "1"
    },
    "4214": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7672,
        7690
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4216": {
      "offset": [
        1710,
        1726
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4217": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        1710,
        1726
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4218": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        1710,
        1726
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4219": {
      "offset": [
        1710,
        1719
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "4221": {
      "offset": [
        1710,
        1726
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4223": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        1710,
        1726
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4224": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        1710,
        1726
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4226": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        1710,
        1726
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4227": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        1710,
        1726
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4228": {
      "offset": [
        1710,
        1734
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4230": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        1710,
        1734
      ],
      "op": "ADD",
      "path": "1"
    },
    "4231": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        1710,
        1734
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4232": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7650,
        7662
      ],
      "op": "DUP5",
      "path": "1"
    },
    "4233": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7650,
        7662
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4234": {
      "offset": [
        1702,
        1739
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1092"
    },
    "4237": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        1702,
        1739
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4238": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        1702,
        1739
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4240": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        1702,
        1739
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4241": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        1702,
        1739
      ],
      "op": "REVERT",
      "path": "1"
    },
    "4242": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        1702,
        1739
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4243": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7701,
        7719
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4245": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7722,
        7764
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x109E"
    },
    "4248": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7740,
        7752
      ],
      "op": "DUP7",
      "path": "1"
    },
    "4249": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7754,
        7763
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "4250": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7722,
        7739
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1385"
    },
    "4253": {
      "fn": "MiniSwap.ethToToken",
      "jump": "i",
      "offset": [
        7722,
        7764
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4254": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7722,
        7764
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4255": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7701,
        7764
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4256": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7701,
        7764
      ],
      "op": "POP",
      "path": "1"
    },
    "4257": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7796,
        7808
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 37
    },
    "4258": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7782,
        7792
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4259": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7782,
        7808
      ],
      "op": "LT",
      "path": "1"
    },
    "4260": {
      "branch": 61,
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7782,
        7808
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4261": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7774,
        7834
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10E8"
    },
    "4264": {
      "branch": 61,
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7774,
        7834
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4265": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7774,
        7834
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4267": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7774,
        7834
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4268": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4272": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4274": {
      "op": "SHL"
    },
    "4275": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7774,
        7834
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4276": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7774,
        7834
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4277": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4279": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7774,
        7834
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4281": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7774,
        7834
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4282": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7774,
        7834
      ],
      "op": "ADD",
      "path": "1"
    },
    "4283": {
      "op": "MSTORE"
    },
    "4284": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "4286": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4288": {
      "op": "DUP3"
    },
    "4289": {
      "op": "ADD"
    },
    "4290": {
      "op": "MSTORE"
    },
    "4291": {
      "op": "PUSH21",
      "value": "0x1D1ADB9CD4185A59080F081B5A5B951ADB9CD3DD5D"
    },
    "4313": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "4315": {
      "op": "SHL"
    },
    "4316": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4318": {
      "op": "DUP3"
    },
    "4319": {
      "op": "ADD"
    },
    "4320": {
      "op": "MSTORE"
    },
    "4321": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4323": {
      "op": "ADD"
    },
    "4324": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7774,
        7834
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x429"
    },
    "4327": {
      "op": "JUMP"
    },
    "4328": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7774,
        7834
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4329": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7849,
        7922
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 38,
      "value": "0x40"
    },
    "4331": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7849,
        7922
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4332": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7849,
        7922
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4333": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7900,
        7909
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "4334": {
      "op": "DUP2"
    },
    "4335": {
      "op": "MSTORE"
    },
    "4336": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4338": {
      "op": "DUP2"
    },
    "4339": {
      "op": "ADD"
    },
    "4340": {
      "op": "DUP4"
    },
    "4341": {
      "op": "SWAP1"
    },
    "4342": {
      "op": "MSTORE"
    },
    "4343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4347": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4349": {
      "op": "SHL"
    },
    "4350": {
      "op": "SUB"
    },
    "4351": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7849,
        7922
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4352": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7849,
        7922
      ],
      "op": "DUP9",
      "path": "1"
    },
    "4353": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7849,
        7922
      ],
      "op": "AND",
      "path": "1"
    },
    "4354": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7849,
        7922
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "4355": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7877,
        7887
      ],
      "op": "CALLER",
      "path": "1"
    },
    "4356": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7877,
        7887
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "4357": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7849,
        7922
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4358": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7849,
        7922
      ],
      "op": "DUP11",
      "path": "1"
    },
    "4359": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7849,
        7922
      ],
      "op": "AND",
      "path": "1"
    },
    "4360": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7849,
        7922
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4361": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7849,
        7922
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xD1508EB33CB2FF0CD96CF67F00AB2C6B7FC5142D97832ADD4B29748B29111024"
    },
    "4394": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7849,
        7922
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4395": {
      "op": "ADD"
    },
    "4396": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7849,
        7922
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4398": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7849,
        7922
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4399": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7849,
        7922
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4400": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7849,
        7922
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4401": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7849,
        7922
      ],
      "op": "SUB",
      "path": "1"
    },
    "4402": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7849,
        7922
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4403": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7849,
        7922
      ],
      "op": "LOG4",
      "path": "1"
    },
    "4404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4408": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4410": {
      "op": "SHL"
    },
    "4411": {
      "op": "SUB"
    },
    "4412": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        7963
      ],
      "op": "DUP7",
      "path": "1",
      "statement": 39
    },
    "4413": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        7963
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4414": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        7963
      ],
      "op": "AND",
      "path": "1"
    },
    "4415": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        7963
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4417": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        7963
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4418": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        7963
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4419": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        7963
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4420": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        7949
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "4422": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        7963
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4424": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        7963
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4425": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        7963
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4427": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        7963
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4428": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        7963
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4429": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        7963
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4430": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        7963
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4431": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        7969
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4432": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4433": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4434": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "4439": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4441": {
      "op": "SHL"
    },
    "4442": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4443": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4444": {
      "op": "DUP8"
    },
    "4445": {
      "op": "DUP4"
    },
    "4446": {
      "op": "AND"
    },
    "4447": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4449": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4450": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "ADD",
      "path": "1"
    },
    "4451": {
      "op": "MSTORE"
    },
    "4452": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4454": {
      "op": "DUP2"
    },
    "4455": {
      "op": "ADD"
    },
    "4456": {
      "op": "DUP5"
    },
    "4457": {
      "op": "SWAP1"
    },
    "4458": {
      "op": "MSTORE"
    },
    "4459": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        7969
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4460": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        7969
      ],
      "op": "AND",
      "path": "1"
    },
    "4461": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        7969
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4462": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        7978
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA9059CBB"
    },
    "4467": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        7978
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4468": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4470": {
      "op": "ADD"
    },
    "4471": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4473": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4475": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4476": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4477": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4478": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "SUB",
      "path": "1"
    },
    "4479": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4480": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4482": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "DUP8",
      "path": "1"
    },
    "4483": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "GAS",
      "path": "1"
    },
    "4484": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "CALL",
      "path": "1"
    },
    "4485": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4486": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4487": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4488": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1195"
    },
    "4491": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4492": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "4493": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4495": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4496": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "4497": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "4498": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4500": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "REVERT",
      "path": "1"
    },
    "4501": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4502": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "POP",
      "path": "1"
    },
    "4503": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "POP",
      "path": "1"
    },
    "4504": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "POP",
      "path": "1"
    },
    "4505": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "POP",
      "path": "1"
    },
    "4506": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4508": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4509": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "4510": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "4512": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "NOT",
      "path": "1"
    },
    "4513": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "4515": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4516": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "ADD",
      "path": "1"
    },
    "4517": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "AND",
      "path": "1"
    },
    "4518": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4519": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "ADD",
      "path": "1"
    },
    "4520": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4521": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4523": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4524": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "POP",
      "path": "1"
    },
    "4525": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4526": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "ADD",
      "path": "1"
    },
    "4527": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4528": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11B9"
    },
    "4531": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4532": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4533": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16D2"
    },
    "4536": {
      "fn": "MiniSwap.ethToToken",
      "jump": "i",
      "offset": [
        7940,
        8001
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4537": {
      "branch": 62,
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7940,
        8001
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4538": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7932,
        8027
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11FD"
    },
    "4541": {
      "branch": 62,
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7932,
        8027
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4542": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7932,
        8027
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4544": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7932,
        8027
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4545": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4549": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4551": {
      "op": "SHL"
    },
    "4552": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7932,
        8027
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4553": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7932,
        8027
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4554": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4556": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7932,
        8027
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4558": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7932,
        8027
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4559": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7932,
        8027
      ],
      "op": "ADD",
      "path": "1"
    },
    "4560": {
      "op": "MSTORE"
    },
    "4561": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "4563": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4565": {
      "op": "DUP3"
    },
    "4566": {
      "op": "ADD"
    },
    "4567": {
      "op": "MSTORE"
    },
    "4568": {
      "op": "PUSH21",
      "value": "0x151ADB8813D555081D1C985B9CD9995C8819985A5B"
    },
    "4590": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "4592": {
      "op": "SHL"
    },
    "4593": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4595": {
      "op": "DUP3"
    },
    "4596": {
      "op": "ADD"
    },
    "4597": {
      "op": "MSTORE"
    },
    "4598": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4600": {
      "op": "ADD"
    },
    "4601": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7932,
        8027
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x429"
    },
    "4604": {
      "op": "JUMP"
    },
    "4605": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7932,
        8027
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4606": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        8044,
        8054
      ],
      "op": "SWAP6",
      "path": "1",
      "statement": 40
    },
    "4607": {
      "fn": "MiniSwap.ethToToken",
      "offset": [
        7539,
        8061
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "4608": {
      "op": "POP"
    },
    "4609": {
      "op": "POP"
    },
    "4610": {
      "op": "POP"
    },
    "4611": {
      "op": "POP"
    },
    "4612": {
      "op": "POP"
    },
    "4613": {
      "fn": "MiniSwap.ethToToken",
      "jump": "o",
      "offset": [
        7539,
        8061
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4614": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6709,
        7533
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4615": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6792,
        6808
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4617": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6819,
        6830
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4618": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6844,
        6851
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4620": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6844,
        6851
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4621": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6833,
        6841
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4622": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6833,
        6851
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1217"
    },
    "4625": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6833,
        6851
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4626": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6833,
        6851
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4627": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6833,
        6851
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x168C"
    },
    "4630": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "jump": "i",
      "offset": [
        6833,
        6851
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4631": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6833,
        6851
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4632": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6819,
        6851
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4633": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6819,
        6851
      ],
      "op": "POP",
      "path": "1"
    },
    "4634": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6898,
        6906
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 41
    },
    "4635": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6861,
        6870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "4637": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6861,
        6884
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4639": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6871,
        6883
      ],
      "op": "DUP7",
      "path": "1"
    },
    "4640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4644": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4646": {
      "op": "SHL"
    },
    "4647": {
      "op": "SUB"
    },
    "4648": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6861,
        6884
      ],
      "op": "AND",
      "path": "1"
    },
    "4649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4653": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4655": {
      "op": "SHL"
    },
    "4656": {
      "op": "SUB"
    },
    "4657": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6861,
        6884
      ],
      "op": "AND",
      "path": "1"
    },
    "4658": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6861,
        6884
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4659": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6861,
        6884
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4660": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6861,
        6884
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4662": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6861,
        6884
      ],
      "op": "ADD",
      "path": "1"
    },
    "4663": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6861,
        6884
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4664": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6861,
        6884
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4665": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6861,
        6884
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4666": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6861,
        6884
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4668": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6861,
        6884
      ],
      "op": "ADD",
      "path": "1"
    },
    "4669": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6861,
        6884
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4671": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6861,
        6884
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4672": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6861,
        6894
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "4674": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6861,
        6894
      ],
      "op": "ADD",
      "path": "1"
    },
    "4675": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6861,
        6894
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4677": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6861,
        6906
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4678": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6861,
        6906
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4679": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6861,
        6906
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4680": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6861,
        6906
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1251"
    },
    "4683": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6861,
        6906
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4684": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6861,
        6906
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4685": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6861,
        6906
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16F4"
    },
    "4688": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "jump": "i",
      "offset": [
        6861,
        6906
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4689": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6861,
        6906
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4690": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6861,
        6906
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4691": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6861,
        6906
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4692": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6861,
        6906
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4693": {
      "op": "POP"
    },
    "4694": {
      "op": "POP"
    },
    "4695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4699": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4701": {
      "op": "SHL"
    },
    "4702": {
      "op": "SUB"
    },
    "4703": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6970,
        6993
      ],
      "op": "DUP5",
      "path": "1"
    },
    "4704": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6970,
        6993
      ],
      "op": "AND",
      "path": "1"
    },
    "4705": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6916,
        6933
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4707": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6970,
        6993
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4708": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6970,
        6993
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4709": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6970,
        6993
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4710": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6970,
        6979
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "4712": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6970,
        6993
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4714": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6970,
        6993
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4715": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6970,
        6993
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4716": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6970,
        6993
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4717": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6970,
        6993
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4719": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6970,
        6993
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4720": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6970,
        6993
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4721": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6970,
        7003
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4722": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6970,
        7003
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4723": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6970,
        7003
      ],
      "op": "ADD",
      "path": "1"
    },
    "4724": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6970,
        7003
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4725": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6936,
        6967
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4727": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6936,
        6967
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4728": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6936,
        6967
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4729": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6936,
        6967
      ],
      "op": "ADD",
      "path": "1"
    },
    "4730": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6936,
        6967
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4731": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6936,
        7003
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1284"
    },
    "4734": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6936,
        7003
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4735": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6970,
        7003
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4736": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6936,
        7003
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x166D"
    },
    "4739": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "jump": "i",
      "offset": [
        6936,
        7003
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4740": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6936,
        7003
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4745": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4747": {
      "op": "SHL"
    },
    "4748": {
      "op": "SUB"
    },
    "4749": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7079,
        7102
      ],
      "op": "DUP7",
      "path": "1"
    },
    "4750": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7079,
        7102
      ],
      "op": "AND",
      "path": "1"
    },
    "4751": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7013,
        7028
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4753": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7079,
        7102
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4754": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7079,
        7102
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4755": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7079,
        7102
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4756": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7079,
        7088
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "4758": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7079,
        7102
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4760": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7079,
        7102
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4761": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7079,
        7102
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4762": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7079,
        7102
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4763": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7079,
        7102
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4765": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7079,
        7102
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4766": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7079,
        7102
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4767": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7079,
        7112
      ],
      "op": "ADD",
      "path": "1"
    },
    "4768": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7079,
        7112
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4769": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6916,
        7003
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4770": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6916,
        7003
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "4771": {
      "op": "POP"
    },
    "4772": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7013,
        7028
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4773": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7079,
        7118
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12AF"
    },
    "4776": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7079,
        7118
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4777": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7115,
        7118
      ],
      "op": "DUP5",
      "path": "1"
    },
    "4778": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7115,
        7118
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4779": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7079,
        7118
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x170C"
    },
    "4782": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "jump": "i",
      "offset": [
        7079,
        7118
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4783": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7079,
        7118
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4784": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7066,
        7119
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12B9"
    },
    "4787": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7066,
        7119
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4788": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7066,
        7075
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4789": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7066,
        7119
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x168C"
    },
    "4792": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "jump": "i",
      "offset": [
        7066,
        7119
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4793": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7066,
        7119
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4794": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7066,
        7123
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12C4"
    },
    "4797": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7066,
        7123
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4798": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7122,
        7123
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4800": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7066,
        7123
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16F4"
    },
    "4803": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "jump": "i",
      "offset": [
        7066,
        7123
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4804": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7066,
        7123
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4809": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4811": {
      "op": "SHL"
    },
    "4812": {
      "op": "SUB"
    },
    "4813": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7031,
        7054
      ],
      "op": "DUP8",
      "path": "1"
    },
    "4814": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7031,
        7054
      ],
      "op": "AND",
      "path": "1"
    },
    "4815": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7031,
        7054
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4817": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7031,
        7054
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4818": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7031,
        7054
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4819": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7031,
        7054
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4820": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7031,
        7040
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "4822": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7031,
        7054
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4824": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7031,
        7054
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4825": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7031,
        7054
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4827": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7031,
        7054
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4828": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7031,
        7054
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4829": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7031,
        7062
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4831": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7031,
        7062
      ],
      "op": "ADD",
      "path": "1"
    },
    "4832": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7031,
        7062
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4833": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7031,
        7124
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12EA"
    },
    "4836": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7031,
        7124
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4837": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7031,
        7124
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4838": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7031,
        7124
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x170C"
    },
    "4841": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "jump": "i",
      "offset": [
        7031,
        7124
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4842": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7031,
        7124
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4847": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4849": {
      "op": "SHL"
    },
    "4850": {
      "op": "SUB"
    },
    "4851": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7355,
        7378
      ],
      "op": "DUP8",
      "path": "1",
      "statement": 42
    },
    "4852": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7355,
        7378
      ],
      "op": "AND",
      "path": "1"
    },
    "4853": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7355,
        7378
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4855": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7355,
        7378
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4856": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7355,
        7378
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4857": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7355,
        7378
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4858": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7355,
        7364
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "4860": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7355,
        7378
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4862": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7355,
        7378
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4863": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7355,
        7378
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4865": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7355,
        7378
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4866": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7355,
        7378
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4867": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7355,
        7386
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4869": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7355,
        7386
      ],
      "op": "ADD",
      "path": "1"
    },
    "4870": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7355,
        7386
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4871": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7013,
        7124
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4872": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7013,
        7124
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4873": {
      "op": "POP"
    },
    "4874": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7344,
        7386
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4875": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7344,
        7386
      ],
      "op": "GT",
      "path": "1"
    },
    "4876": {
      "branch": 63,
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7344,
        7386
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4877": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7336,
        7407
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x134B"
    },
    "4880": {
      "branch": 63,
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7336,
        7407
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4881": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7336,
        7407
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4883": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7336,
        7407
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4884": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4888": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4890": {
      "op": "SHL"
    },
    "4891": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7336,
        7407
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4892": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7336,
        7407
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4893": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4895": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7336,
        7407
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4897": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7336,
        7407
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4898": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7336,
        7407
      ],
      "op": "ADD",
      "path": "1"
    },
    "4899": {
      "op": "MSTORE"
    },
    "4900": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "4902": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4904": {
      "op": "DUP3"
    },
    "4905": {
      "op": "ADD"
    },
    "4906": {
      "op": "MSTORE"
    },
    "4907": {
      "op": "PUSH16",
      "value": "0x98C2C6D6D2DCCE40E0DEDED840CAE8D"
    },
    "4924": {
      "op": "PUSH1",
      "value": "0x83"
    },
    "4926": {
      "op": "SHL"
    },
    "4927": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4929": {
      "op": "DUP3"
    },
    "4930": {
      "op": "ADD"
    },
    "4931": {
      "op": "MSTORE"
    },
    "4932": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4934": {
      "op": "ADD"
    },
    "4935": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7336,
        7407
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x429"
    },
    "4938": {
      "op": "JUMP"
    },
    "4939": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7336,
        7407
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4944": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4946": {
      "op": "SHL"
    },
    "4947": {
      "op": "SUB"
    },
    "4948": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7460,
        7483
      ],
      "op": "DUP7",
      "path": "1",
      "statement": 43
    },
    "4949": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7460,
        7483
      ],
      "op": "AND",
      "path": "1"
    },
    "4950": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7460,
        7483
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4952": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7460,
        7483
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4953": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7460,
        7483
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4954": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7460,
        7483
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4955": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7460,
        7469
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "4957": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7460,
        7483
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4959": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7460,
        7483
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4960": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7460,
        7483
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4962": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7460,
        7483
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4963": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7460,
        7483
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4964": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7460,
        7491
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4966": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7460,
        7491
      ],
      "op": "ADD",
      "path": "1"
    },
    "4967": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7460,
        7502
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4968": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7460,
        7502
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4969": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7495,
        7502
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4970": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7495,
        7502
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "4971": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7460,
        7483
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4972": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7460,
        7502
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1376"
    },
    "4975": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7460,
        7502
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4976": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7495,
        7502
      ],
      "op": "DUP5",
      "path": "1"
    },
    "4977": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7495,
        7502
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4978": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7460,
        7502
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x170C"
    },
    "4981": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "jump": "i",
      "offset": [
        7460,
        7502
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4982": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7460,
        7502
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4983": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7460,
        7502
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4984": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7460,
        7502
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4985": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7460,
        7502
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4986": {
      "op": "POP"
    },
    "4987": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7519,
        7526
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 44
    },
    "4988": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        7519,
        7526
      ],
      "op": "SWAP7",
      "path": "1"
    },
    "4989": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "offset": [
        6709,
        7533
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "4990": {
      "op": "POP"
    },
    "4991": {
      "op": "POP"
    },
    "4992": {
      "op": "POP"
    },
    "4993": {
      "op": "POP"
    },
    "4994": {
      "op": "POP"
    },
    "4995": {
      "op": "POP"
    },
    "4996": {
      "fn": "MiniSwap.tokenToEthPrivate",
      "jump": "o",
      "offset": [
        6709,
        7533
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4997": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        5866,
        6703
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4998": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        5946,
        5964
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5000": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        5975,
        5986
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5001": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        5997,
        6004
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5003": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        5997,
        6004
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5004": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        5989,
        5994
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5005": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        5989,
        6004
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1396"
    },
    "5008": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        5989,
        6004
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5009": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        5989,
        6004
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5010": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        5989,
        6004
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x168C"
    },
    "5013": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "jump": "i",
      "offset": [
        5989,
        6004
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5014": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        5989,
        6004
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5019": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5021": {
      "op": "SHL"
    },
    "5022": {
      "op": "SUB"
    },
    "5023": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6014,
        6037
      ],
      "op": "DUP6",
      "path": "1",
      "statement": 45
    },
    "5024": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6014,
        6037
      ],
      "op": "AND",
      "path": "1"
    },
    "5025": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6014,
        6037
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5027": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6014,
        6037
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5028": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6014,
        6037
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5029": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6014,
        6037
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5030": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6014,
        6023
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "5032": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6014,
        6037
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5034": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6014,
        6037
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5035": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6014,
        6037
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5037": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6014,
        6037
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5038": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6014,
        6037
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5039": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6014,
        6045
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "5041": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6014,
        6045
      ],
      "op": "ADD",
      "path": "1"
    },
    "5042": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6014,
        6054
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5043": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6014,
        6054
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5044": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        5975,
        6004
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "5045": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        5975,
        6004
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "5046": {
      "op": "POP"
    },
    "5047": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6049,
        6054
      ],
      "op": "DUP6",
      "path": "1"
    },
    "5048": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6049,
        6054
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "5049": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6014,
        6045
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5050": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6014,
        6045
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5051": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6014,
        6037
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5052": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6014,
        6054
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13C6"
    },
    "5055": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6014,
        6054
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5056": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6049,
        6054
      ],
      "op": "DUP5",
      "path": "1"
    },
    "5057": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6049,
        6054
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5058": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6014,
        6054
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16F4"
    },
    "5061": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "jump": "i",
      "offset": [
        6014,
        6054
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5062": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6014,
        6054
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5063": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6014,
        6054
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5064": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6014,
        6054
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5065": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6014,
        6054
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5066": {
      "op": "POP"
    },
    "5067": {
      "op": "POP"
    },
    "5068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5072": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5074": {
      "op": "SHL"
    },
    "5075": {
      "op": "SUB"
    },
    "5076": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6118,
        6141
      ],
      "op": "DUP5",
      "path": "1"
    },
    "5077": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6118,
        6141
      ],
      "op": "AND",
      "path": "1"
    },
    "5078": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6064,
        6081
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5080": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6118,
        6141
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5081": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6118,
        6141
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5082": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6118,
        6141
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5083": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6118,
        6127
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "5085": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6118,
        6141
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5087": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6118,
        6141
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5088": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6118,
        6141
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5089": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6118,
        6141
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5090": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6118,
        6141
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5092": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6118,
        6141
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5093": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6118,
        6141
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5094": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6118,
        6151
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5095": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6118,
        6151
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5096": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6118,
        6151
      ],
      "op": "ADD",
      "path": "1"
    },
    "5097": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6118,
        6151
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5098": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6084,
        6115
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "5100": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6084,
        6115
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5101": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6084,
        6115
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5102": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6084,
        6115
      ],
      "op": "ADD",
      "path": "1"
    },
    "5103": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6084,
        6115
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5104": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6084,
        6151
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13F9"
    },
    "5107": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6084,
        6151
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5108": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6118,
        6151
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5109": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6084,
        6151
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x166D"
    },
    "5112": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "jump": "i",
      "offset": [
        6084,
        6151
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5113": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6084,
        6151
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5118": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5120": {
      "op": "SHL"
    },
    "5121": {
      "op": "SUB"
    },
    "5122": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6232,
        6255
      ],
      "op": "DUP7",
      "path": "1"
    },
    "5123": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6232,
        6255
      ],
      "op": "AND",
      "path": "1"
    },
    "5124": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6161,
        6179
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5126": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6232,
        6255
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5127": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6232,
        6255
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5128": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6232,
        6255
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5129": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6232,
        6241
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "5131": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6232,
        6255
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5133": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6232,
        6255
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5134": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6232,
        6255
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5136": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6232,
        6255
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5137": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6232,
        6255
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5138": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6232,
        6263
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "5140": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6232,
        6263
      ],
      "op": "ADD",
      "path": "1"
    },
    "5141": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6232,
        6263
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5142": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6064,
        6151
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5143": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6064,
        6151
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "5144": {
      "op": "POP"
    },
    "5145": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6161,
        6179
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5146": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6232,
        6269
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1424"
    },
    "5149": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6232,
        6269
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5150": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6266,
        6269
      ],
      "op": "DUP5",
      "path": "1"
    },
    "5151": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6266,
        6269
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5152": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6232,
        6269
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x170C"
    },
    "5155": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "jump": "i",
      "offset": [
        6232,
        6269
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5156": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6232,
        6269
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5157": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6219,
        6270
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x142E"
    },
    "5160": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6219,
        6270
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5161": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6219,
        6228
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5162": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6219,
        6270
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x168C"
    },
    "5165": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "jump": "i",
      "offset": [
        6219,
        6270
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5166": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6219,
        6270
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5167": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6219,
        6274
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1439"
    },
    "5170": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6219,
        6274
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5171": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6273,
        6274
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "5173": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6219,
        6274
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16F4"
    },
    "5176": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "jump": "i",
      "offset": [
        6219,
        6274
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5177": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6219,
        6274
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5182": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5184": {
      "op": "SHL"
    },
    "5185": {
      "op": "SUB"
    },
    "5186": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6182,
        6205
      ],
      "op": "DUP8",
      "path": "1"
    },
    "5187": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6182,
        6205
      ],
      "op": "AND",
      "path": "1"
    },
    "5188": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6182,
        6205
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5190": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6182,
        6205
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5191": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6182,
        6205
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5192": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6182,
        6205
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5193": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6182,
        6191
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "5195": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6182,
        6205
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5197": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6182,
        6205
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5198": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6182,
        6205
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5199": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6182,
        6205
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5200": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6182,
        6205
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5202": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6182,
        6205
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5203": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6182,
        6205
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5204": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6182,
        6205
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5205": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6182,
        6215
      ],
      "op": "ADD",
      "path": "1"
    },
    "5206": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6182,
        6215
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5207": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6182,
        6275
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1460"
    },
    "5210": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6182,
        6275
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5211": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6182,
        6275
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5212": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6182,
        6275
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x170C"
    },
    "5215": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "jump": "i",
      "offset": [
        6182,
        6275
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5216": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6182,
        6275
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5221": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5223": {
      "op": "SHL"
    },
    "5224": {
      "op": "SUB"
    },
    "5225": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6509,
        6532
      ],
      "op": "DUP8",
      "path": "1",
      "statement": 46
    },
    "5226": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6509,
        6532
      ],
      "op": "AND",
      "path": "1"
    },
    "5227": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6509,
        6532
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5229": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6509,
        6532
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5230": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6509,
        6532
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5231": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6509,
        6532
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5232": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6509,
        6518
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "5234": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6509,
        6532
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5236": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6509,
        6532
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5237": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6509,
        6532
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5238": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6509,
        6532
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5239": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6509,
        6532
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5241": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6509,
        6532
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5242": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6509,
        6532
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5243": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6509,
        6532
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5244": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6509,
        6542
      ],
      "op": "ADD",
      "path": "1"
    },
    "5245": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6509,
        6542
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5246": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6161,
        6275
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5247": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6161,
        6275
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5248": {
      "op": "POP"
    },
    "5249": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6495,
        6542
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5250": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6495,
        6542
      ],
      "op": "GT",
      "path": "1"
    },
    "5251": {
      "branch": 64,
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6495,
        6542
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5252": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6487,
        6566
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14C5"
    },
    "5255": {
      "branch": 64,
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6487,
        6566
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5256": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6487,
        6566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5258": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6487,
        6566
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5259": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5263": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5265": {
      "op": "SHL"
    },
    "5266": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6487,
        6566
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5267": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6487,
        6566
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5268": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5270": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6487,
        6566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5272": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6487,
        6566
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5273": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6487,
        6566
      ],
      "op": "ADD",
      "path": "1"
    },
    "5274": {
      "op": "MSTORE"
    },
    "5275": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "5277": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5279": {
      "op": "DUP3"
    },
    "5280": {
      "op": "ADD"
    },
    "5281": {
      "op": "MSTORE"
    },
    "5282": {
      "op": "PUSH19",
      "value": "0x4C61636B696E6720706F6F6C20746F6B656E73"
    },
    "5302": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "5304": {
      "op": "SHL"
    },
    "5305": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5307": {
      "op": "DUP3"
    },
    "5308": {
      "op": "ADD"
    },
    "5309": {
      "op": "MSTORE"
    },
    "5310": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5312": {
      "op": "ADD"
    },
    "5313": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6487,
        6566
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x429"
    },
    "5316": {
      "op": "JUMP"
    },
    "5317": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6487,
        6566
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5322": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5324": {
      "op": "SHL"
    },
    "5325": {
      "op": "SUB"
    },
    "5326": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6622,
        6645
      ],
      "op": "DUP7",
      "path": "1",
      "statement": 47
    },
    "5327": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6622,
        6645
      ],
      "op": "AND",
      "path": "1"
    },
    "5328": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6622,
        6645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5330": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6622,
        6645
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5331": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6622,
        6645
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5332": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6622,
        6645
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5333": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6622,
        6631
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "5335": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6622,
        6645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5337": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6622,
        6645
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5338": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6622,
        6645
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5339": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6622,
        6645
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5340": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6622,
        6645
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5342": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6622,
        6645
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5343": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6622,
        6645
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5344": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6622,
        6655
      ],
      "op": "ADD",
      "path": "1"
    },
    "5345": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6622,
        6669
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5346": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6622,
        6669
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5347": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6659,
        6669
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5348": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6659,
        6669
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "5349": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6622,
        6645
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5350": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6622,
        6669
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1376"
    },
    "5353": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6622,
        6669
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5354": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6659,
        6669
      ],
      "op": "DUP5",
      "path": "1"
    },
    "5355": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6659,
        6669
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5356": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "offset": [
        6622,
        6669
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x170C"
    },
    "5359": {
      "fn": "MiniSwap.ethToTokenPrivate",
      "jump": "i",
      "offset": [
        6622,
        6669
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5360": {
      "op": "JUMPDEST"
    },
    "5361": {
      "op": "DUP1"
    },
    "5362": {
      "op": "CALLDATALOAD"
    },
    "5363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5367": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5369": {
      "op": "SHL"
    },
    "5370": {
      "op": "SUB"
    },
    "5371": {
      "op": "DUP2"
    },
    "5372": {
      "op": "AND"
    },
    "5373": {
      "op": "DUP2"
    },
    "5374": {
      "op": "EQ"
    },
    "5375": {
      "op": "PUSH2",
      "value": "0x1507"
    },
    "5378": {
      "op": "JUMPI"
    },
    "5379": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5381": {
      "op": "DUP1"
    },
    "5382": {
      "op": "REVERT"
    },
    "5383": {
      "op": "JUMPDEST"
    },
    "5384": {
      "op": "SWAP2"
    },
    "5385": {
      "op": "SWAP1"
    },
    "5386": {
      "op": "POP"
    },
    "5387": {
      "jump": "o",
      "op": "JUMP"
    },
    "5388": {
      "op": "JUMPDEST"
    },
    "5389": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5391": {
      "op": "DUP1"
    },
    "5392": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5394": {
      "op": "DUP4"
    },
    "5395": {
      "op": "DUP6"
    },
    "5396": {
      "op": "SUB"
    },
    "5397": {
      "op": "SLT"
    },
    "5398": {
      "op": "ISZERO"
    },
    "5399": {
      "op": "PUSH2",
      "value": "0x151F"
    },
    "5402": {
      "op": "JUMPI"
    },
    "5403": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5405": {
      "op": "DUP1"
    },
    "5406": {
      "op": "REVERT"
    },
    "5407": {
      "op": "JUMPDEST"
    },
    "5408": {
      "op": "PUSH2",
      "value": "0x1528"
    },
    "5411": {
      "op": "DUP4"
    },
    "5412": {
      "op": "PUSH2",
      "value": "0x14F0"
    },
    "5415": {
      "jump": "i",
      "op": "JUMP"
    },
    "5416": {
      "op": "JUMPDEST"
    },
    "5417": {
      "op": "SWAP2"
    },
    "5418": {
      "op": "POP"
    },
    "5419": {
      "op": "PUSH2",
      "value": "0x1536"
    },
    "5422": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5424": {
      "op": "DUP5"
    },
    "5425": {
      "op": "ADD"
    },
    "5426": {
      "op": "PUSH2",
      "value": "0x14F0"
    },
    "5429": {
      "jump": "i",
      "op": "JUMP"
    },
    "5430": {
      "op": "JUMPDEST"
    },
    "5431": {
      "op": "SWAP1"
    },
    "5432": {
      "op": "POP"
    },
    "5433": {
      "op": "SWAP3"
    },
    "5434": {
      "op": "POP"
    },
    "5435": {
      "op": "SWAP3"
    },
    "5436": {
      "op": "SWAP1"
    },
    "5437": {
      "op": "POP"
    },
    "5438": {
      "jump": "o",
      "op": "JUMP"
    },
    "5439": {
      "op": "JUMPDEST"
    },
    "5440": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5442": {
      "op": "DUP1"
    },
    "5443": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5445": {
      "op": "DUP4"
    },
    "5446": {
      "op": "DUP6"
    },
    "5447": {
      "op": "SUB"
    },
    "5448": {
      "op": "SLT"
    },
    "5449": {
      "op": "ISZERO"
    },
    "5450": {
      "op": "PUSH2",
      "value": "0x1552"
    },
    "5453": {
      "op": "JUMPI"
    },
    "5454": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5456": {
      "op": "DUP1"
    },
    "5457": {
      "op": "REVERT"
    },
    "5458": {
      "op": "JUMPDEST"
    },
    "5459": {
      "op": "PUSH2",
      "value": "0x155B"
    },
    "5462": {
      "op": "DUP4"
    },
    "5463": {
      "op": "PUSH2",
      "value": "0x14F0"
    },
    "5466": {
      "jump": "i",
      "op": "JUMP"
    },
    "5467": {
      "op": "JUMPDEST"
    },
    "5468": {
      "op": "SWAP5"
    },
    "5469": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5471": {
      "op": "SWAP4"
    },
    "5472": {
      "op": "SWAP1"
    },
    "5473": {
      "op": "SWAP4"
    },
    "5474": {
      "op": "ADD"
    },
    "5475": {
      "op": "CALLDATALOAD"
    },
    "5476": {
      "op": "SWAP4"
    },
    "5477": {
      "op": "POP"
    },
    "5478": {
      "op": "POP"
    },
    "5479": {
      "op": "POP"
    },
    "5480": {
      "jump": "o",
      "op": "JUMP"
    },
    "5481": {
      "op": "JUMPDEST"
    },
    "5482": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5484": {
      "op": "DUP1"
    },
    "5485": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5487": {
      "op": "DUP1"
    },
    "5488": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5490": {
      "op": "DUP6"
    },
    "5491": {
      "op": "DUP8"
    },
    "5492": {
      "op": "SUB"
    },
    "5493": {
      "op": "SLT"
    },
    "5494": {
      "op": "ISZERO"
    },
    "5495": {
      "op": "PUSH2",
      "value": "0x157F"
    },
    "5498": {
      "op": "JUMPI"
    },
    "5499": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5501": {
      "op": "DUP1"
    },
    "5502": {
      "op": "REVERT"
    },
    "5503": {
      "op": "JUMPDEST"
    },
    "5504": {
      "op": "PUSH2",
      "value": "0x1588"
    },
    "5507": {
      "op": "DUP6"
    },
    "5508": {
      "op": "PUSH2",
      "value": "0x14F0"
    },
    "5511": {
      "jump": "i",
      "op": "JUMP"
    },
    "5512": {
      "op": "JUMPDEST"
    },
    "5513": {
      "op": "SWAP4"
    },
    "5514": {
      "op": "POP"
    },
    "5515": {
      "op": "PUSH2",
      "value": "0x1596"
    },
    "5518": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5520": {
      "op": "DUP7"
    },
    "5521": {
      "op": "ADD"
    },
    "5522": {
      "op": "PUSH2",
      "value": "0x14F0"
    },
    "5525": {
      "jump": "i",
      "op": "JUMP"
    },
    "5526": {
      "op": "JUMPDEST"
    },
    "5527": {
      "op": "SWAP4"
    },
    "5528": {
      "op": "SWAP7"
    },
    "5529": {
      "op": "SWAP4"
    },
    "5530": {
      "op": "SWAP6"
    },
    "5531": {
      "op": "POP"
    },
    "5532": {
      "op": "POP"
    },
    "5533": {
      "op": "POP"
    },
    "5534": {
      "op": "POP"
    },
    "5535": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5537": {
      "op": "DUP3"
    },
    "5538": {
      "op": "ADD"
    },
    "5539": {
      "op": "CALLDATALOAD"
    },
    "5540": {
      "op": "SWAP2"
    },
    "5541": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5543": {
      "op": "ADD"
    },
    "5544": {
      "op": "CALLDATALOAD"
    },
    "5545": {
      "op": "SWAP1"
    },
    "5546": {
      "jump": "o",
      "op": "JUMP"
    },
    "5547": {
      "op": "JUMPDEST"
    },
    "5548": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5550": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5552": {
      "op": "DUP3"
    },
    "5553": {
      "op": "DUP5"
    },
    "5554": {
      "op": "SUB"
    },
    "5555": {
      "op": "SLT"
    },
    "5556": {
      "op": "ISZERO"
    },
    "5557": {
      "op": "PUSH2",
      "value": "0x15BD"
    },
    "5560": {
      "op": "JUMPI"
    },
    "5561": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5563": {
      "op": "DUP1"
    },
    "5564": {
      "op": "REVERT"
    },
    "5565": {
      "op": "JUMPDEST"
    },
    "5566": {
      "op": "PUSH2",
      "value": "0x336"
    },
    "5569": {
      "op": "DUP3"
    },
    "5570": {
      "op": "PUSH2",
      "value": "0x14F0"
    },
    "5573": {
      "jump": "i",
      "op": "JUMP"
    },
    "5574": {
      "op": "JUMPDEST"
    },
    "5575": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5577": {
      "op": "DUP1"
    },
    "5578": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5580": {
      "op": "DUP1"
    },
    "5581": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5583": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5585": {
      "op": "DUP7"
    },
    "5586": {
      "op": "DUP9"
    },
    "5587": {
      "op": "SUB"
    },
    "5588": {
      "op": "SLT"
    },
    "5589": {
      "op": "ISZERO"
    },
    "5590": {
      "op": "PUSH2",
      "value": "0x15DE"
    },
    "5593": {
      "op": "JUMPI"
    },
    "5594": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5596": {
      "op": "DUP1"
    },
    "5597": {
      "op": "REVERT"
    },
    "5598": {
      "op": "JUMPDEST"
    },
    "5599": {
      "op": "PUSH2",
      "value": "0x15E7"
    },
    "5602": {
      "op": "DUP7"
    },
    "5603": {
      "op": "PUSH2",
      "value": "0x14F0"
    },
    "5606": {
      "jump": "i",
      "op": "JUMP"
    },
    "5607": {
      "op": "JUMPDEST"
    },
    "5608": {
      "op": "SWAP5"
    },
    "5609": {
      "op": "POP"
    },
    "5610": {
      "op": "PUSH2",
      "value": "0x15F5"
    },
    "5613": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5615": {
      "op": "DUP8"
    },
    "5616": {
      "op": "ADD"
    },
    "5617": {
      "op": "PUSH2",
      "value": "0x14F0"
    },
    "5620": {
      "jump": "i",
      "op": "JUMP"
    },
    "5621": {
      "op": "JUMPDEST"
    },
    "5622": {
      "op": "SWAP4"
    },
    "5623": {
      "op": "POP"
    },
    "5624": {
      "op": "PUSH2",
      "value": "0x1603"
    },
    "5627": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5629": {
      "op": "DUP8"
    },
    "5630": {
      "op": "ADD"
    },
    "5631": {
      "op": "PUSH2",
      "value": "0x14F0"
    },
    "5634": {
      "jump": "i",
      "op": "JUMP"
    },
    "5635": {
      "op": "JUMPDEST"
    },
    "5636": {
      "op": "SWAP5"
    },
    "5637": {
      "op": "SWAP8"
    },
    "5638": {
      "op": "SWAP4"
    },
    "5639": {
      "op": "SWAP7"
    },
    "5640": {
      "op": "POP"
    },
    "5641": {
      "op": "SWAP4"
    },
    "5642": {
      "op": "SWAP5"
    },
    "5643": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5645": {
      "op": "DUP2"
    },
    "5646": {
      "op": "ADD"
    },
    "5647": {
      "op": "CALLDATALOAD"
    },
    "5648": {
      "op": "SWAP5"
    },
    "5649": {
      "op": "POP"
    },
    "5650": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5652": {
      "op": "ADD"
    },
    "5653": {
      "op": "CALLDATALOAD"
    },
    "5654": {
      "op": "SWAP3"
    },
    "5655": {
      "op": "SWAP2"
    },
    "5656": {
      "op": "POP"
    },
    "5657": {
      "op": "POP"
    },
    "5658": {
      "jump": "o",
      "op": "JUMP"
    },
    "5659": {
      "op": "JUMPDEST"
    },
    "5660": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5662": {
      "op": "DUP1"
    },
    "5663": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5665": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5667": {
      "op": "DUP5"
    },
    "5668": {
      "op": "DUP7"
    },
    "5669": {
      "op": "SUB"
    },
    "5670": {
      "op": "SLT"
    },
    "5671": {
      "op": "ISZERO"
    },
    "5672": {
      "op": "PUSH2",
      "value": "0x1630"
    },
    "5675": {
      "op": "JUMPI"
    },
    "5676": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5678": {
      "op": "DUP1"
    },
    "5679": {
      "op": "REVERT"
    },
    "5680": {
      "op": "JUMPDEST"
    },
    "5681": {
      "op": "PUSH2",
      "value": "0x1639"
    },
    "5684": {
      "op": "DUP5"
    },
    "5685": {
      "op": "PUSH2",
      "value": "0x14F0"
    },
    "5688": {
      "jump": "i",
      "op": "JUMP"
    },
    "5689": {
      "op": "JUMPDEST"
    },
    "5690": {
      "op": "SWAP3"
    },
    "5691": {
      "op": "POP"
    },
    "5692": {
      "op": "PUSH2",
      "value": "0x1647"
    },
    "5695": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5697": {
      "op": "DUP6"
    },
    "5698": {
      "op": "ADD"
    },
    "5699": {
      "op": "PUSH2",
      "value": "0x14F0"
    },
    "5702": {
      "jump": "i",
      "op": "JUMP"
    },
    "5703": {
      "op": "JUMPDEST"
    },
    "5704": {
      "op": "SWAP2"
    },
    "5705": {
      "op": "POP"
    },
    "5706": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5708": {
      "op": "DUP5"
    },
    "5709": {
      "op": "ADD"
    },
    "5710": {
      "op": "CALLDATALOAD"
    },
    "5711": {
      "op": "SWAP1"
    },
    "5712": {
      "op": "POP"
    },
    "5713": {
      "op": "SWAP3"
    },
    "5714": {
      "op": "POP"
    },
    "5715": {
      "op": "SWAP3"
    },
    "5716": {
      "op": "POP"
    },
    "5717": {
      "op": "SWAP3"
    },
    "5718": {
      "jump": "o",
      "op": "JUMP"
    },
    "5719": {
      "op": "JUMPDEST"
    },
    "5720": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5725": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5727": {
      "op": "SHL"
    },
    "5728": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5730": {
      "op": "MSTORE"
    },
    "5731": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5733": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5735": {
      "op": "MSTORE"
    },
    "5736": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5738": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5740": {
      "op": "REVERT"
    },
    "5741": {
      "op": "JUMPDEST"
    },
    "5742": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5744": {
      "op": "DUP2"
    },
    "5745": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5747": {
      "op": "NOT"
    },
    "5748": {
      "op": "DIV"
    },
    "5749": {
      "op": "DUP4"
    },
    "5750": {
      "op": "GT"
    },
    "5751": {
      "op": "DUP3"
    },
    "5752": {
      "op": "ISZERO"
    },
    "5753": {
      "op": "ISZERO"
    },
    "5754": {
      "op": "AND"
    },
    "5755": {
      "op": "ISZERO"
    },
    "5756": {
      "op": "PUSH2",
      "value": "0x1687"
    },
    "5759": {
      "op": "JUMPI"
    },
    "5760": {
      "op": "PUSH2",
      "value": "0x1687"
    },
    "5763": {
      "op": "PUSH2",
      "value": "0x1657"
    },
    "5766": {
      "jump": "i",
      "op": "JUMP"
    },
    "5767": {
      "op": "JUMPDEST"
    },
    "5768": {
      "op": "POP"
    },
    "5769": {
      "op": "MUL"
    },
    "5770": {
      "op": "SWAP1"
    },
    "5771": {
      "jump": "o",
      "op": "JUMP"
    },
    "5772": {
      "op": "JUMPDEST"
    },
    "5773": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5775": {
      "op": "DUP3"
    },
    "5776": {
      "op": "PUSH2",
      "value": "0x16A9"
    },
    "5779": {
      "op": "JUMPI"
    },
    "5780": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5785": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5787": {
      "op": "SHL"
    },
    "5788": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5790": {
      "op": "MSTORE"
    },
    "5791": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5793": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5795": {
      "op": "MSTORE"
    },
    "5796": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5798": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5800": {
      "op": "REVERT"
    },
    "5801": {
      "op": "JUMPDEST"
    },
    "5802": {
      "op": "POP"
    },
    "5803": {
      "op": "DIV"
    },
    "5804": {
      "op": "SWAP1"
    },
    "5805": {
      "jump": "o",
      "op": "JUMP"
    },
    "5806": {
      "op": "JUMPDEST"
    },
    "5807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5811": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5813": {
      "op": "SHL"
    },
    "5814": {
      "op": "SUB"
    },
    "5815": {
      "op": "SWAP4"
    },
    "5816": {
      "op": "DUP5"
    },
    "5817": {
      "op": "AND"
    },
    "5818": {
      "op": "DUP2"
    },
    "5819": {
      "op": "MSTORE"
    },
    "5820": {
      "op": "SWAP2"
    },
    "5821": {
      "op": "SWAP1"
    },
    "5822": {
      "op": "SWAP3"
    },
    "5823": {
      "op": "AND"
    },
    "5824": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5826": {
      "op": "DUP3"
    },
    "5827": {
      "op": "ADD"
    },
    "5828": {
      "op": "MSTORE"
    },
    "5829": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5831": {
      "op": "DUP2"
    },
    "5832": {
      "op": "ADD"
    },
    "5833": {
      "op": "SWAP2"
    },
    "5834": {
      "op": "SWAP1"
    },
    "5835": {
      "op": "SWAP2"
    },
    "5836": {
      "op": "MSTORE"
    },
    "5837": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5839": {
      "op": "ADD"
    },
    "5840": {
      "op": "SWAP1"
    },
    "5841": {
      "jump": "o",
      "op": "JUMP"
    },
    "5842": {
      "op": "JUMPDEST"
    },
    "5843": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5845": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5847": {
      "op": "DUP3"
    },
    "5848": {
      "op": "DUP5"
    },
    "5849": {
      "op": "SUB"
    },
    "5850": {
      "op": "SLT"
    },
    "5851": {
      "op": "ISZERO"
    },
    "5852": {
      "op": "PUSH2",
      "value": "0x16E4"
    },
    "5855": {
      "op": "JUMPI"
    },
    "5856": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5858": {
      "op": "DUP1"
    },
    "5859": {
      "op": "REVERT"
    },
    "5860": {
      "op": "JUMPDEST"
    },
    "5861": {
      "op": "DUP2"
    },
    "5862": {
      "op": "MLOAD"
    },
    "5863": {
      "op": "DUP1"
    },
    "5864": {
      "op": "ISZERO"
    },
    "5865": {
      "op": "ISZERO"
    },
    "5866": {
      "op": "DUP2"
    },
    "5867": {
      "op": "EQ"
    },
    "5868": {
      "op": "PUSH2",
      "value": "0x336"
    },
    "5871": {
      "op": "JUMPI"
    },
    "5872": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5874": {
      "op": "DUP1"
    },
    "5875": {
      "op": "REVERT"
    },
    "5876": {
      "op": "JUMPDEST"
    },
    "5877": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5879": {
      "op": "DUP3"
    },
    "5880": {
      "op": "NOT"
    },
    "5881": {
      "op": "DUP3"
    },
    "5882": {
      "op": "GT"
    },
    "5883": {
      "op": "ISZERO"
    },
    "5884": {
      "op": "PUSH2",
      "value": "0x1707"
    },
    "5887": {
      "op": "JUMPI"
    },
    "5888": {
      "op": "PUSH2",
      "value": "0x1707"
    },
    "5891": {
      "op": "PUSH2",
      "value": "0x1657"
    },
    "5894": {
      "jump": "i",
      "op": "JUMP"
    },
    "5895": {
      "op": "JUMPDEST"
    },
    "5896": {
      "op": "POP"
    },
    "5897": {
      "op": "ADD"
    },
    "5898": {
      "op": "SWAP1"
    },
    "5899": {
      "jump": "o",
      "op": "JUMP"
    },
    "5900": {
      "op": "JUMPDEST"
    },
    "5901": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5903": {
      "op": "DUP3"
    },
    "5904": {
      "op": "DUP3"
    },
    "5905": {
      "op": "LT"
    },
    "5906": {
      "op": "ISZERO"
    },
    "5907": {
      "op": "PUSH2",
      "value": "0x171E"
    },
    "5910": {
      "op": "JUMPI"
    },
    "5911": {
      "op": "PUSH2",
      "value": "0x171E"
    },
    "5914": {
      "op": "PUSH2",
      "value": "0x1657"
    },
    "5917": {
      "jump": "i",
      "op": "JUMP"
    },
    "5918": {
      "op": "JUMPDEST"
    },
    "5919": {
      "op": "POP"
    },
    "5920": {
      "op": "SUB"
    },
    "5921": {
      "op": "SWAP1"
    },
    "5922": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "bcb80be53c3e69f2ff88d27ae319b3bb9072fbf0",
  "source": "// contracts/MiniSwap.sol\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n// The goal of this contract is to create a multi-token exchange that allows pools to be made without creating other contracts.\n// Heavily bassed off of AstroSwapExchange\n\n\ncontract MiniSwap {\n    uint256 public feeRate;\n    uint256 public exchangeCount;\n\n    struct Exchange {\n        IERC20 token;\n        uint256 ethPool;\n        uint256 tokenPool;\n        // We are not storing the invariant because it dosent need to be stored, can just be calculated on the spot\n        mapping (address => uint256) investorShares;\n        uint256 totalShares;\n    } \n\n    mapping (address => Exchange) public exchanges; // Mapping of token addresses to exchanges\n    \n    event TokenPurchase(address indexed exchange, address indexed user, address indexed recipient, uint256 ethIn, uint256 tokensOut);\n    event EthPurchase(address indexed exchange, address indexed user, address indexed recipient, uint256 tokensIn, uint256 ethOut);\n    event TokenToToken(address indexed exchange, address indexed user, address recipient, address indexed tokenExchangeAddress, uint256 tokensIn, uint256 ethTransfer); // Recipeint is not indexed here due to the 3 index limit\n    event Investment(address indexed exchange, address indexed user, uint256 indexed sharesPurchased, uint256 ethInvested, uint256 tokensInvested);\n    event Divestment(address indexed exchange, address indexed user, uint256 indexed sharesBurned, uint256 ethDivested, uint256 tokensDivested);\n    \n    constructor(uint256 _fee) {\n        feeRate = _fee;\n    }\n\n    modifier hasLiquidity(address token) {\n        require(exchanges[token].ethPool > 0);\n        _;\n    }\n\n    function seedInvest(address tokenAddress, uint256 tokenInvestment) public payable {\n        require (exchanges[tokenAddress].totalShares == 0, \"Liquidity pool is already seeded, use invest() instead\");\n        require (tokenInvestment > 0 && msg.value > 0, \"Must invest ETH and tokens\");\n        exchanges[tokenAddress].token.transferFrom(msg.sender, address(this), tokenInvestment);\n        exchanges[tokenAddress].tokenPool = tokenInvestment;\n        exchanges[tokenAddress].ethPool = msg.value;\n        // Give the starting investor 10000 shares\n        exchanges[tokenAddress].investorShares[msg.sender] = 10000;\n        exchanges[tokenAddress].totalShares = 10000;\n        emit Investment(tokenAddress, msg.sender, 10000, msg.value, tokenInvestment);\n    }\n\n    function invest(address tokenAddress, uint256 maxTokensInvested) public payable{\n        // Amount of tokens to invest is bassed of of the current ratio of eth to token in the pools\n        uint256 tokenInvestment = (exchanges[tokenAddress].tokenPool * msg.value / exchanges[tokenAddress].ethPool);\n        require(maxTokensInvested >= tokenInvestment, \"Max < required investment\");\n        require (exchanges[tokenAddress].token.transferFrom(msg.sender, address(this), tokenInvestment));\n        uint256 sharesPurchased = (tokenInvestment * exchanges[tokenAddress].totalShares)/ exchanges[tokenAddress].tokenPool;\n        exchanges[tokenAddress].ethPool += msg.value;\n        exchanges[tokenAddress].tokenPool += tokenInvestment;\n        // Give the investor their shares\n        exchanges[tokenAddress].investorShares[msg.sender] += sharesPurchased;\n        exchanges[tokenAddress].totalShares += sharesPurchased;\n        emit Investment(tokenAddress, msg.sender, sharesPurchased, msg.value, tokenInvestment);\n    }\n\n    function investQuoteFromEth(address tokenAddress, uint256 ethPaid) public view returns (uint256 tokensRequired) {\n        return (exchanges[tokenAddress].tokenPool * ethPaid / exchanges[tokenAddress].ethPool);\n    }\n\n    function investQuoteFromTokens(address tokenAddress, uint256 tokensPaid) public view returns (uint256 ethRequired) {\n        return (exchanges[tokenAddress].ethPool * tokensPaid / exchanges[tokenAddress].tokenPool);\n    }\n\n    function divest(address tokenAddress, uint256 shares) public {\n        require(exchanges[tokenAddress].investorShares[msg.sender] >= shares, \"Not enough shares to divest\");\n        uint256 ethOut = (exchanges[tokenAddress].ethPool * shares) / exchanges[tokenAddress].totalShares;\n        uint256 tokenOut = (exchanges[tokenAddress].tokenPool * shares) / exchanges[tokenAddress].totalShares;\n        require(exchanges[tokenAddress].token.transfer(msg.sender, tokenOut));\n        payable(msg.sender).call{value:ethOut};\n        exchanges[tokenAddress].ethPool -= ethOut;\n        exchanges[tokenAddress].tokenPool -= tokenOut;\n        exchanges[tokenAddress].investorShares[msg.sender] -= shares;\n        exchanges[tokenAddress].totalShares -= shares;\n        emit Divestment(tokenAddress, msg.sender, shares, ethOut, tokenOut);\n    }\n\n    function getShares(address tokenAddress, address investor) public view returns (uint256 shareCount) {\n        return exchanges[tokenAddress].investorShares[investor];\n    }\n\n    function getEthToTokenQuote(address tokenAddress, uint256 ethValue) public view returns (uint256 tokenQuote) {\n        uint256 fee = ethValue / feeRate;\n        uint256 mockPool = exchanges[tokenAddress].ethPool + ethValue;\n        uint256 invariant = exchanges[tokenAddress].ethPool * exchanges[tokenAddress].tokenPool;\n        return (exchanges[tokenAddress].tokenPool - (invariant / (mockPool - fee) + 1));\n    }\n\n    function getTokenToEthQuote(address tokenAddress, uint256 tokenValue) public view returns (uint256 ethQuote) {\n        uint256 fee = tokenValue / feeRate;\n        uint256 mockPool = exchanges[tokenAddress].tokenPool + tokenValue;\n        uint256 invariant = exchanges[tokenAddress].ethPool * exchanges[tokenAddress].tokenPool;\n        return (exchanges[tokenAddress].ethPool - (invariant / (mockPool - fee) + 1));\n    }\n    \n    function ethToTokenPrivate(address tokenAddress, uint256 value) private returns(uint256 tokenToPay){\n        uint256 fee = value / feeRate;\n        exchanges[tokenAddress].ethPool += value;\n        uint256 invariant = exchanges[tokenAddress].ethPool * exchanges[tokenAddress].tokenPool;\n        uint256 tokensPaid = exchanges[tokenAddress].tokenPool - (invariant / (exchanges[tokenAddress].ethPool - fee) + 1); // k = x * y <==> y = k / x, we payout the difference\n        // The +1 in the above line is to prevent a rouding error that causes the invariant to lower on transactions where the fee rounds down to 0\n        require(tokensPaid <= exchanges[tokenAddress].tokenPool, \"Lacking pool tokens\"); // Make sure we have enough tokens to pay out\n        exchanges[tokenAddress].tokenPool -= tokensPaid;\n        return tokensPaid;\n    }\n\n    function tokenToEthPrivate(address tokenAddress, uint256 tokensIn) private returns(uint256 ethToPay){\n        uint256 fee = tokensIn / feeRate;\n        exchanges[tokenAddress].tokenPool += tokensIn;\n        uint256 invariant = exchanges[tokenAddress].ethPool * exchanges[tokenAddress].tokenPool;\n        uint256 ethPaid = exchanges[tokenAddress].ethPool - (invariant / (exchanges[tokenAddress].tokenPool - fee) + 1); // k = x * y <==> x = k / y, we payout the difference\n        // The +1 in the above line is to prevent a rouding error that causes the invariant to lower on transactions where the fee rounds down to 0\n        require(ethPaid <= exchanges[tokenAddress].ethPool, \"Lacking pool eth\"); // Make sure we have enough eth to pay out\n        exchanges[tokenAddress].ethPool -= ethPaid;\n        return ethPaid;\n    }\n\n    function ethToToken(address tokenAddress, address recipient, uint256 minTokensOut) public payable hasLiquidity(tokenAddress) returns(uint256 tokensPaid){\n        uint256 tokensPaid = ethToTokenPrivate(tokenAddress, msg.value);\n        require(tokensPaid >= minTokensOut, \"tknsPaid < minTknsOut\");\n        emit TokenPurchase(tokenAddress, msg.sender, recipient, msg.value, tokensPaid);\n        require(exchanges[tokenAddress].token.transfer(recipient, tokensPaid), \"Tkn OUT transfer fail\");\n        return tokensPaid;\n    }\n\n    function tokenToEth(address tokenAddress, address recipient, uint256 tokensIn, uint256 minEthOut) public hasLiquidity(tokenAddress) returns(uint256 ethPaid){\n        require(exchanges[tokenAddress].token.transferFrom(msg.sender, address(this), tokensIn), \"Tkn IN transfer fail\");\n        uint256 ethPaid = tokenToEthPrivate(tokenAddress, tokensIn);\n        require(ethPaid >= minEthOut, \"ethPaid < minEthOut\");\n        emit EthPurchase(tokenAddress, msg.sender, recipient, tokensIn, ethPaid);\n        payable(recipient).call{value:ethPaid};\n        return ethPaid;\n    }\n\n    function tokenToToken(address tokenFromAddress, address recipient, address tokenToAddress, uint256 tokensIn, uint256 minTokensOut) public hasLiquidity(tokenFromAddress) hasLiquidity(tokenToAddress) returns(uint256 tokensPaid){\n        require(exchanges[tokenFromAddress].token.transferFrom(msg.sender, address(this), tokensIn), \"Tkn IN transfer fail\");\n        uint256 ethTransfer = tokenToEthPrivate(tokenFromAddress, tokensIn);\n        require(ethTransfer > 0, \"Not enough tokens in paid in\");\n        uint256 tokensOut = ethToTokenPrivate(tokenToAddress, ethTransfer);\n        require(tokensOut >= minTokensOut, \"Output less than minTokensOut\");\n        require(exchanges[tokenToAddress].token.transfer(recipient, tokensOut), \"Tkn OUT transfer fail\");\n        emit TokenToToken(tokenFromAddress, msg.sender, recipient, tokenToAddress, tokensIn, ethTransfer);\n        return tokensOut;\n    }\n}",
  "sourceMap": "313:9225:1:-:0;;;1592:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1628:7;:14;313:9225;;14:184:2;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:2;;14:184;-1:-1:-1;14:184:2:o;:::-;313:9225:1;;;;;;",
  "sourcePath": "contracts/MiniSwap.sol",
  "type": "contract"
}