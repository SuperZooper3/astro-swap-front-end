{
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_fee",
                    "type": "uint256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor",
            "name": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "tokenExchange",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "tokenAddress",
                    "type": "address"
                }
            ],
            "name": "TokenExchangeAdded",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "tokenAddress",
                    "type": "address"
                }
            ],
            "name": "addTokenExchange",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "exchange",
                    "type": "address"
                }
            ],
            "name": "convertExchangeToToken",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                }
            ],
            "name": "convertTokenToExchange",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "exchange",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "exchangeCount",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "count",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "exchangeToToken",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "feeRate",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "tokenToExchange",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "tokensAvailable",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        }
    ],
    "allSourcePaths": {
        "0": "C:/Users/super/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/token/ERC20/IERC20.sol",
        "1": "contracts/AstroSwapExchange.sol",
        "2": "contracts/AstroSwapFactory.sol"
    },
    "ast": {
        "absolutePath": "contracts/AstroSwapFactory.sol",
        "exportedSymbols": {
            "AstroSwapExchange": [
                731
            ],
            "AstroSwapFactory": [
                869
            ],
            "IERC20": [
                947
            ]
        },
        "id": 870,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 733,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "66:23:2"
            },
            {
                "absolutePath": "contracts/AstroSwapExchange.sol",
                "file": "./AstroSwapExchange.sol",
                "id": 734,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 870,
                "sourceUnit": 732,
                "src": "91:33:2",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "C:/Users/super/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/token/ERC20/IERC20.sol",
                "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
                "id": 735,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 870,
                "sourceUnit": 948,
                "src": "125:56:2",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [],
                "canonicalName": "AstroSwapFactory",
                "contractDependencies": [
                    731
                ],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 869,
                "linearizedBaseContracts": [
                    869
                ],
                "name": "AstroSwapFactory",
                "nameLocation": "322:16:2",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "functionSelector": "978bbdb9",
                        "id": 737,
                        "mutability": "mutable",
                        "name": "feeRate",
                        "nameLocation": "360:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 869,
                        "src": "345:22:2",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 736,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "345:7:2",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "98ba6219",
                        "id": 740,
                        "mutability": "mutable",
                        "name": "tokensAvailable",
                        "nameLocation": "390:15:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 869,
                        "src": "373:32:2",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[]"
                        },
                        "typeName": {
                            "baseType": {
                                "id": 738,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "373:7:2",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                }
                            },
                            "id": 739,
                            "nodeType": "ArrayTypeName",
                            "src": "373:9:2",
                            "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "c3c49a63",
                        "id": 744,
                        "mutability": "mutable",
                        "name": "tokenToExchange",
                        "nameLocation": "446:15:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 869,
                        "src": "411:50:2",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                            "typeString": "mapping(address => address)"
                        },
                        "typeName": {
                            "id": 743,
                            "keyType": {
                                "id": 741,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "419:7:2",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                }
                            },
                            "nodeType": "Mapping",
                            "src": "411:27:2",
                            "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                            },
                            "valueType": {
                                "id": 742,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "430:7:2",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                }
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "e4a0dd8f",
                        "id": 748,
                        "mutability": "mutable",
                        "name": "exchangeToToken",
                        "nameLocation": "502:15:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 869,
                        "src": "467:50:2",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                            "typeString": "mapping(address => address)"
                        },
                        "typeName": {
                            "id": 747,
                            "keyType": {
                                "id": 745,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "475:7:2",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                }
                            },
                            "nodeType": "Mapping",
                            "src": "467:27:2",
                            "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                            },
                            "valueType": {
                                "id": 746,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "486:7:2",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                }
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 757,
                            "nodeType": "Block",
                            "src": "550:31:2",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 755,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 753,
                                            "name": "feeRate",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 737,
                                            "src": "560:7:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 754,
                                            "name": "_fee",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 750,
                                            "src": "570:4:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "560:14:2",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 756,
                                    "nodeType": "ExpressionStatement",
                                    "src": "560:14:2"
                                }
                            ]
                        },
                        "id": 758,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 751,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 750,
                                    "mutability": "mutable",
                                    "name": "_fee",
                                    "nameLocation": "544:4:2",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 758,
                                    "src": "536:12:2",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 749,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "536:7:2",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "535:14:2"
                        },
                        "returnParameters": {
                            "id": 752,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "550:0:2"
                        },
                        "scope": 869,
                        "src": "524:57:2",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "anonymous": false,
                        "id": 764,
                        "name": "TokenExchangeAdded",
                        "nameLocation": "593:18:2",
                        "nodeType": "EventDefinition",
                        "parameters": {
                            "id": 763,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 760,
                                    "indexed": true,
                                    "mutability": "mutable",
                                    "name": "tokenExchange",
                                    "nameLocation": "628:13:2",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 764,
                                    "src": "612:29:2",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 759,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "612:7:2",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 762,
                                    "indexed": true,
                                    "mutability": "mutable",
                                    "name": "tokenAddress",
                                    "nameLocation": "659:12:2",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 764,
                                    "src": "643:28:2",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 761,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "643:7:2",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "611:61:2"
                        },
                        "src": "587:86:2"
                    },
                    {
                        "body": {
                            "id": 775,
                            "nodeType": "Block",
                            "src": "765:46:2",
                            "statements": [
                                {
                                    "expression": {
                                        "baseExpression": {
                                            "id": 771,
                                            "name": "tokenToExchange",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 744,
                                            "src": "782:15:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                                "typeString": "mapping(address => address)"
                                            }
                                        },
                                        "id": 773,
                                        "indexExpression": {
                                            "id": 772,
                                            "name": "token",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 766,
                                            "src": "798:5:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "782:22:2",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "functionReturnParameters": 770,
                                    "id": 774,
                                    "nodeType": "Return",
                                    "src": "775:29:2"
                                }
                            ]
                        },
                        "functionSelector": "fc1ed520",
                        "id": 776,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "convertTokenToExchange",
                        "nameLocation": "688:22:2",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 767,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 766,
                                    "mutability": "mutable",
                                    "name": "token",
                                    "nameLocation": "719:5:2",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 776,
                                    "src": "711:13:2",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 765,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "711:7:2",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "710:15:2"
                        },
                        "returnParameters": {
                            "id": 770,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 769,
                                    "mutability": "mutable",
                                    "name": "exchange",
                                    "nameLocation": "755:8:2",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 776,
                                    "src": "747:16:2",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 768,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "747:7:2",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "746:18:2"
                        },
                        "scope": 869,
                        "src": "679:132:2",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 787,
                            "nodeType": "Block",
                            "src": "903:49:2",
                            "statements": [
                                {
                                    "expression": {
                                        "baseExpression": {
                                            "id": 783,
                                            "name": "exchangeToToken",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 748,
                                            "src": "920:15:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                                "typeString": "mapping(address => address)"
                                            }
                                        },
                                        "id": 785,
                                        "indexExpression": {
                                            "id": 784,
                                            "name": "exchange",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 778,
                                            "src": "936:8:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "920:25:2",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "functionReturnParameters": 782,
                                    "id": 786,
                                    "nodeType": "Return",
                                    "src": "913:32:2"
                                }
                            ]
                        },
                        "functionSelector": "53e9ef55",
                        "id": 788,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "convertExchangeToToken",
                        "nameLocation": "826:22:2",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 779,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 778,
                                    "mutability": "mutable",
                                    "name": "exchange",
                                    "nameLocation": "857:8:2",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 788,
                                    "src": "849:16:2",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 777,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "849:7:2",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "848:18:2"
                        },
                        "returnParameters": {
                            "id": 782,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 781,
                                    "mutability": "mutable",
                                    "name": "token",
                                    "nameLocation": "896:5:2",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 788,
                                    "src": "888:13:2",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 780,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "888:7:2",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "887:15:2"
                        },
                        "scope": 869,
                        "src": "817:135:2",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 796,
                            "nodeType": "Block",
                            "src": "1019:46:2",
                            "statements": [
                                {
                                    "expression": {
                                        "expression": {
                                            "id": 793,
                                            "name": "tokensAvailable",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 740,
                                            "src": "1036:15:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                "typeString": "address[] storage ref"
                                            }
                                        },
                                        "id": 794,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "length",
                                        "nodeType": "MemberAccess",
                                        "src": "1036:22:2",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "functionReturnParameters": 792,
                                    "id": 795,
                                    "nodeType": "Return",
                                    "src": "1029:29:2"
                                }
                            ]
                        },
                        "functionSelector": "68972e50",
                        "id": 797,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "exchangeCount",
                        "nameLocation": "967:13:2",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 789,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "980:2:2"
                        },
                        "returnParameters": {
                            "id": 792,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 791,
                                    "mutability": "mutable",
                                    "name": "count",
                                    "nameLocation": "1012:5:2",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 797,
                                    "src": "1004:13:2",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 790,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1004:7:2",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1003:15:2"
                        },
                        "scope": 869,
                        "src": "958:107:2",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 867,
                            "nodeType": "Block",
                            "src": "1126:451:2",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 810,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "baseExpression": {
                                                        "id": 803,
                                                        "name": "tokenToExchange",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 744,
                                                        "src": "1144:15:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                                            "typeString": "mapping(address => address)"
                                                        }
                                                    },
                                                    "id": 805,
                                                    "indexExpression": {
                                                        "id": 804,
                                                        "name": "tokenAddress",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 799,
                                                        "src": "1160:12:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "1144:29:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "arguments": [
                                                        {
                                                            "hexValue": "30",
                                                            "id": 808,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "1185:1:2",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            },
                                                            "value": "0"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            }
                                                        ],
                                                        "id": 807,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "1177:7:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        },
                                                        "typeName": {
                                                            "id": 806,
                                                            "name": "address",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "1177:7:2",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 809,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "1177:10:2",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "1144:43:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "416c6c7265616479206164646564",
                                                "id": 811,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1189:16:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_90e91c566ef0e04bab20d049753c2e2db6fcfc18ed50cd7d3ed129dccc9ba418",
                                                    "typeString": "literal_string \"Allready added\""
                                                },
                                                "value": "Allready added"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_90e91c566ef0e04bab20d049753c2e2db6fcfc18ed50cd7d3ed129dccc9ba418",
                                                    "typeString": "literal_string \"Allready added\""
                                                }
                                            ],
                                            "id": 802,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "1136:7:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 812,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1136:70:2",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 813,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1136:70:2"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 820,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 815,
                                                    "name": "tokenAddress",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 799,
                                                    "src": "1224:12:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "!=",
                                                "rightExpression": {
                                                    "arguments": [
                                                        {
                                                            "hexValue": "30",
                                                            "id": 818,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "1248:1:2",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            },
                                                            "value": "0"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            }
                                                        ],
                                                        "id": 817,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "1240:7:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        },
                                                        "typeName": {
                                                            "id": 816,
                                                            "name": "address",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "1240:7:2",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 819,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "1240:10:2",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "1224:26:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            ],
                                            "id": 814,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "1216:7:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                "typeString": "function (bool) pure"
                                            }
                                        },
                                        "id": 821,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1216:35:2",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 822,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1216:35:2"
                                },
                                {
                                    "assignments": [
                                        825
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 825,
                                            "mutability": "mutable",
                                            "name": "exchange",
                                            "nameLocation": "1279:8:2",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 867,
                                            "src": "1261:26:2",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_AstroSwapExchange_$731",
                                                "typeString": "contract AstroSwapExchange"
                                            },
                                            "typeName": {
                                                "id": 824,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 823,
                                                    "name": "AstroSwapExchange",
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 731,
                                                    "src": "1261:17:2"
                                                },
                                                "referencedDeclaration": 731,
                                                "src": "1261:17:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_AstroSwapExchange_$731",
                                                    "typeString": "contract AstroSwapExchange"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 834,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 830,
                                                        "name": "tokenAddress",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 799,
                                                        "src": "1319:12:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 829,
                                                    "name": "IERC20",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 947,
                                                    "src": "1312:6:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$947_$",
                                                        "typeString": "type(contract IERC20)"
                                                    }
                                                },
                                                "id": 831,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1312:20:2",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IERC20_$947",
                                                    "typeString": "contract IERC20"
                                                }
                                            },
                                            {
                                                "id": 832,
                                                "name": "feeRate",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 737,
                                                "src": "1334:7:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_contract$_IERC20_$947",
                                                    "typeString": "contract IERC20"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 828,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "NewExpression",
                                            "src": "1290:21:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IERC20_$947_$_t_uint256_$returns$_t_contract$_AstroSwapExchange_$731_$",
                                                "typeString": "function (contract IERC20,uint256) returns (contract AstroSwapExchange)"
                                            },
                                            "typeName": {
                                                "id": 827,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 826,
                                                    "name": "AstroSwapExchange",
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 731,
                                                    "src": "1294:17:2"
                                                },
                                                "referencedDeclaration": 731,
                                                "src": "1294:17:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_AstroSwapExchange_$731",
                                                    "typeString": "contract AstroSwapExchange"
                                                }
                                            }
                                        },
                                        "id": 833,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1290:52:2",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_AstroSwapExchange_$731",
                                            "typeString": "contract AstroSwapExchange"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1261:81:2"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 838,
                                                "name": "tokenAddress",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 799,
                                                "src": "1373:12:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "expression": {
                                                "id": 835,
                                                "name": "tokensAvailable",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 740,
                                                "src": "1352:15:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                    "typeString": "address[] storage ref"
                                                }
                                            },
                                            "id": 837,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "push",
                                            "nodeType": "MemberAccess",
                                            "src": "1352:20:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                                "typeString": "function (address[] storage pointer,address)"
                                            }
                                        },
                                        "id": 839,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1352:34:2",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 840,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1352:34:2"
                                },
                                {
                                    "expression": {
                                        "id": 848,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "baseExpression": {
                                                "id": 841,
                                                "name": "tokenToExchange",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 744,
                                                "src": "1396:15:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                                    "typeString": "mapping(address => address)"
                                                }
                                            },
                                            "id": 843,
                                            "indexExpression": {
                                                "id": 842,
                                                "name": "tokenAddress",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 799,
                                                "src": "1412:12:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "nodeType": "IndexAccess",
                                            "src": "1396:29:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [
                                                {
                                                    "id": 846,
                                                    "name": "exchange",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 825,
                                                    "src": "1436:8:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_AstroSwapExchange_$731",
                                                        "typeString": "contract AstroSwapExchange"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_contract$_AstroSwapExchange_$731",
                                                        "typeString": "contract AstroSwapExchange"
                                                    }
                                                ],
                                                "id": 845,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "1428:7:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_address_$",
                                                    "typeString": "type(address)"
                                                },
                                                "typeName": {
                                                    "id": 844,
                                                    "name": "address",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "1428:7:2",
                                                    "typeDescriptions": {}
                                                }
                                            },
                                            "id": 847,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1428:17:2",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "1396:49:2",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "id": 849,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1396:49:2"
                                },
                                {
                                    "expression": {
                                        "id": 857,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "baseExpression": {
                                                "id": 850,
                                                "name": "exchangeToToken",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 748,
                                                "src": "1455:15:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                                    "typeString": "mapping(address => address)"
                                                }
                                            },
                                            "id": 855,
                                            "indexExpression": {
                                                "arguments": [
                                                    {
                                                        "id": 853,
                                                        "name": "exchange",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 825,
                                                        "src": "1479:8:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_AstroSwapExchange_$731",
                                                            "typeString": "contract AstroSwapExchange"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_AstroSwapExchange_$731",
                                                            "typeString": "contract AstroSwapExchange"
                                                        }
                                                    ],
                                                    "id": 852,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "1471:7:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 851,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "1471:7:2",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 854,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1471:17:2",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "nodeType": "IndexAccess",
                                            "src": "1455:34:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 856,
                                            "name": "tokenAddress",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 799,
                                            "src": "1492:12:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "1455:49:2",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "id": 858,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1455:49:2"
                                },
                                {
                                    "eventCall": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 862,
                                                        "name": "exchange",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 825,
                                                        "src": "1546:8:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_AstroSwapExchange_$731",
                                                            "typeString": "contract AstroSwapExchange"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_AstroSwapExchange_$731",
                                                            "typeString": "contract AstroSwapExchange"
                                                        }
                                                    ],
                                                    "id": 861,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "1538:7:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 860,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "1538:7:2",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 863,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1538:17:2",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 864,
                                                "name": "tokenAddress",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 799,
                                                "src": "1557:12:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "id": 859,
                                            "name": "TokenExchangeAdded",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 764,
                                            "src": "1519:18:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                                                "typeString": "function (address,address)"
                                            }
                                        },
                                        "id": 865,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1519:51:2",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 866,
                                    "nodeType": "EmitStatement",
                                    "src": "1514:56:2"
                                }
                            ]
                        },
                        "functionSelector": "db3d9387",
                        "id": 868,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "addTokenExchange",
                        "nameLocation": "1080:16:2",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 800,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 799,
                                    "mutability": "mutable",
                                    "name": "tokenAddress",
                                    "nameLocation": "1105:12:2",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 868,
                                    "src": "1097:20:2",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 798,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1097:7:2",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1096:22:2"
                        },
                        "returnParameters": {
                            "id": 801,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1126:0:2"
                        },
                        "scope": 869,
                        "src": "1071:506:2",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 870,
                "src": "313:1266:2",
                "usedErrors": []
            }
        ],
        "src": "66:1513:2"
    },
    "bytecode": "608060405234801561001057600080fd5b506040516119cc3803806119cc83398101604081905261002f91610037565b600055610050565b60006020828403121561004957600080fd5b5051919050565b61196d8061005f6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063c3c49a631161005b578063c3c49a6314610104578063db3d93871461012d578063e4a0dd8f14610142578063fc1ed5201461016b57600080fd5b806353e9ef551461008d57806368972e50146100d6578063978bbdb9146100e857806398ba6219146100f1575b600080fd5b6100b961009b36600461036e565b6001600160a01b039081166000908152600360205260409020541690565b6040516001600160a01b0390911681526020015b60405180910390f35b6001545b6040519081526020016100cd565b6100da60005481565b6100b96100ff36600461039e565b610197565b6100b961011236600461036e565b6002602052600090815260409020546001600160a01b031681565b61014061013b36600461036e565b6101c1565b005b6100b961015036600461036e565b6003602052600090815260409020546001600160a01b031681565b6100b961017936600461036e565b6001600160a01b039081166000908152600260205260409020541690565b600181815481106101a757600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b038181166000908152600260205260409020541615610247576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f416c6c7265616479206164646564000000000000000000000000000000000000604482015260640160405180910390fd5b6001600160a01b03811661025a57600080fd5b60008160005460405161026c90610361565b6001600160a01b0390921682526020820152604001604051809103906000f08015801561029d573d6000803e3d6000fd5b50600180548082019091557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b038086167fffffffffffffffffffffffff000000000000000000000000000000000000000092831681179093556000838152600260209081526040808320805494881694861685179055838352600390915280822080549094168517909355915193945091927f213d74b083ed8700f78fe5679ee5c8f8e4c05aa0cef994e00e09a3fe0af17e359190a35050565b611580806103b883390190565b60006020828403121561038057600080fd5b81356001600160a01b038116811461039757600080fd5b9392505050565b6000602082840312156103b057600080fd5b503591905056fe608060405234801561001057600080fd5b5060405161158038038061158083398101604081905261002f91610068565b60008054336001600160a01b031991821617909155600291909155600180549091166001600160a01b03929092169190911790556100a2565b6000806040838503121561007b57600080fd5b82516001600160a01b038116811461009257600080fd5b6020939093015192949293505050565b6114cf806100b16000396000f3fe6080604052600436106101295760003560e01c8063c7f790a2116100a5578063e48c6bfe11610074578063f16673a411610059578063f16673a41461030f578063fad3136414610325578063fc0c546a1461034557600080fd5b8063e48c6bfe146102c3578063f04da65b146102d957600080fd5b8063c7f790a214610250578063d3179c5614610270578063d3690b6a14610283578063d91efc3b146102b057600080fd5b806373a5be9b116100fc5780638ca17995116100e15780638ca17995146101e2578063b03a9a0514610202578063c45a01551461021857600080fd5b806373a5be9b146101a25780637ed78044146101c257600080fd5b8063104e99291461012e57806317a7615e146101575780632afcf480146101775780633a98ef391461018c575b600080fd5b34801561013a57600080fd5b5061014460045481565b6040519081526020015b60405180910390f35b34801561016357600080fd5b5061014461017236600461125e565b610365565b61018a61018536600461128e565b61048a565b005b34801561019857600080fd5b5061014460075481565b3480156101ae57600080fd5b506101446101bd36600461128e565b610653565b3480156101ce57600080fd5b506101446101dd36600461128e565b6106af565b3480156101ee57600080fd5b5061018a6101fd36600461128e565b610703565b34801561020e57600080fd5b5061014460055481565b34801561022457600080fd5b50600054610238906001600160a01b031681565b6040516001600160a01b03909116815260200161014e565b34801561025c57600080fd5b5061014461026b3660046112a7565b6108e8565b61018a61027e36600461128e565b610a6a565b34801561028f57600080fd5b5061014461029e3660046112dc565b60066020526000908152604090205481565b6101446102be3660046112f9565b610c18565b3480156102cf57600080fd5b5061014460025481565b3480156102e557600080fd5b506101446102f43660046112dc565b6001600160a01b031660009081526006602052604090205490565b34801561031b57600080fd5b5061014460035481565b34801561033157600080fd5b5061018a610340366004611325565b610dae565b34801561035157600080fd5b50600154610238906001600160a01b031681565b600080610371846106af565b600080546040517fc3c49a630000000000000000000000000000000000000000000000000000000081526001600160a01b0387811660048301529394509192169063c3c49a6390602401602060405180830381865afa1580156103d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fc919061136b565b6040517f73a5be9b000000000000000000000000000000000000000000000000000000008152600481018490529091506001600160a01b038216906373a5be9b90602401602060405180830381865afa15801561045d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104819190611388565b95945050505050565b60003460035460045461049d91906113d0565b6104a7919061140b565b9050808210156104fe5760405162461bcd60e51b815260206004820152601960248201527f4d6178203c20726571756972656420696e766573746d656e740000000000000060448201526064015b60405180910390fd5b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610555573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105799190611448565b61058257600080fd5b600060045460075483610595919061140b565b61059f91906113d0565b905034600360008282546105b3919061146a565b9250508190555081600460008282546105cc919061146a565b90915550506004546003546105e1919061140b565b600555336000908152600660205260408120805483929061060390849061146a565b92505081905550806007600082825461061c919061146a565b9091555050604051819033907ffe123a1efb6782dccd20e9790951adcfab3cd0e11b85a6f06d8b9222d299a0a390600090a3505050565b6000806002548361066491906113d0565b9050600083600354610676919061146a565b90506106828282611482565b60055461068f91906113d0565b61069a90600161146a565b6004546106a79190611482565b949350505050565b600080600254836106c091906113d0565b90506000836004546106d2919061146a565b90506106de8282611482565b6005546106eb91906113d0565b6106f690600161146a565b6003546106a79190611482565b336000908152600660205260409020548111156107625760405162461bcd60e51b815260206004820152601b60248201527f4e6f7420656e6f7567682073686172657320746f20646976657374000000000060448201526064016104f5565b600060075482600354610775919061140b565b61077f91906113d0565b9050600060075483600454610794919061140b565b61079e91906113d0565b6001546040517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018390529192506001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610809573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082d9190611448565b61083657600080fd5b81600360008282546108489190611482565b9250508190555080600460008282546108619190611482565b9091555050600454600354610876919061140b565b6005553360009081526006602052604081208054859290610898908490611482565b9250508190555082600760008282546108b19190611482565b9091555050604051839033907f04c88fcf03215155a0d0a2fdbd430ab9f32013f00499b2899c180dc6077180ca90600090a3505050565b600080600554116108f857600080fd5b6001546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561094f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109739190611448565b6109bf5760405162461bcd60e51b815260206004820152601460248201527f546b6e20494e207472616e73666572206661696c00000000000000000000000060448201526064016104f5565b60006109ca846110a3565b905082811015610a1c5760405162461bcd60e51b815260206004820152601360248201527f65746850616964203c206d696e4574684f75740000000000000000000000000060448201526064016104f5565b60408051858152602081018390526001600160a01b0387169133917f90e08377d523c5e583beefcdb6735844f8d4e305be8e4e4003e940ee726ce24c910160405180910390a3949350505050565b60075415610ae05760405162461bcd60e51b815260206004820152603660248201527f4c697175696469747920706f6f6c20697320616c72656164792073656564656460448201527f2c2075736520696e76657374282920696e73746561640000000000000000000060648201526084016104f5565b600081118015610af05750600034115b610b3c5760405162461bcd60e51b815260206004820152601a60248201527f4d75737420696e766573742045544820616e6420746f6b656e7300000000000060448201526064016104f5565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610b93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb79190611448565b506004819055346003819055610bce90829061140b565b6005553360008181526006602052604080822061271090819055600781905590519092917ffe123a1efb6782dccd20e9790951adcfab3cd0e11b85a6f06d8b9222d299a0a391a350565b60008060055411610c2857600080fd5b6000610c333461117a565b905082811015610c855760405162461bcd60e51b815260206004820152601560248201527f746b6e7350616964203c206d696e546b6e734f7574000000000000000000000060448201526064016104f5565b60408051348152602081018390526001600160a01b0386169133917f623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad18910160405180910390a36001546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b038681166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af1158015610d37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5b9190611448565b610da75760405162461bcd60e51b815260206004820152601560248201527f546b6e204f5554207472616e73666572206661696c000000000000000000000060448201526064016104f5565b9392505050565b600060055411610dbd57600080fd5b6001546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610e14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e389190611448565b610e845760405162461bcd60e51b815260206004820152601460248201527f546b6e20494e207472616e73666572206661696c00000000000000000000000060448201526064016104f5565b6000610e8f836110a3565b905060008111610ee15760405162461bcd60e51b815260206004820152601460248201527f457468206f757420697320746f6f20736d616c6c00000000000000000000000060448201526064016104f5565b600080546040517fc3c49a630000000000000000000000000000000000000000000000000000000081526001600160a01b0387811660048301529091169063c3c49a6390602401602060405180830381865afa158015610f45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f69919061136b565b6040517fd91efc3b0000000000000000000000000000000000000000000000000000000081526001600160a01b0388811660048301526024820186905291925060009183169063d91efc3b90859060440160206040518083038185885af1158015610fd8573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610ffd9190611388565b90508381101561104f5760405162461bcd60e51b815260206004820152601d60248201527f4f7574707574206c657373207468616e206d696e546f6b656e734f757400000060448201526064016104f5565b60408051868152602081018590526001600160a01b0380851692908a169133917f984ded3c86142a79d1ff62a9d57305e530e14653b3343ab5bae22ffb4f99769c910160405180910390a450505050505050565b600080600254836110b491906113d0565b9050826004546110c4919061146a565b60048190556000906110d7908390611482565b6005546110e491906113d0565b6110ef90600161146a565b6003546110fc9190611482565b90506003548111156111505760405162461bcd60e51b815260206004820152601060248201527f4c61636b696e6720706f6f6c206574680000000000000000000000000000000060448201526064016104f5565b8060035461115e9190611482565b6003819055600454611170919061140b565b6005559392505050565b6000806002548361118b91906113d0565b90508260035461119b919061146a565b60038190556000906111ae908390611482565b6005546111bb91906113d0565b6111c690600161146a565b6004546111d39190611482565b90506004548111156112275760405162461bcd60e51b815260206004820152601360248201527f4c61636b696e6720706f6f6c20746f6b656e730000000000000000000000000060448201526064016104f5565b806004546112359190611482565b60048190556003546111709161140b565b6001600160a01b038116811461125b57600080fd5b50565b6000806040838503121561127157600080fd5b82359150602083013561128381611246565b809150509250929050565b6000602082840312156112a057600080fd5b5035919050565b6000806000606084860312156112bc57600080fd5b83356112c781611246565b95602085013595506040909401359392505050565b6000602082840312156112ee57600080fd5b8135610da781611246565b6000806040838503121561130c57600080fd5b823561131781611246565b946020939093013593505050565b6000806000806080858703121561133b57600080fd5b843561134681611246565b9350602085013561135681611246565b93969395505050506040820135916060013590565b60006020828403121561137d57600080fd5b8151610da781611246565b60006020828403121561139a57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082611406577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611443576114436113a1565b500290565b60006020828403121561145a57600080fd5b81518015158114610da757600080fd5b6000821982111561147d5761147d6113a1565b500190565b600082821015611494576114946113a1565b50039056fea264697066735822122000de3970f41be189e6cc73248a78c020eef73523d66db86d96b4ed20a0745d6e64736f6c634300080a0033a2646970667358221220e68ef55274f22e5d7b4cdc7b66f7a06b2665ae646b522d57db032a6b7f82bc5064736f6c634300080a0033",
    "bytecodeSha1": "4fac68200588bb3c7492153e5a334fb805d40c5c",
    "compiler": {
        "evm_version": "istanbul",
        "optimizer": {
            "enabled": true,
            "runs": 2000
        },
        "version": "0.8.10+commit.fc410830"
    },
    "contractName": "AstroSwapFactory",
    "coverageMap": {
        "branches": {
            "0": {},
            "1": {},
            "2": {
                "AstroSwapFactory.addTokenExchange": {
                    "9": [
                        1144,
                        1187,
                        true
                    ],
                    "10": [
                        1224,
                        1250,
                        true
                    ]
                }
            }
        },
        "statements": {
            "0": {},
            "1": {},
            "2": {
                "AstroSwapFactory.addTokenExchange": {
                    "3": [
                        1136,
                        1206
                    ],
                    "4": [
                        1216,
                        1251
                    ],
                    "5": [
                        1352,
                        1386
                    ],
                    "6": [
                        1396,
                        1445
                    ],
                    "7": [
                        1455,
                        1504
                    ],
                    "8": [
                        1514,
                        1570
                    ]
                },
                "AstroSwapFactory.convertExchangeToToken": {
                    "0": [
                        913,
                        945
                    ]
                },
                "AstroSwapFactory.convertTokenToExchange": {
                    "2": [
                        775,
                        804
                    ]
                },
                "AstroSwapFactory.exchangeCount": {
                    "1": [
                        1029,
                        1058
                    ]
                }
            }
        }
    },
    "dependencies": [
        "AstroSwapExchange",
        "OpenZeppelin/openzeppelin-contracts@4.4.0/IERC20"
    ],
    "deployedBytecode": "608060405234801561001057600080fd5b50600436106100885760003560e01c8063c3c49a631161005b578063c3c49a6314610104578063db3d93871461012d578063e4a0dd8f14610142578063fc1ed5201461016b57600080fd5b806353e9ef551461008d57806368972e50146100d6578063978bbdb9146100e857806398ba6219146100f1575b600080fd5b6100b961009b36600461036e565b6001600160a01b039081166000908152600360205260409020541690565b6040516001600160a01b0390911681526020015b60405180910390f35b6001545b6040519081526020016100cd565b6100da60005481565b6100b96100ff36600461039e565b610197565b6100b961011236600461036e565b6002602052600090815260409020546001600160a01b031681565b61014061013b36600461036e565b6101c1565b005b6100b961015036600461036e565b6003602052600090815260409020546001600160a01b031681565b6100b961017936600461036e565b6001600160a01b039081166000908152600260205260409020541690565b600181815481106101a757600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b038181166000908152600260205260409020541615610247576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f416c6c7265616479206164646564000000000000000000000000000000000000604482015260640160405180910390fd5b6001600160a01b03811661025a57600080fd5b60008160005460405161026c90610361565b6001600160a01b0390921682526020820152604001604051809103906000f08015801561029d573d6000803e3d6000fd5b50600180548082019091557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b038086167fffffffffffffffffffffffff000000000000000000000000000000000000000092831681179093556000838152600260209081526040808320805494881694861685179055838352600390915280822080549094168517909355915193945091927f213d74b083ed8700f78fe5679ee5c8f8e4c05aa0cef994e00e09a3fe0af17e359190a35050565b611580806103b883390190565b60006020828403121561038057600080fd5b81356001600160a01b038116811461039757600080fd5b9392505050565b6000602082840312156103b057600080fd5b503591905056fe608060405234801561001057600080fd5b5060405161158038038061158083398101604081905261002f91610068565b60008054336001600160a01b031991821617909155600291909155600180549091166001600160a01b03929092169190911790556100a2565b6000806040838503121561007b57600080fd5b82516001600160a01b038116811461009257600080fd5b6020939093015192949293505050565b6114cf806100b16000396000f3fe6080604052600436106101295760003560e01c8063c7f790a2116100a5578063e48c6bfe11610074578063f16673a411610059578063f16673a41461030f578063fad3136414610325578063fc0c546a1461034557600080fd5b8063e48c6bfe146102c3578063f04da65b146102d957600080fd5b8063c7f790a214610250578063d3179c5614610270578063d3690b6a14610283578063d91efc3b146102b057600080fd5b806373a5be9b116100fc5780638ca17995116100e15780638ca17995146101e2578063b03a9a0514610202578063c45a01551461021857600080fd5b806373a5be9b146101a25780637ed78044146101c257600080fd5b8063104e99291461012e57806317a7615e146101575780632afcf480146101775780633a98ef391461018c575b600080fd5b34801561013a57600080fd5b5061014460045481565b6040519081526020015b60405180910390f35b34801561016357600080fd5b5061014461017236600461125e565b610365565b61018a61018536600461128e565b61048a565b005b34801561019857600080fd5b5061014460075481565b3480156101ae57600080fd5b506101446101bd36600461128e565b610653565b3480156101ce57600080fd5b506101446101dd36600461128e565b6106af565b3480156101ee57600080fd5b5061018a6101fd36600461128e565b610703565b34801561020e57600080fd5b5061014460055481565b34801561022457600080fd5b50600054610238906001600160a01b031681565b6040516001600160a01b03909116815260200161014e565b34801561025c57600080fd5b5061014461026b3660046112a7565b6108e8565b61018a61027e36600461128e565b610a6a565b34801561028f57600080fd5b5061014461029e3660046112dc565b60066020526000908152604090205481565b6101446102be3660046112f9565b610c18565b3480156102cf57600080fd5b5061014460025481565b3480156102e557600080fd5b506101446102f43660046112dc565b6001600160a01b031660009081526006602052604090205490565b34801561031b57600080fd5b5061014460035481565b34801561033157600080fd5b5061018a610340366004611325565b610dae565b34801561035157600080fd5b50600154610238906001600160a01b031681565b600080610371846106af565b600080546040517fc3c49a630000000000000000000000000000000000000000000000000000000081526001600160a01b0387811660048301529394509192169063c3c49a6390602401602060405180830381865afa1580156103d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fc919061136b565b6040517f73a5be9b000000000000000000000000000000000000000000000000000000008152600481018490529091506001600160a01b038216906373a5be9b90602401602060405180830381865afa15801561045d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104819190611388565b95945050505050565b60003460035460045461049d91906113d0565b6104a7919061140b565b9050808210156104fe5760405162461bcd60e51b815260206004820152601960248201527f4d6178203c20726571756972656420696e766573746d656e740000000000000060448201526064015b60405180910390fd5b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610555573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105799190611448565b61058257600080fd5b600060045460075483610595919061140b565b61059f91906113d0565b905034600360008282546105b3919061146a565b9250508190555081600460008282546105cc919061146a565b90915550506004546003546105e1919061140b565b600555336000908152600660205260408120805483929061060390849061146a565b92505081905550806007600082825461061c919061146a565b9091555050604051819033907ffe123a1efb6782dccd20e9790951adcfab3cd0e11b85a6f06d8b9222d299a0a390600090a3505050565b6000806002548361066491906113d0565b9050600083600354610676919061146a565b90506106828282611482565b60055461068f91906113d0565b61069a90600161146a565b6004546106a79190611482565b949350505050565b600080600254836106c091906113d0565b90506000836004546106d2919061146a565b90506106de8282611482565b6005546106eb91906113d0565b6106f690600161146a565b6003546106a79190611482565b336000908152600660205260409020548111156107625760405162461bcd60e51b815260206004820152601b60248201527f4e6f7420656e6f7567682073686172657320746f20646976657374000000000060448201526064016104f5565b600060075482600354610775919061140b565b61077f91906113d0565b9050600060075483600454610794919061140b565b61079e91906113d0565b6001546040517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018390529192506001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610809573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082d9190611448565b61083657600080fd5b81600360008282546108489190611482565b9250508190555080600460008282546108619190611482565b9091555050600454600354610876919061140b565b6005553360009081526006602052604081208054859290610898908490611482565b9250508190555082600760008282546108b19190611482565b9091555050604051839033907f04c88fcf03215155a0d0a2fdbd430ab9f32013f00499b2899c180dc6077180ca90600090a3505050565b600080600554116108f857600080fd5b6001546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561094f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109739190611448565b6109bf5760405162461bcd60e51b815260206004820152601460248201527f546b6e20494e207472616e73666572206661696c00000000000000000000000060448201526064016104f5565b60006109ca846110a3565b905082811015610a1c5760405162461bcd60e51b815260206004820152601360248201527f65746850616964203c206d696e4574684f75740000000000000000000000000060448201526064016104f5565b60408051858152602081018390526001600160a01b0387169133917f90e08377d523c5e583beefcdb6735844f8d4e305be8e4e4003e940ee726ce24c910160405180910390a3949350505050565b60075415610ae05760405162461bcd60e51b815260206004820152603660248201527f4c697175696469747920706f6f6c20697320616c72656164792073656564656460448201527f2c2075736520696e76657374282920696e73746561640000000000000000000060648201526084016104f5565b600081118015610af05750600034115b610b3c5760405162461bcd60e51b815260206004820152601a60248201527f4d75737420696e766573742045544820616e6420746f6b656e7300000000000060448201526064016104f5565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610b93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb79190611448565b506004819055346003819055610bce90829061140b565b6005553360008181526006602052604080822061271090819055600781905590519092917ffe123a1efb6782dccd20e9790951adcfab3cd0e11b85a6f06d8b9222d299a0a391a350565b60008060055411610c2857600080fd5b6000610c333461117a565b905082811015610c855760405162461bcd60e51b815260206004820152601560248201527f746b6e7350616964203c206d696e546b6e734f7574000000000000000000000060448201526064016104f5565b60408051348152602081018390526001600160a01b0386169133917f623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad18910160405180910390a36001546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b038681166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af1158015610d37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5b9190611448565b610da75760405162461bcd60e51b815260206004820152601560248201527f546b6e204f5554207472616e73666572206661696c000000000000000000000060448201526064016104f5565b9392505050565b600060055411610dbd57600080fd5b6001546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610e14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e389190611448565b610e845760405162461bcd60e51b815260206004820152601460248201527f546b6e20494e207472616e73666572206661696c00000000000000000000000060448201526064016104f5565b6000610e8f836110a3565b905060008111610ee15760405162461bcd60e51b815260206004820152601460248201527f457468206f757420697320746f6f20736d616c6c00000000000000000000000060448201526064016104f5565b600080546040517fc3c49a630000000000000000000000000000000000000000000000000000000081526001600160a01b0387811660048301529091169063c3c49a6390602401602060405180830381865afa158015610f45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f69919061136b565b6040517fd91efc3b0000000000000000000000000000000000000000000000000000000081526001600160a01b0388811660048301526024820186905291925060009183169063d91efc3b90859060440160206040518083038185885af1158015610fd8573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610ffd9190611388565b90508381101561104f5760405162461bcd60e51b815260206004820152601d60248201527f4f7574707574206c657373207468616e206d696e546f6b656e734f757400000060448201526064016104f5565b60408051868152602081018590526001600160a01b0380851692908a169133917f984ded3c86142a79d1ff62a9d57305e530e14653b3343ab5bae22ffb4f99769c910160405180910390a450505050505050565b600080600254836110b491906113d0565b9050826004546110c4919061146a565b60048190556000906110d7908390611482565b6005546110e491906113d0565b6110ef90600161146a565b6003546110fc9190611482565b90506003548111156111505760405162461bcd60e51b815260206004820152601060248201527f4c61636b696e6720706f6f6c206574680000000000000000000000000000000060448201526064016104f5565b8060035461115e9190611482565b6003819055600454611170919061140b565b6005559392505050565b6000806002548361118b91906113d0565b90508260035461119b919061146a565b60038190556000906111ae908390611482565b6005546111bb91906113d0565b6111c690600161146a565b6004546111d39190611482565b90506004548111156112275760405162461bcd60e51b815260206004820152601360248201527f4c61636b696e6720706f6f6c20746f6b656e730000000000000000000000000060448201526064016104f5565b806004546112359190611482565b60048190556003546111709161140b565b6001600160a01b038116811461125b57600080fd5b50565b6000806040838503121561127157600080fd5b82359150602083013561128381611246565b809150509250929050565b6000602082840312156112a057600080fd5b5035919050565b6000806000606084860312156112bc57600080fd5b83356112c781611246565b95602085013595506040909401359392505050565b6000602082840312156112ee57600080fd5b8135610da781611246565b6000806040838503121561130c57600080fd5b823561131781611246565b946020939093013593505050565b6000806000806080858703121561133b57600080fd5b843561134681611246565b9350602085013561135681611246565b93969395505050506040820135916060013590565b60006020828403121561137d57600080fd5b8151610da781611246565b60006020828403121561139a57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082611406577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611443576114436113a1565b500290565b60006020828403121561145a57600080fd5b81518015158114610da757600080fd5b6000821982111561147d5761147d6113a1565b500190565b600082821015611494576114946113a1565b50039056fea264697066735822122000de3970f41be189e6cc73248a78c020eef73523d66db86d96b4ed20a0745d6e64736f6c634300080a0033a2646970667358221220e68ef55274f22e5d7b4cdc7b66f7a06b2665ae646b522d57db032a6b7f82bc5064736f6c634300080a0033",
    "deployedSourceMap": "313:1266:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;817:135;;;;;;:::i;:::-;-1:-1:-1;;;;;920:25:2;;;888:13;920:25;;;:15;:25;;;;;;;;817:135;;;;-1:-1:-1;;;;;492:55:3;;;474:74;;462:2;447:18;817:135:2;;;;;;;;958:107;1036:15;:22;958:107;;;705:25:3;;;693:2;678:18;958:107:2;559:177:3;345:22:2;;;;;;373:32;;;;;;:::i;:::-;;:::i;411:50::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;411:50:2;;;1071:506;;;;;;:::i;:::-;;:::i;:::-;;467:50;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;467:50:2;;;679:132;;;;;;:::i;:::-;-1:-1:-1;;;;;782:22:2;;;747:16;782:22;;;:15;:22;;;;;;;;679:132;373:32;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;373:32:2;;-1:-1:-1;373:32:2;:::o;1071:506::-;-1:-1:-1;;;;;1144:29:2;;;1185:1;1144:29;;;:15;:29;;;;;;;:43;1136:70;;;;;;;1128:2:3;1136:70:2;;;1110:21:3;1167:2;1147:18;;;1140:30;1206:16;1186:18;;;1179:44;1240:18;;1136:70:2;;;;;;;;-1:-1:-1;;;;;1224:26:2;;1216:35;;;;;;1261:26;1319:12;1334:7;;1290:52;;;;;:::i;:::-;-1:-1:-1;;;;;1475:55:3;;;1457:74;;1562:2;1547:18;;1540:34;1445:2;1430:18;1290:52:2;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1352:15:2;:34;;;;;;;;;;;;-1:-1:-1;;;;;1352:34:2;;;;;;;;;;;;-1:-1:-1;1396:29:2;;;:15;1352:34;1396:29;;;;;;;:49;;;;;;;;;;;;1455:34;;;:15;:34;;;;;;:49;;;;;;;;;;1519:51;;1261:81;;-1:-1:-1;1352:34:2;;1519:51;;-1:-1:-1;1519:51:2;1126:451;1071:506;:::o;-1:-1:-1:-;;;;;;;;:::o;14:309:3:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;181:9;168:23;-1:-1:-1;;;;;224:5:3;220:54;213:5;210:65;200:93;;289:1;286;279:12;200:93;312:5;14:309;-1:-1:-1;;;14:309:3:o;741:180::-;800:6;853:2;841:9;832:7;828:23;824:32;821:52;;;869:1;866;859:12;821:52;-1:-1:-1;892:23:3;;741:180;-1:-1:-1;741:180:3:o",
    "language": "Solidity",
    "natspec": {
        "kind": "dev",
        "methods": {},
        "version": 1
    },
    "offset": [
        313,
        1579
    ],
    "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC3C49A63 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xC3C49A63 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0xDB3D9387 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0xE4A0DD8F EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0xFC1ED520 EQ PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x53E9EF55 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x68972E50 EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0x978BBDB9 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x98BA6219 EQ PUSH2 0xF1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB9 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x36E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCD JUMP JUMPDEST PUSH2 0xDA PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xB9 PUSH2 0xFF CALLDATASIZE PUSH1 0x4 PUSH2 0x39E JUMP JUMPDEST PUSH2 0x197 JUMP JUMPDEST PUSH2 0xB9 PUSH2 0x112 CALLDATASIZE PUSH1 0x4 PUSH2 0x36E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x13B CALLDATASIZE PUSH1 0x4 PUSH2 0x36E JUMP JUMPDEST PUSH2 0x1C1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB9 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0x36E JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xB9 PUSH2 0x179 CALLDATASIZE PUSH1 0x4 PUSH2 0x36E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x247 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C7265616479206164646564000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x25A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH2 0x26C SWAP1 PUSH2 0x361 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x29D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD SWAP1 SWAP2 SSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP5 DUP9 AND SWAP5 DUP7 AND DUP6 OR SWAP1 SSTORE DUP4 DUP4 MSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP1 SLOAD SWAP1 SWAP5 AND DUP6 OR SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP4 SWAP5 POP SWAP2 SWAP3 PUSH32 0x213D74B083ED8700F78FE5679EE5C8F8E4C05AA0CEF994E00E09A3FE0AF17E35 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1580 DUP1 PUSH2 0x3B8 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1580 CODESIZE SUB DUP1 PUSH2 0x1580 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x68 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x2 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xA2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD MLOAD SWAP3 SWAP5 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH2 0x14CF DUP1 PUSH2 0xB1 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x129 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC7F790A2 GT PUSH2 0xA5 JUMPI DUP1 PUSH4 0xE48C6BFE GT PUSH2 0x74 JUMPI DUP1 PUSH4 0xF16673A4 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xF16673A4 EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xFAD31364 EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE48C6BFE EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0xF04DA65B EQ PUSH2 0x2D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC7F790A2 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xD3179C56 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0xD3690B6A EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0xD91EFC3B EQ PUSH2 0x2B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x73A5BE9B GT PUSH2 0xFC JUMPI DUP1 PUSH4 0x8CA17995 GT PUSH2 0xE1 JUMPI DUP1 PUSH4 0x8CA17995 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0xB03A9A05 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x218 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x73A5BE9B EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x7ED78044 EQ PUSH2 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x104E9929 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x17A7615E EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x2AFCF480 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x3A98EF39 EQ PUSH2 0x18C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x163 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0x125E JUMP JUMPDEST PUSH2 0x365 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x128E JUMP JUMPDEST PUSH2 0x48A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x1BD CALLDATASIZE PUSH1 0x4 PUSH2 0x128E JUMP JUMPDEST PUSH2 0x653 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x1DD CALLDATASIZE PUSH1 0x4 PUSH2 0x128E JUMP JUMPDEST PUSH2 0x6AF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18A PUSH2 0x1FD CALLDATASIZE PUSH1 0x4 PUSH2 0x128E JUMP JUMPDEST PUSH2 0x703 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x238 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x26B CALLDATASIZE PUSH1 0x4 PUSH2 0x12A7 JUMP JUMPDEST PUSH2 0x8E8 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x27E CALLDATASIZE PUSH1 0x4 PUSH2 0x128E JUMP JUMPDEST PUSH2 0xA6A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x29E CALLDATASIZE PUSH1 0x4 PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x2BE CALLDATASIZE PUSH1 0x4 PUSH2 0x12F9 JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x2F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18A PUSH2 0x340 CALLDATASIZE PUSH1 0x4 PUSH2 0x1325 JUMP JUMPDEST PUSH2 0xDAE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x238 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x371 DUP5 PUSH2 0x6AF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xC3C49A6300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP4 SWAP5 POP SWAP2 SWAP3 AND SWAP1 PUSH4 0xC3C49A63 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3D8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3FC SWAP2 SWAP1 PUSH2 0x136B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x73A5BE9B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x73A5BE9B SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x45D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x481 SWAP2 SWAP1 PUSH2 0x1388 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH2 0x49D SWAP2 SWAP1 PUSH2 0x13D0 JUMP JUMPDEST PUSH2 0x4A7 SWAP2 SWAP1 PUSH2 0x140B JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT ISZERO PUSH2 0x4FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178203C20726571756972656420696E766573746D656E7400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x555 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x579 SWAP2 SWAP1 PUSH2 0x1448 JUMP JUMPDEST PUSH2 0x582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD PUSH1 0x7 SLOAD DUP4 PUSH2 0x595 SWAP2 SWAP1 PUSH2 0x140B JUMP JUMPDEST PUSH2 0x59F SWAP2 SWAP1 PUSH2 0x13D0 JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5B3 SWAP2 SWAP1 PUSH2 0x146A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5CC SWAP2 SWAP1 PUSH2 0x146A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0x5E1 SWAP2 SWAP1 PUSH2 0x140B JUMP JUMPDEST PUSH1 0x5 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x603 SWAP1 DUP5 SWAP1 PUSH2 0x146A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x61C SWAP2 SWAP1 PUSH2 0x146A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 SWAP1 CALLER SWAP1 PUSH32 0xFE123A1EFB6782DCCD20E9790951ADCFAB3CD0E11B85A6F06D8B9222D299A0A3 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 SLOAD DUP4 PUSH2 0x664 SWAP2 SWAP1 PUSH2 0x13D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x3 SLOAD PUSH2 0x676 SWAP2 SWAP1 PUSH2 0x146A JUMP JUMPDEST SWAP1 POP PUSH2 0x682 DUP3 DUP3 PUSH2 0x1482 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x68F SWAP2 SWAP1 PUSH2 0x13D0 JUMP JUMPDEST PUSH2 0x69A SWAP1 PUSH1 0x1 PUSH2 0x146A JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x6A7 SWAP2 SWAP1 PUSH2 0x1482 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 SLOAD DUP4 PUSH2 0x6C0 SWAP2 SWAP1 PUSH2 0x13D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x4 SLOAD PUSH2 0x6D2 SWAP2 SWAP1 PUSH2 0x146A JUMP JUMPDEST SWAP1 POP PUSH2 0x6DE DUP3 DUP3 PUSH2 0x1482 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x6EB SWAP2 SWAP1 PUSH2 0x13D0 JUMP JUMPDEST PUSH2 0x6F6 SWAP1 PUSH1 0x1 PUSH2 0x146A JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x6A7 SWAP2 SWAP1 PUSH2 0x1482 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x762 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682073686172657320746F206469766573740000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH1 0x3 SLOAD PUSH2 0x775 SWAP2 SWAP1 PUSH2 0x140B JUMP JUMPDEST PUSH2 0x77F SWAP2 SWAP1 PUSH2 0x13D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP4 PUSH1 0x4 SLOAD PUSH2 0x794 SWAP2 SWAP1 PUSH2 0x140B JUMP JUMPDEST PUSH2 0x79E SWAP2 SWAP1 PUSH2 0x13D0 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x809 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x82D SWAP2 SWAP1 PUSH2 0x1448 JUMP JUMPDEST PUSH2 0x836 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x848 SWAP2 SWAP1 PUSH2 0x1482 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x861 SWAP2 SWAP1 PUSH2 0x1482 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0x876 SWAP2 SWAP1 PUSH2 0x140B JUMP JUMPDEST PUSH1 0x5 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x898 SWAP1 DUP5 SWAP1 PUSH2 0x1482 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8B1 SWAP2 SWAP1 PUSH2 0x1482 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP4 SWAP1 CALLER SWAP1 PUSH32 0x4C88FCF03215155A0D0A2FDBD430AB9F32013F00499B2899C180DC6077180CA SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 SLOAD GT PUSH2 0x8F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x94F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x973 SWAP2 SWAP1 PUSH2 0x1448 JUMP JUMPDEST PUSH2 0x9BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546B6E20494E207472616E73666572206661696C000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9CA DUP5 PUSH2 0x10A3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0xA1C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x65746850616964203C206D696E4574684F757400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 CALLER SWAP2 PUSH32 0x90E08377D523C5E583BEEFCDB6735844F8D4E305BE8E4E4003E940EE726CE24C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD ISZERO PUSH2 0xAE0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C697175696469747920706F6F6C20697320616C726561647920736565646564 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2C2075736520696E76657374282920696E737465616400000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0xAF0 JUMPI POP PUSH1 0x0 CALLVALUE GT JUMPDEST PUSH2 0xB3C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D75737420696E766573742045544820616E6420746F6B656E73000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB93 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBB7 SWAP2 SWAP1 PUSH2 0x1448 JUMP JUMPDEST POP PUSH1 0x4 DUP2 SWAP1 SSTORE CALLVALUE PUSH1 0x3 DUP2 SWAP1 SSTORE PUSH2 0xBCE SWAP1 DUP3 SWAP1 PUSH2 0x140B JUMP JUMPDEST PUSH1 0x5 SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH2 0x2710 SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x7 DUP2 SWAP1 SSTORE SWAP1 MLOAD SWAP1 SWAP3 SWAP2 PUSH32 0xFE123A1EFB6782DCCD20E9790951ADCFAB3CD0E11B85A6F06D8B9222D299A0A3 SWAP2 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 SLOAD GT PUSH2 0xC28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC33 CALLVALUE PUSH2 0x117A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0xC85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x746B6E7350616964203C206D696E546B6E734F75740000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLVALUE DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 CALLER SWAP2 PUSH32 0x623B3804FA71D67900D064613DA8F94B9617215EE90799290593E1745087AD18 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD37 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD5B SWAP2 SWAP1 PUSH2 0x1448 JUMP JUMPDEST PUSH2 0xDA7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546B6E204F5554207472616E73666572206661696C0000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD GT PUSH2 0xDBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE14 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE38 SWAP2 SWAP1 PUSH2 0x1448 JUMP JUMPDEST PUSH2 0xE84 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546B6E20494E207472616E73666572206661696C000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE8F DUP4 PUSH2 0x10A3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xEE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x457468206F757420697320746F6F20736D616C6C000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xC3C49A6300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xC3C49A63 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF45 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF69 SWAP2 SWAP1 PUSH2 0x136B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD91EFC3B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 DUP4 AND SWAP1 PUSH4 0xD91EFC3B SWAP1 DUP6 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFD8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFFD SWAP2 SWAP1 PUSH2 0x1388 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x104F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7574707574206C657373207468616E206D696E546F6B656E734F7574000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP3 SWAP1 DUP11 AND SWAP2 CALLER SWAP2 PUSH32 0x984DED3C86142A79D1FF62A9D57305E530E14653B3343AB5BAE22FFB4F99769C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 SLOAD DUP4 PUSH2 0x10B4 SWAP2 SWAP1 PUSH2 0x13D0 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x4 SLOAD PUSH2 0x10C4 SWAP2 SWAP1 PUSH2 0x146A JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x0 SWAP1 PUSH2 0x10D7 SWAP1 DUP4 SWAP1 PUSH2 0x1482 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x10E4 SWAP2 SWAP1 PUSH2 0x13D0 JUMP JUMPDEST PUSH2 0x10EF SWAP1 PUSH1 0x1 PUSH2 0x146A JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x10FC SWAP2 SWAP1 PUSH2 0x1482 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 SLOAD DUP2 GT ISZERO PUSH2 0x1150 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C61636B696E6720706F6F6C2065746800000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F5 JUMP JUMPDEST DUP1 PUSH1 0x3 SLOAD PUSH2 0x115E SWAP2 SWAP1 PUSH2 0x1482 JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE PUSH1 0x4 SLOAD PUSH2 0x1170 SWAP2 SWAP1 PUSH2 0x140B JUMP JUMPDEST PUSH1 0x5 SSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 SLOAD DUP4 PUSH2 0x118B SWAP2 SWAP1 PUSH2 0x13D0 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x3 SLOAD PUSH2 0x119B SWAP2 SWAP1 PUSH2 0x146A JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE PUSH1 0x0 SWAP1 PUSH2 0x11AE SWAP1 DUP4 SWAP1 PUSH2 0x1482 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x11BB SWAP2 SWAP1 PUSH2 0x13D0 JUMP JUMPDEST PUSH2 0x11C6 SWAP1 PUSH1 0x1 PUSH2 0x146A JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x11D3 SWAP2 SWAP1 PUSH2 0x1482 JUMP JUMPDEST SWAP1 POP PUSH1 0x4 SLOAD DUP2 GT ISZERO PUSH2 0x1227 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C61636B696E6720706F6F6C20746F6B656E7300000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F5 JUMP JUMPDEST DUP1 PUSH1 0x4 SLOAD PUSH2 0x1235 SWAP2 SWAP1 PUSH2 0x1482 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH2 0x1170 SWAP2 PUSH2 0x140B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x125B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1283 DUP2 PUSH2 0x1246 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x12C7 DUP2 PUSH2 0x1246 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDA7 DUP2 PUSH2 0x1246 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x130C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1317 DUP2 PUSH2 0x1246 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x133B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1346 DUP2 PUSH2 0x1246 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x1356 DUP2 PUSH2 0x1246 JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x137D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xDA7 DUP2 PUSH2 0x1246 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x139A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1406 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1443 JUMPI PUSH2 0x1443 PUSH2 0x13A1 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x145A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x147D JUMPI PUSH2 0x147D PUSH2 0x13A1 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1494 JUMPI PUSH2 0x1494 PUSH2 0x13A1 JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0xDE CODECOPY PUSH17 0xF41BE189E6CC73248A78C020EEF73523D6 PUSH14 0xB86D96B4ED20A0745D6E64736F6C PUSH4 0x4300080A STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 DUP15 CREATE2 MSTORE PUSH21 0xF22E5D7B4CDC7B66F7A06B2665AE646B522D57DB03 0x2A PUSH12 0x7F82BC5064736F6C63430008 EXP STOP CALLER ",
    "pcMap": {
        "0": {
            "offset": [
                313,
                1579
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x80"
        },
        "2": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x40"
        },
        "4": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "MSTORE",
            "path": "2"
        },
        "5": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "CALLVALUE",
            "path": "2"
        },
        "6": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "DUP1",
            "path": "2"
        },
        "7": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "ISZERO",
            "path": "2"
        },
        "8": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "PUSH2",
            "path": "2",
            "value": "0x10"
        },
        "11": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "JUMPI",
            "path": "2"
        },
        "12": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x0"
        },
        "14": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "DUP1",
            "path": "2"
        },
        "15": {
            "dev": "Cannot send ether to nonpayable function",
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "REVERT",
            "path": "2"
        },
        "16": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "JUMPDEST",
            "path": "2"
        },
        "17": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "POP",
            "path": "2"
        },
        "18": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x4"
        },
        "20": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "CALLDATASIZE",
            "path": "2"
        },
        "21": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "LT",
            "path": "2"
        },
        "22": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "PUSH2",
            "path": "2",
            "value": "0x88"
        },
        "25": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "JUMPI",
            "path": "2"
        },
        "26": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x0"
        },
        "28": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "CALLDATALOAD",
            "path": "2"
        },
        "29": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0xE0"
        },
        "31": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "SHR",
            "path": "2"
        },
        "32": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "DUP1",
            "path": "2"
        },
        "33": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "PUSH4",
            "path": "2",
            "value": "0xC3C49A63"
        },
        "38": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "GT",
            "path": "2"
        },
        "39": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "PUSH2",
            "path": "2",
            "value": "0x5B"
        },
        "42": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "JUMPI",
            "path": "2"
        },
        "43": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "DUP1",
            "path": "2"
        },
        "44": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "PUSH4",
            "path": "2",
            "value": "0xC3C49A63"
        },
        "49": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "EQ",
            "path": "2"
        },
        "50": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "PUSH2",
            "path": "2",
            "value": "0x104"
        },
        "53": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "JUMPI",
            "path": "2"
        },
        "54": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "DUP1",
            "path": "2"
        },
        "55": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "PUSH4",
            "path": "2",
            "value": "0xDB3D9387"
        },
        "60": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "EQ",
            "path": "2"
        },
        "61": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "PUSH2",
            "path": "2",
            "value": "0x12D"
        },
        "64": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "JUMPI",
            "path": "2"
        },
        "65": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "DUP1",
            "path": "2"
        },
        "66": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "PUSH4",
            "path": "2",
            "value": "0xE4A0DD8F"
        },
        "71": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "EQ",
            "path": "2"
        },
        "72": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "PUSH2",
            "path": "2",
            "value": "0x142"
        },
        "75": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "JUMPI",
            "path": "2"
        },
        "76": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "DUP1",
            "path": "2"
        },
        "77": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "PUSH4",
            "path": "2",
            "value": "0xFC1ED520"
        },
        "82": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "EQ",
            "path": "2"
        },
        "83": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "PUSH2",
            "path": "2",
            "value": "0x16B"
        },
        "86": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "JUMPI",
            "path": "2"
        },
        "87": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x0"
        },
        "89": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "DUP1",
            "path": "2"
        },
        "90": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "REVERT",
            "path": "2"
        },
        "91": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "JUMPDEST",
            "path": "2"
        },
        "92": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "DUP1",
            "path": "2"
        },
        "93": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "PUSH4",
            "path": "2",
            "value": "0x53E9EF55"
        },
        "98": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "EQ",
            "path": "2"
        },
        "99": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "PUSH2",
            "path": "2",
            "value": "0x8D"
        },
        "102": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "JUMPI",
            "path": "2"
        },
        "103": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "DUP1",
            "path": "2"
        },
        "104": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "PUSH4",
            "path": "2",
            "value": "0x68972E50"
        },
        "109": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "EQ",
            "path": "2"
        },
        "110": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "PUSH2",
            "path": "2",
            "value": "0xD6"
        },
        "113": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "JUMPI",
            "path": "2"
        },
        "114": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "DUP1",
            "path": "2"
        },
        "115": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "PUSH4",
            "path": "2",
            "value": "0x978BBDB9"
        },
        "120": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "EQ",
            "path": "2"
        },
        "121": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "PUSH2",
            "path": "2",
            "value": "0xE8"
        },
        "124": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "JUMPI",
            "path": "2"
        },
        "125": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "DUP1",
            "path": "2"
        },
        "126": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "PUSH4",
            "path": "2",
            "value": "0x98BA6219"
        },
        "131": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "EQ",
            "path": "2"
        },
        "132": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "PUSH2",
            "path": "2",
            "value": "0xF1"
        },
        "135": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "JUMPI",
            "path": "2"
        },
        "136": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "JUMPDEST",
            "path": "2"
        },
        "137": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x0"
        },
        "139": {
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "DUP1",
            "path": "2"
        },
        "140": {
            "first_revert": true,
            "fn": null,
            "offset": [
                313,
                1579
            ],
            "op": "REVERT",
            "path": "2"
        },
        "141": {
            "fn": "AstroSwapFactory.convertExchangeToToken",
            "offset": [
                817,
                952
            ],
            "op": "JUMPDEST",
            "path": "2"
        },
        "142": {
            "fn": "AstroSwapFactory.convertExchangeToToken",
            "offset": [
                817,
                952
            ],
            "op": "PUSH2",
            "path": "2",
            "value": "0xB9"
        },
        "145": {
            "fn": "AstroSwapFactory.convertExchangeToToken",
            "offset": [
                817,
                952
            ],
            "op": "PUSH2",
            "path": "2",
            "value": "0x9B"
        },
        "148": {
            "fn": "AstroSwapFactory.convertExchangeToToken",
            "offset": [
                817,
                952
            ],
            "op": "CALLDATASIZE",
            "path": "2"
        },
        "149": {
            "fn": "AstroSwapFactory.convertExchangeToToken",
            "offset": [
                817,
                952
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x4"
        },
        "151": {
            "fn": "AstroSwapFactory.convertExchangeToToken",
            "offset": [
                817,
                952
            ],
            "op": "PUSH2",
            "path": "2",
            "value": "0x36E"
        },
        "154": {
            "fn": "AstroSwapFactory.convertExchangeToToken",
            "jump": "i",
            "offset": [
                817,
                952
            ],
            "op": "JUMP",
            "path": "2"
        },
        "155": {
            "fn": "AstroSwapFactory.convertExchangeToToken",
            "offset": [
                817,
                952
            ],
            "op": "JUMPDEST",
            "path": "2"
        },
        "156": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "158": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "160": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "162": {
            "op": "SHL"
        },
        "163": {
            "op": "SUB"
        },
        "164": {
            "fn": "AstroSwapFactory.convertExchangeToToken",
            "offset": [
                920,
                945
            ],
            "op": "SWAP1",
            "path": "2",
            "statement": 0
        },
        "165": {
            "fn": "AstroSwapFactory.convertExchangeToToken",
            "offset": [
                920,
                945
            ],
            "op": "DUP2",
            "path": "2"
        },
        "166": {
            "fn": "AstroSwapFactory.convertExchangeToToken",
            "offset": [
                920,
                945
            ],
            "op": "AND",
            "path": "2"
        },
        "167": {
            "fn": "AstroSwapFactory.convertExchangeToToken",
            "offset": [
                888,
                901
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x0"
        },
        "169": {
            "fn": "AstroSwapFactory.convertExchangeToToken",
            "offset": [
                920,
                945
            ],
            "op": "SWAP1",
            "path": "2"
        },
        "170": {
            "fn": "AstroSwapFactory.convertExchangeToToken",
            "offset": [
                920,
                945
            ],
            "op": "DUP2",
            "path": "2"
        },
        "171": {
            "fn": "AstroSwapFactory.convertExchangeToToken",
            "offset": [
                920,
                945
            ],
            "op": "MSTORE",
            "path": "2"
        },
        "172": {
            "fn": "AstroSwapFactory.convertExchangeToToken",
            "offset": [
                920,
                935
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x3"
        },
        "174": {
            "fn": "AstroSwapFactory.convertExchangeToToken",
            "offset": [
                920,
                945
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x20"
        },
        "176": {
            "fn": "AstroSwapFactory.convertExchangeToToken",
            "offset": [
                920,
                945
            ],
            "op": "MSTORE",
            "path": "2"
        },
        "177": {
            "fn": "AstroSwapFactory.convertExchangeToToken",
            "offset": [
                920,
                945
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x40"
        },
        "179": {
            "fn": "AstroSwapFactory.convertExchangeToToken",
            "offset": [
                920,
                945
            ],
            "op": "SWAP1",
            "path": "2"
        },
        "180": {
            "fn": "AstroSwapFactory.convertExchangeToToken",
            "offset": [
                920,
                945
            ],
            "op": "KECCAK256",
            "path": "2"
        },
        "181": {
            "fn": "AstroSwapFactory.convertExchangeToToken",
            "offset": [
                920,
                945
            ],
            "op": "SLOAD",
            "path": "2"
        },
        "182": {
            "fn": "AstroSwapFactory.convertExchangeToToken",
            "offset": [
                920,
                945
            ],
            "op": "AND",
            "path": "2"
        },
        "183": {
            "fn": "AstroSwapFactory.convertExchangeToToken",
            "offset": [
                920,
                945
            ],
            "op": "SWAP1",
            "path": "2"
        },
        "184": {
            "fn": "AstroSwapFactory.convertExchangeToToken",
            "offset": [
                817,
                952
            ],
            "op": "JUMP",
            "path": "2"
        },
        "185": {
            "fn": "AstroSwapFactory.convertExchangeToToken",
            "offset": [
                817,
                952
            ],
            "op": "JUMPDEST",
            "path": "2"
        },
        "186": {
            "fn": "AstroSwapFactory.convertExchangeToToken",
            "offset": [
                817,
                952
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x40"
        },
        "188": {
            "fn": "AstroSwapFactory.convertExchangeToToken",
            "offset": [
                817,
                952
            ],
            "op": "MLOAD",
            "path": "2"
        },
        "189": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "191": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "193": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "195": {
            "op": "SHL"
        },
        "196": {
            "op": "SUB"
        },
        "197": {
            "op": "SWAP1"
        },
        "198": {
            "op": "SWAP2"
        },
        "199": {
            "op": "AND"
        },
        "200": {
            "op": "DUP2"
        },
        "201": {
            "op": "MSTORE"
        },
        "202": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "204": {
            "op": "ADD"
        },
        "205": {
            "fn": "AstroSwapFactory.convertExchangeToToken",
            "offset": [
                817,
                952
            ],
            "op": "JUMPDEST",
            "path": "2"
        },
        "206": {
            "fn": "AstroSwapFactory.convertExchangeToToken",
            "offset": [
                817,
                952
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x40"
        },
        "208": {
            "fn": "AstroSwapFactory.convertExchangeToToken",
            "offset": [
                817,
                952
            ],
            "op": "MLOAD",
            "path": "2"
        },
        "209": {
            "fn": "AstroSwapFactory.convertExchangeToToken",
            "offset": [
                817,
                952
            ],
            "op": "DUP1",
            "path": "2"
        },
        "210": {
            "fn": "AstroSwapFactory.convertExchangeToToken",
            "offset": [
                817,
                952
            ],
            "op": "SWAP2",
            "path": "2"
        },
        "211": {
            "fn": "AstroSwapFactory.convertExchangeToToken",
            "offset": [
                817,
                952
            ],
            "op": "SUB",
            "path": "2"
        },
        "212": {
            "fn": "AstroSwapFactory.convertExchangeToToken",
            "offset": [
                817,
                952
            ],
            "op": "SWAP1",
            "path": "2"
        },
        "213": {
            "fn": "AstroSwapFactory.convertExchangeToToken",
            "offset": [
                817,
                952
            ],
            "op": "RETURN",
            "path": "2"
        },
        "214": {
            "fn": "AstroSwapFactory.exchangeCount",
            "offset": [
                958,
                1065
            ],
            "op": "JUMPDEST",
            "path": "2"
        },
        "215": {
            "fn": "AstroSwapFactory.exchangeCount",
            "offset": [
                1036,
                1051
            ],
            "op": "PUSH1",
            "path": "2",
            "statement": 1,
            "value": "0x1"
        },
        "217": {
            "fn": "AstroSwapFactory.exchangeCount",
            "offset": [
                1036,
                1058
            ],
            "op": "SLOAD",
            "path": "2"
        },
        "218": {
            "fn": "AstroSwapFactory.exchangeCount",
            "offset": [
                958,
                1065
            ],
            "op": "JUMPDEST",
            "path": "2"
        },
        "219": {
            "fn": "AstroSwapFactory.exchangeCount",
            "offset": [
                958,
                1065
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x40"
        },
        "221": {
            "fn": "AstroSwapFactory.exchangeCount",
            "offset": [
                958,
                1065
            ],
            "op": "MLOAD",
            "path": "2"
        },
        "222": {
            "op": "SWAP1"
        },
        "223": {
            "op": "DUP2"
        },
        "224": {
            "op": "MSTORE"
        },
        "225": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "227": {
            "op": "ADD"
        },
        "228": {
            "fn": "AstroSwapFactory.exchangeCount",
            "offset": [
                958,
                1065
            ],
            "op": "PUSH2",
            "path": "2",
            "value": "0xCD"
        },
        "231": {
            "op": "JUMP"
        },
        "232": {
            "offset": [
                345,
                367
            ],
            "op": "JUMPDEST",
            "path": "2"
        },
        "233": {
            "fn": "AstroSwapFactory.exchangeCount",
            "offset": [
                345,
                367
            ],
            "op": "PUSH2",
            "path": "2",
            "value": "0xDA"
        },
        "236": {
            "fn": "AstroSwapFactory.exchangeCount",
            "offset": [
                345,
                367
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x0"
        },
        "238": {
            "fn": "AstroSwapFactory.exchangeCount",
            "offset": [
                345,
                367
            ],
            "op": "SLOAD",
            "path": "2"
        },
        "239": {
            "fn": "AstroSwapFactory.exchangeCount",
            "offset": [
                345,
                367
            ],
            "op": "DUP2",
            "path": "2"
        },
        "240": {
            "fn": "AstroSwapFactory.exchangeCount",
            "offset": [
                345,
                367
            ],
            "op": "JUMP",
            "path": "2"
        },
        "241": {
            "offset": [
                373,
                405
            ],
            "op": "JUMPDEST",
            "path": "2"
        },
        "242": {
            "fn": "AstroSwapFactory.exchangeCount",
            "offset": [
                373,
                405
            ],
            "op": "PUSH2",
            "path": "2",
            "value": "0xB9"
        },
        "245": {
            "fn": "AstroSwapFactory.exchangeCount",
            "offset": [
                373,
                405
            ],
            "op": "PUSH2",
            "path": "2",
            "value": "0xFF"
        },
        "248": {
            "fn": "AstroSwapFactory.exchangeCount",
            "offset": [
                373,
                405
            ],
            "op": "CALLDATASIZE",
            "path": "2"
        },
        "249": {
            "fn": "AstroSwapFactory.exchangeCount",
            "offset": [
                373,
                405
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x4"
        },
        "251": {
            "fn": "AstroSwapFactory.exchangeCount",
            "offset": [
                373,
                405
            ],
            "op": "PUSH2",
            "path": "2",
            "value": "0x39E"
        },
        "254": {
            "fn": "AstroSwapFactory.exchangeCount",
            "jump": "i",
            "offset": [
                373,
                405
            ],
            "op": "JUMP",
            "path": "2"
        },
        "255": {
            "fn": "AstroSwapFactory.exchangeCount",
            "offset": [
                373,
                405
            ],
            "op": "JUMPDEST",
            "path": "2"
        },
        "256": {
            "fn": "AstroSwapFactory.exchangeCount",
            "offset": [
                373,
                405
            ],
            "op": "PUSH2",
            "path": "2",
            "value": "0x197"
        },
        "259": {
            "fn": "AstroSwapFactory.exchangeCount",
            "jump": "i",
            "offset": [
                373,
                405
            ],
            "op": "JUMP",
            "path": "2"
        },
        "260": {
            "offset": [
                411,
                461
            ],
            "op": "JUMPDEST",
            "path": "2"
        },
        "261": {
            "fn": "AstroSwapFactory.exchangeCount",
            "offset": [
                411,
                461
            ],
            "op": "PUSH2",
            "path": "2",
            "value": "0xB9"
        },
        "264": {
            "fn": "AstroSwapFactory.exchangeCount",
            "offset": [
                411,
                461
            ],
            "op": "PUSH2",
            "path": "2",
            "value": "0x112"
        },
        "267": {
            "fn": "AstroSwapFactory.exchangeCount",
            "offset": [
                411,
                461
            ],
            "op": "CALLDATASIZE",
            "path": "2"
        },
        "268": {
            "fn": "AstroSwapFactory.exchangeCount",
            "offset": [
                411,
                461
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x4"
        },
        "270": {
            "fn": "AstroSwapFactory.exchangeCount",
            "offset": [
                411,
                461
            ],
            "op": "PUSH2",
            "path": "2",
            "value": "0x36E"
        },
        "273": {
            "fn": "AstroSwapFactory.exchangeCount",
            "jump": "i",
            "offset": [
                411,
                461
            ],
            "op": "JUMP",
            "path": "2"
        },
        "274": {
            "fn": "AstroSwapFactory.exchangeCount",
            "offset": [
                411,
                461
            ],
            "op": "JUMPDEST",
            "path": "2"
        },
        "275": {
            "fn": "AstroSwapFactory.exchangeCount",
            "offset": [
                411,
                461
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x2"
        },
        "277": {
            "fn": "AstroSwapFactory.exchangeCount",
            "offset": [
                411,
                461
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x20"
        },
        "279": {
            "fn": "AstroSwapFactory.exchangeCount",
            "offset": [
                411,
                461
            ],
            "op": "MSTORE",
            "path": "2"
        },
        "280": {
            "fn": "AstroSwapFactory.exchangeCount",
            "offset": [
                411,
                461
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x0"
        },
        "282": {
            "fn": "AstroSwapFactory.exchangeCount",
            "offset": [
                411,
                461
            ],
            "op": "SWAP1",
            "path": "2"
        },
        "283": {
            "fn": "AstroSwapFactory.exchangeCount",
            "offset": [
                411,
                461
            ],
            "op": "DUP2",
            "path": "2"
        },
        "284": {
            "fn": "AstroSwapFactory.exchangeCount",
            "offset": [
                411,
                461
            ],
            "op": "MSTORE",
            "path": "2"
        },
        "285": {
            "fn": "AstroSwapFactory.exchangeCount",
            "offset": [
                411,
                461
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x40"
        },
        "287": {
            "fn": "AstroSwapFactory.exchangeCount",
            "offset": [
                411,
                461
            ],
            "op": "SWAP1",
            "path": "2"
        },
        "288": {
            "fn": "AstroSwapFactory.exchangeCount",
            "offset": [
                411,
                461
            ],
            "op": "KECCAK256",
            "path": "2"
        },
        "289": {
            "fn": "AstroSwapFactory.exchangeCount",
            "offset": [
                411,
                461
            ],
            "op": "SLOAD",
            "path": "2"
        },
        "290": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "292": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "294": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "296": {
            "op": "SHL"
        },
        "297": {
            "op": "SUB"
        },
        "298": {
            "offset": [
                411,
                461
            ],
            "op": "AND",
            "path": "2"
        },
        "299": {
            "fn": "AstroSwapFactory.exchangeCount",
            "offset": [
                411,
                461
            ],
            "op": "DUP2",
            "path": "2"
        },
        "300": {
            "fn": "AstroSwapFactory.exchangeCount",
            "offset": [
                411,
                461
            ],
            "op": "JUMP",
            "path": "2"
        },
        "301": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1071,
                1577
            ],
            "op": "JUMPDEST",
            "path": "2"
        },
        "302": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1071,
                1577
            ],
            "op": "PUSH2",
            "path": "2",
            "value": "0x140"
        },
        "305": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1071,
                1577
            ],
            "op": "PUSH2",
            "path": "2",
            "value": "0x13B"
        },
        "308": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1071,
                1577
            ],
            "op": "CALLDATASIZE",
            "path": "2"
        },
        "309": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1071,
                1577
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x4"
        },
        "311": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1071,
                1577
            ],
            "op": "PUSH2",
            "path": "2",
            "value": "0x36E"
        },
        "314": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "jump": "i",
            "offset": [
                1071,
                1577
            ],
            "op": "JUMP",
            "path": "2"
        },
        "315": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1071,
                1577
            ],
            "op": "JUMPDEST",
            "path": "2"
        },
        "316": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1071,
                1577
            ],
            "op": "PUSH2",
            "path": "2",
            "value": "0x1C1"
        },
        "319": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "jump": "i",
            "offset": [
                1071,
                1577
            ],
            "op": "JUMP",
            "path": "2"
        },
        "320": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1071,
                1577
            ],
            "op": "JUMPDEST",
            "path": "2"
        },
        "321": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1071,
                1577
            ],
            "op": "STOP",
            "path": "2"
        },
        "322": {
            "offset": [
                467,
                517
            ],
            "op": "JUMPDEST",
            "path": "2"
        },
        "323": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                467,
                517
            ],
            "op": "PUSH2",
            "path": "2",
            "value": "0xB9"
        },
        "326": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                467,
                517
            ],
            "op": "PUSH2",
            "path": "2",
            "value": "0x150"
        },
        "329": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                467,
                517
            ],
            "op": "CALLDATASIZE",
            "path": "2"
        },
        "330": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                467,
                517
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x4"
        },
        "332": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                467,
                517
            ],
            "op": "PUSH2",
            "path": "2",
            "value": "0x36E"
        },
        "335": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "jump": "i",
            "offset": [
                467,
                517
            ],
            "op": "JUMP",
            "path": "2"
        },
        "336": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                467,
                517
            ],
            "op": "JUMPDEST",
            "path": "2"
        },
        "337": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                467,
                517
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x3"
        },
        "339": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                467,
                517
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x20"
        },
        "341": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                467,
                517
            ],
            "op": "MSTORE",
            "path": "2"
        },
        "342": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                467,
                517
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x0"
        },
        "344": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                467,
                517
            ],
            "op": "SWAP1",
            "path": "2"
        },
        "345": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                467,
                517
            ],
            "op": "DUP2",
            "path": "2"
        },
        "346": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                467,
                517
            ],
            "op": "MSTORE",
            "path": "2"
        },
        "347": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                467,
                517
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x40"
        },
        "349": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                467,
                517
            ],
            "op": "SWAP1",
            "path": "2"
        },
        "350": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                467,
                517
            ],
            "op": "KECCAK256",
            "path": "2"
        },
        "351": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                467,
                517
            ],
            "op": "SLOAD",
            "path": "2"
        },
        "352": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "354": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "356": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "358": {
            "op": "SHL"
        },
        "359": {
            "op": "SUB"
        },
        "360": {
            "offset": [
                467,
                517
            ],
            "op": "AND",
            "path": "2"
        },
        "361": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                467,
                517
            ],
            "op": "DUP2",
            "path": "2"
        },
        "362": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                467,
                517
            ],
            "op": "JUMP",
            "path": "2"
        },
        "363": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                679,
                811
            ],
            "op": "JUMPDEST",
            "path": "2"
        },
        "364": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                679,
                811
            ],
            "op": "PUSH2",
            "path": "2",
            "value": "0xB9"
        },
        "367": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                679,
                811
            ],
            "op": "PUSH2",
            "path": "2",
            "value": "0x179"
        },
        "370": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                679,
                811
            ],
            "op": "CALLDATASIZE",
            "path": "2"
        },
        "371": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                679,
                811
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x4"
        },
        "373": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                679,
                811
            ],
            "op": "PUSH2",
            "path": "2",
            "value": "0x36E"
        },
        "376": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "jump": "i",
            "offset": [
                679,
                811
            ],
            "op": "JUMP",
            "path": "2"
        },
        "377": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                679,
                811
            ],
            "op": "JUMPDEST",
            "path": "2"
        },
        "378": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "380": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "382": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "384": {
            "op": "SHL"
        },
        "385": {
            "op": "SUB"
        },
        "386": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                782,
                804
            ],
            "op": "SWAP1",
            "path": "2",
            "statement": 2
        },
        "387": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                782,
                804
            ],
            "op": "DUP2",
            "path": "2"
        },
        "388": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                782,
                804
            ],
            "op": "AND",
            "path": "2"
        },
        "389": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                747,
                763
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x0"
        },
        "391": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                782,
                804
            ],
            "op": "SWAP1",
            "path": "2"
        },
        "392": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                782,
                804
            ],
            "op": "DUP2",
            "path": "2"
        },
        "393": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                782,
                804
            ],
            "op": "MSTORE",
            "path": "2"
        },
        "394": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                782,
                797
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x2"
        },
        "396": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                782,
                804
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x20"
        },
        "398": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                782,
                804
            ],
            "op": "MSTORE",
            "path": "2"
        },
        "399": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                782,
                804
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x40"
        },
        "401": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                782,
                804
            ],
            "op": "SWAP1",
            "path": "2"
        },
        "402": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                782,
                804
            ],
            "op": "KECCAK256",
            "path": "2"
        },
        "403": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                782,
                804
            ],
            "op": "SLOAD",
            "path": "2"
        },
        "404": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                782,
                804
            ],
            "op": "AND",
            "path": "2"
        },
        "405": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                782,
                804
            ],
            "op": "SWAP1",
            "path": "2"
        },
        "406": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                679,
                811
            ],
            "op": "JUMP",
            "path": "2"
        },
        "407": {
            "offset": [
                373,
                405
            ],
            "op": "JUMPDEST",
            "path": "2"
        },
        "408": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                373,
                405
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x1"
        },
        "410": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                373,
                405
            ],
            "op": "DUP2",
            "path": "2"
        },
        "411": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                373,
                405
            ],
            "op": "DUP2",
            "path": "2"
        },
        "412": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                373,
                405
            ],
            "op": "SLOAD",
            "path": "2"
        },
        "413": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                373,
                405
            ],
            "op": "DUP2",
            "path": "2"
        },
        "414": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                373,
                405
            ],
            "op": "LT",
            "path": "2"
        },
        "415": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                373,
                405
            ],
            "op": "PUSH2",
            "path": "2",
            "value": "0x1A7"
        },
        "418": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                373,
                405
            ],
            "op": "JUMPI",
            "path": "2"
        },
        "419": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                373,
                405
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x0"
        },
        "421": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                373,
                405
            ],
            "op": "DUP1",
            "path": "2"
        },
        "422": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                373,
                405
            ],
            "op": "REVERT",
            "path": "2"
        },
        "423": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                373,
                405
            ],
            "op": "JUMPDEST",
            "path": "2"
        },
        "424": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                373,
                405
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x0"
        },
        "426": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                373,
                405
            ],
            "op": "SWAP2",
            "path": "2"
        },
        "427": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                373,
                405
            ],
            "op": "DUP3",
            "path": "2"
        },
        "428": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                373,
                405
            ],
            "op": "MSTORE",
            "path": "2"
        },
        "429": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                373,
                405
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x20"
        },
        "431": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                373,
                405
            ],
            "op": "SWAP1",
            "path": "2"
        },
        "432": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                373,
                405
            ],
            "op": "SWAP2",
            "path": "2"
        },
        "433": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                373,
                405
            ],
            "op": "KECCAK256",
            "path": "2"
        },
        "434": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                373,
                405
            ],
            "op": "ADD",
            "path": "2"
        },
        "435": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                373,
                405
            ],
            "op": "SLOAD",
            "path": "2"
        },
        "436": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "438": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "440": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "442": {
            "op": "SHL"
        },
        "443": {
            "op": "SUB"
        },
        "444": {
            "offset": [
                373,
                405
            ],
            "op": "AND",
            "path": "2"
        },
        "445": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "offset": [
                373,
                405
            ],
            "op": "SWAP1",
            "path": "2"
        },
        "446": {
            "op": "POP"
        },
        "447": {
            "offset": [
                373,
                405
            ],
            "op": "DUP2",
            "path": "2"
        },
        "448": {
            "fn": "AstroSwapFactory.convertTokenToExchange",
            "jump": "o",
            "offset": [
                373,
                405
            ],
            "op": "JUMP",
            "path": "2"
        },
        "449": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1071,
                1577
            ],
            "op": "JUMPDEST",
            "path": "2"
        },
        "450": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "452": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "454": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "456": {
            "op": "SHL"
        },
        "457": {
            "op": "SUB"
        },
        "458": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1144,
                1173
            ],
            "op": "DUP2",
            "path": "2",
            "statement": 3
        },
        "459": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1144,
                1173
            ],
            "op": "DUP2",
            "path": "2"
        },
        "460": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1144,
                1173
            ],
            "op": "AND",
            "path": "2"
        },
        "461": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1185,
                1186
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x0"
        },
        "463": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1144,
                1173
            ],
            "op": "SWAP1",
            "path": "2"
        },
        "464": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1144,
                1173
            ],
            "op": "DUP2",
            "path": "2"
        },
        "465": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1144,
                1173
            ],
            "op": "MSTORE",
            "path": "2"
        },
        "466": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1144,
                1159
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x2"
        },
        "468": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1144,
                1173
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x20"
        },
        "470": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1144,
                1173
            ],
            "op": "MSTORE",
            "path": "2"
        },
        "471": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1144,
                1173
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x40"
        },
        "473": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1144,
                1173
            ],
            "op": "SWAP1",
            "path": "2"
        },
        "474": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1144,
                1173
            ],
            "op": "KECCAK256",
            "path": "2"
        },
        "475": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1144,
                1173
            ],
            "op": "SLOAD",
            "path": "2"
        },
        "476": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1144,
                1173
            ],
            "op": "AND",
            "path": "2"
        },
        "477": {
            "branch": 9,
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1144,
                1187
            ],
            "op": "ISZERO",
            "path": "2"
        },
        "478": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1136,
                1206
            ],
            "op": "PUSH2",
            "path": "2",
            "value": "0x247"
        },
        "481": {
            "branch": 9,
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1136,
                1206
            ],
            "op": "JUMPI",
            "path": "2"
        },
        "482": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1136,
                1206
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x40"
        },
        "484": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1136,
                1206
            ],
            "op": "MLOAD",
            "path": "2"
        },
        "485": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1136,
                1206
            ],
            "op": "PUSH32",
            "path": "2",
            "value": "0x8C379A000000000000000000000000000000000000000000000000000000000"
        },
        "518": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1136,
                1206
            ],
            "op": "DUP2",
            "path": "2"
        },
        "519": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1136,
                1206
            ],
            "op": "MSTORE",
            "path": "2"
        },
        "520": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "522": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1136,
                1206
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x4"
        },
        "524": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1136,
                1206
            ],
            "op": "DUP3",
            "path": "2"
        },
        "525": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1136,
                1206
            ],
            "op": "ADD",
            "path": "2"
        },
        "526": {
            "op": "MSTORE"
        },
        "527": {
            "op": "PUSH1",
            "value": "0xE"
        },
        "529": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "531": {
            "op": "DUP3"
        },
        "532": {
            "op": "ADD"
        },
        "533": {
            "op": "MSTORE"
        },
        "534": {
            "op": "PUSH32",
            "value": "0x416C6C7265616479206164646564000000000000000000000000000000000000"
        },
        "567": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "569": {
            "op": "DUP3"
        },
        "570": {
            "op": "ADD"
        },
        "571": {
            "op": "MSTORE"
        },
        "572": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "574": {
            "op": "ADD"
        },
        "575": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1136,
                1206
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x40"
        },
        "577": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1136,
                1206
            ],
            "op": "MLOAD",
            "path": "2"
        },
        "578": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1136,
                1206
            ],
            "op": "DUP1",
            "path": "2"
        },
        "579": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1136,
                1206
            ],
            "op": "SWAP2",
            "path": "2"
        },
        "580": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1136,
                1206
            ],
            "op": "SUB",
            "path": "2"
        },
        "581": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1136,
                1206
            ],
            "op": "SWAP1",
            "path": "2"
        },
        "582": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1136,
                1206
            ],
            "op": "REVERT",
            "optimizer_revert": true,
            "path": "2"
        },
        "583": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1136,
                1206
            ],
            "op": "JUMPDEST",
            "path": "2"
        },
        "584": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "586": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "588": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "590": {
            "op": "SHL"
        },
        "591": {
            "op": "SUB"
        },
        "592": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1224,
                1250
            ],
            "op": "DUP2",
            "path": "2",
            "statement": 4
        },
        "593": {
            "branch": 10,
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1224,
                1250
            ],
            "op": "AND",
            "path": "2"
        },
        "594": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1216,
                1251
            ],
            "op": "PUSH2",
            "path": "2",
            "value": "0x25A"
        },
        "597": {
            "branch": 10,
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1216,
                1251
            ],
            "op": "JUMPI",
            "path": "2"
        },
        "598": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1216,
                1251
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x0"
        },
        "600": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1216,
                1251
            ],
            "op": "DUP1",
            "path": "2"
        },
        "601": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1216,
                1251
            ],
            "op": "REVERT",
            "path": "2"
        },
        "602": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1216,
                1251
            ],
            "op": "JUMPDEST",
            "path": "2"
        },
        "603": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1261,
                1287
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x0"
        },
        "605": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1319,
                1331
            ],
            "op": "DUP2",
            "path": "2"
        },
        "606": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1334,
                1341
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x0"
        },
        "608": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1334,
                1341
            ],
            "op": "SLOAD",
            "path": "2"
        },
        "609": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1290,
                1342
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x40"
        },
        "611": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1290,
                1342
            ],
            "op": "MLOAD",
            "path": "2"
        },
        "612": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1290,
                1342
            ],
            "op": "PUSH2",
            "path": "2",
            "value": "0x26C"
        },
        "615": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1290,
                1342
            ],
            "op": "SWAP1",
            "path": "2"
        },
        "616": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1290,
                1342
            ],
            "op": "PUSH2",
            "path": "2",
            "value": "0x361"
        },
        "619": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "jump": "i",
            "offset": [
                1290,
                1342
            ],
            "op": "JUMP",
            "path": "2"
        },
        "620": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1290,
                1342
            ],
            "op": "JUMPDEST",
            "path": "2"
        },
        "621": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "623": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "625": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "627": {
            "op": "SHL"
        },
        "628": {
            "op": "SUB"
        },
        "629": {
            "op": "SWAP1"
        },
        "630": {
            "op": "SWAP3"
        },
        "631": {
            "op": "AND"
        },
        "632": {
            "op": "DUP3"
        },
        "633": {
            "op": "MSTORE"
        },
        "634": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "636": {
            "op": "DUP3"
        },
        "637": {
            "op": "ADD"
        },
        "638": {
            "op": "MSTORE"
        },
        "639": {
            "op": "PUSH1",
            "value": "0x40"
        },
        "641": {
            "op": "ADD"
        },
        "642": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1290,
                1342
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x40"
        },
        "644": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1290,
                1342
            ],
            "op": "MLOAD",
            "path": "2"
        },
        "645": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1290,
                1342
            ],
            "op": "DUP1",
            "path": "2"
        },
        "646": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1290,
                1342
            ],
            "op": "SWAP2",
            "path": "2"
        },
        "647": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1290,
                1342
            ],
            "op": "SUB",
            "path": "2"
        },
        "648": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1290,
                1342
            ],
            "op": "SWAP1",
            "path": "2"
        },
        "649": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1290,
                1342
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x0"
        },
        "651": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1290,
                1342
            ],
            "op": "CREATE",
            "path": "2"
        },
        "652": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1290,
                1342
            ],
            "op": "DUP1",
            "path": "2"
        },
        "653": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1290,
                1342
            ],
            "op": "ISZERO",
            "path": "2"
        },
        "654": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1290,
                1342
            ],
            "op": "DUP1",
            "path": "2"
        },
        "655": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1290,
                1342
            ],
            "op": "ISZERO",
            "path": "2"
        },
        "656": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1290,
                1342
            ],
            "op": "PUSH2",
            "path": "2",
            "value": "0x29D"
        },
        "659": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1290,
                1342
            ],
            "op": "JUMPI",
            "path": "2"
        },
        "660": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1290,
                1342
            ],
            "op": "RETURNDATASIZE",
            "path": "2"
        },
        "661": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1290,
                1342
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x0"
        },
        "663": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1290,
                1342
            ],
            "op": "DUP1",
            "path": "2"
        },
        "664": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1290,
                1342
            ],
            "op": "RETURNDATACOPY",
            "path": "2"
        },
        "665": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1290,
                1342
            ],
            "op": "RETURNDATASIZE",
            "path": "2"
        },
        "666": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1290,
                1342
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x0"
        },
        "668": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1290,
                1342
            ],
            "op": "REVERT",
            "path": "2"
        },
        "669": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1290,
                1342
            ],
            "op": "JUMPDEST",
            "path": "2"
        },
        "670": {
            "op": "POP"
        },
        "671": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1352,
                1367
            ],
            "op": "PUSH1",
            "path": "2",
            "statement": 5,
            "value": "0x1"
        },
        "673": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1352,
                1386
            ],
            "op": "DUP1",
            "path": "2"
        },
        "674": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1352,
                1386
            ],
            "op": "SLOAD",
            "path": "2"
        },
        "675": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1352,
                1386
            ],
            "op": "DUP1",
            "path": "2"
        },
        "676": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1352,
                1386
            ],
            "op": "DUP3",
            "path": "2"
        },
        "677": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1352,
                1386
            ],
            "op": "ADD",
            "path": "2"
        },
        "678": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1352,
                1386
            ],
            "op": "SWAP1",
            "path": "2"
        },
        "679": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1352,
                1386
            ],
            "op": "SWAP2",
            "path": "2"
        },
        "680": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1352,
                1386
            ],
            "op": "SSTORE",
            "path": "2"
        },
        "681": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1352,
                1386
            ],
            "op": "PUSH32",
            "path": "2",
            "value": "0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6"
        },
        "714": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1352,
                1386
            ],
            "op": "ADD",
            "path": "2"
        },
        "715": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1352,
                1386
            ],
            "op": "DUP1",
            "path": "2"
        },
        "716": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1352,
                1386
            ],
            "op": "SLOAD",
            "path": "2"
        },
        "717": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "719": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "721": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "723": {
            "op": "SHL"
        },
        "724": {
            "op": "SUB"
        },
        "725": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1352,
                1386
            ],
            "op": "DUP1",
            "path": "2"
        },
        "726": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1352,
                1386
            ],
            "op": "DUP7",
            "path": "2"
        },
        "727": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1352,
                1386
            ],
            "op": "AND",
            "path": "2"
        },
        "728": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1352,
                1386
            ],
            "op": "PUSH32",
            "path": "2",
            "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
        },
        "761": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1352,
                1386
            ],
            "op": "SWAP3",
            "path": "2"
        },
        "762": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1352,
                1386
            ],
            "op": "DUP4",
            "path": "2"
        },
        "763": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1352,
                1386
            ],
            "op": "AND",
            "path": "2"
        },
        "764": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1352,
                1386
            ],
            "op": "DUP2",
            "path": "2"
        },
        "765": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1352,
                1386
            ],
            "op": "OR",
            "path": "2"
        },
        "766": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1352,
                1386
            ],
            "op": "SWAP1",
            "path": "2"
        },
        "767": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1352,
                1386
            ],
            "op": "SWAP4",
            "path": "2"
        },
        "768": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1352,
                1386
            ],
            "op": "SSTORE",
            "path": "2"
        },
        "769": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "771": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1396,
                1425
            ],
            "op": "DUP4",
            "path": "2",
            "statement": 6
        },
        "772": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1396,
                1425
            ],
            "op": "DUP2",
            "path": "2"
        },
        "773": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1396,
                1425
            ],
            "op": "MSTORE",
            "path": "2"
        },
        "774": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1396,
                1411
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x2"
        },
        "776": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1352,
                1386
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x20"
        },
        "778": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1396,
                1425
            ],
            "op": "SWAP1",
            "path": "2"
        },
        "779": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1396,
                1425
            ],
            "op": "DUP2",
            "path": "2"
        },
        "780": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1396,
                1425
            ],
            "op": "MSTORE",
            "path": "2"
        },
        "781": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1396,
                1425
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x40"
        },
        "783": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1396,
                1425
            ],
            "op": "DUP1",
            "path": "2"
        },
        "784": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1396,
                1425
            ],
            "op": "DUP4",
            "path": "2"
        },
        "785": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1396,
                1425
            ],
            "op": "KECCAK256",
            "path": "2"
        },
        "786": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1396,
                1445
            ],
            "op": "DUP1",
            "path": "2"
        },
        "787": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1396,
                1445
            ],
            "op": "SLOAD",
            "path": "2"
        },
        "788": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1396,
                1445
            ],
            "op": "SWAP5",
            "path": "2"
        },
        "789": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1396,
                1445
            ],
            "op": "DUP9",
            "path": "2"
        },
        "790": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1396,
                1445
            ],
            "op": "AND",
            "path": "2"
        },
        "791": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1396,
                1445
            ],
            "op": "SWAP5",
            "path": "2"
        },
        "792": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1396,
                1445
            ],
            "op": "DUP7",
            "path": "2"
        },
        "793": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1396,
                1445
            ],
            "op": "AND",
            "path": "2"
        },
        "794": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1396,
                1445
            ],
            "op": "DUP6",
            "path": "2"
        },
        "795": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1396,
                1445
            ],
            "op": "OR",
            "path": "2"
        },
        "796": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1396,
                1445
            ],
            "op": "SWAP1",
            "path": "2"
        },
        "797": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1396,
                1445
            ],
            "op": "SSTORE",
            "path": "2"
        },
        "798": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1455,
                1489
            ],
            "op": "DUP4",
            "path": "2",
            "statement": 7
        },
        "799": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1455,
                1489
            ],
            "op": "DUP4",
            "path": "2"
        },
        "800": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1455,
                1489
            ],
            "op": "MSTORE",
            "path": "2"
        },
        "801": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1455,
                1470
            ],
            "op": "PUSH1",
            "path": "2",
            "value": "0x3"
        },
        "803": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1455,
                1489
            ],
            "op": "SWAP1",
            "path": "2"
        },
        "804": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1455,
                1489
            ],
            "op": "SWAP2",
            "path": "2"
        },
        "805": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1455,
                1489
            ],
            "op": "MSTORE",
            "path": "2"
        },
        "806": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1455,
                1489
            ],
            "op": "DUP1",
            "path": "2"
        },
        "807": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1455,
                1489
            ],
            "op": "DUP3",
            "path": "2"
        },
        "808": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1455,
                1489
            ],
            "op": "KECCAK256",
            "path": "2"
        },
        "809": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1455,
                1504
            ],
            "op": "DUP1",
            "path": "2"
        },
        "810": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1455,
                1504
            ],
            "op": "SLOAD",
            "path": "2"
        },
        "811": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1455,
                1504
            ],
            "op": "SWAP1",
            "path": "2"
        },
        "812": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1455,
                1504
            ],
            "op": "SWAP5",
            "path": "2"
        },
        "813": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1455,
                1504
            ],
            "op": "AND",
            "path": "2"
        },
        "814": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1455,
                1504
            ],
            "op": "DUP6",
            "path": "2"
        },
        "815": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1455,
                1504
            ],
            "op": "OR",
            "path": "2"
        },
        "816": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1455,
                1504
            ],
            "op": "SWAP1",
            "path": "2"
        },
        "817": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1455,
                1504
            ],
            "op": "SWAP4",
            "path": "2"
        },
        "818": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1455,
                1504
            ],
            "op": "SSTORE",
            "path": "2"
        },
        "819": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1519,
                1570
            ],
            "op": "SWAP2",
            "path": "2",
            "statement": 8
        },
        "820": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1519,
                1570
            ],
            "op": "MLOAD",
            "path": "2"
        },
        "821": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1261,
                1342
            ],
            "op": "SWAP4",
            "path": "2"
        },
        "822": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1261,
                1342
            ],
            "op": "SWAP5",
            "path": "2"
        },
        "823": {
            "op": "POP"
        },
        "824": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1352,
                1386
            ],
            "op": "SWAP2",
            "path": "2"
        },
        "825": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1352,
                1386
            ],
            "op": "SWAP3",
            "path": "2"
        },
        "826": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1519,
                1570
            ],
            "op": "PUSH32",
            "path": "2",
            "value": "0x213D74B083ED8700F78FE5679EE5C8F8E4C05AA0CEF994E00E09A3FE0AF17E35"
        },
        "859": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1519,
                1570
            ],
            "op": "SWAP2",
            "path": "2"
        },
        "860": {
            "op": "SWAP1"
        },
        "861": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1519,
                1570
            ],
            "op": "LOG3",
            "path": "2"
        },
        "862": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1126,
                1577
            ],
            "op": "POP",
            "path": "2"
        },
        "863": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "offset": [
                1071,
                1577
            ],
            "op": "POP",
            "path": "2"
        },
        "864": {
            "fn": "AstroSwapFactory.addTokenExchange",
            "jump": "o",
            "offset": [
                1071,
                1577
            ],
            "op": "JUMP",
            "path": "2"
        },
        "865": {
            "op": "JUMPDEST"
        },
        "866": {
            "op": "PUSH2",
            "value": "0x1580"
        },
        "869": {
            "op": "DUP1"
        },
        "870": {
            "op": "PUSH2",
            "value": "0x3B8"
        },
        "873": {
            "op": "DUP4"
        },
        "874": {
            "op": "CODECOPY"
        },
        "875": {
            "op": "ADD"
        },
        "876": {
            "op": "SWAP1"
        },
        "877": {
            "jump": "o",
            "op": "JUMP"
        },
        "878": {
            "op": "JUMPDEST"
        },
        "879": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "881": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "883": {
            "op": "DUP3"
        },
        "884": {
            "op": "DUP5"
        },
        "885": {
            "op": "SUB"
        },
        "886": {
            "op": "SLT"
        },
        "887": {
            "op": "ISZERO"
        },
        "888": {
            "op": "PUSH2",
            "value": "0x380"
        },
        "891": {
            "op": "JUMPI"
        },
        "892": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "894": {
            "op": "DUP1"
        },
        "895": {
            "op": "REVERT"
        },
        "896": {
            "op": "JUMPDEST"
        },
        "897": {
            "op": "DUP2"
        },
        "898": {
            "op": "CALLDATALOAD"
        },
        "899": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "901": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "903": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "905": {
            "op": "SHL"
        },
        "906": {
            "op": "SUB"
        },
        "907": {
            "op": "DUP2"
        },
        "908": {
            "op": "AND"
        },
        "909": {
            "op": "DUP2"
        },
        "910": {
            "op": "EQ"
        },
        "911": {
            "op": "PUSH2",
            "value": "0x397"
        },
        "914": {
            "op": "JUMPI"
        },
        "915": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "917": {
            "op": "DUP1"
        },
        "918": {
            "op": "REVERT"
        },
        "919": {
            "op": "JUMPDEST"
        },
        "920": {
            "op": "SWAP4"
        },
        "921": {
            "op": "SWAP3"
        },
        "922": {
            "op": "POP"
        },
        "923": {
            "op": "POP"
        },
        "924": {
            "op": "POP"
        },
        "925": {
            "jump": "o",
            "op": "JUMP"
        },
        "926": {
            "op": "JUMPDEST"
        },
        "927": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "929": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "931": {
            "op": "DUP3"
        },
        "932": {
            "op": "DUP5"
        },
        "933": {
            "op": "SUB"
        },
        "934": {
            "op": "SLT"
        },
        "935": {
            "op": "ISZERO"
        },
        "936": {
            "op": "PUSH2",
            "value": "0x3B0"
        },
        "939": {
            "op": "JUMPI"
        },
        "940": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "942": {
            "op": "DUP1"
        },
        "943": {
            "op": "REVERT"
        },
        "944": {
            "op": "JUMPDEST"
        },
        "945": {
            "op": "POP"
        },
        "946": {
            "op": "CALLDATALOAD"
        },
        "947": {
            "op": "SWAP2"
        },
        "948": {
            "op": "SWAP1"
        },
        "949": {
            "op": "POP"
        },
        "950": {
            "jump": "o",
            "op": "JUMP"
        }
    },
    "sha1": "2203772680117358be7b08e3a8f98e285461e1ea",
    "source": "// contracts/AstroSwapFactory.sol\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./AstroSwapExchange.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n// Almost directly taken from https://github.com/Uniswap/old-solidity-contracts/blob/master/contracts/Exchange/UniswapFactory.sol\ncontract AstroSwapFactory {\n    uint256 public feeRate;\n    address[] public tokensAvailable;\n    mapping(address => address) public tokenToExchange;\n    mapping(address => address) public exchangeToToken;\n\n    constructor(uint256 _fee) {\n        feeRate = _fee;\n    }\n\n    event TokenExchangeAdded(address indexed tokenExchange, address indexed tokenAddress);\n\n    function convertTokenToExchange(address token) public view returns (address exchange) {\n        return tokenToExchange[token];\n    }\n\n    function convertExchangeToToken(address exchange) public view returns (address token) {\n        return exchangeToToken[exchange];\n    }\n\n    function exchangeCount() public view returns (uint256 count) {\n        return tokensAvailable.length;\n    }\n\n    function addTokenExchange(address tokenAddress) public {\n        require(tokenToExchange[tokenAddress] == address(0), \"Allready added\");\n        require(tokenAddress != address(0));\n        AstroSwapExchange exchange = new AstroSwapExchange(IERC20(tokenAddress), feeRate);\n        tokensAvailable.push(tokenAddress);\n        tokenToExchange[tokenAddress] = address(exchange);\n        exchangeToToken[address(exchange)] = tokenAddress;\n        emit TokenExchangeAdded(address(exchange), tokenAddress);\n    }\n}",
    "sourceMap": "313:1266:2:-:0;;;524:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;560:7;:14;313:1266;;14:184:3;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:3;;14:184;-1:-1:-1;14:184:3:o;:::-;313:1266:2;;;;;;",
    "sourcePath": "contracts/AstroSwapFactory.sol",
    "type": "contract",
    "deployment": {
        "address": "0x3E8b17b001990033CB272661ca4b2a3A7018EbB9",
        "chainid": "4",
        "blockHeight": 10062156
    }
}